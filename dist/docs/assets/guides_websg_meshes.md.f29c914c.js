import{_ as s,o as a,c as n,O as l}from"./chunks/framework.c0965656.js";const i=JSON.parse('{"title":"Meshes","description":"","frontmatter":{},"headers":[],"relativePath":"guides/websg/meshes.md","filePath":"guides/websg/meshes.md"}'),o={name:"guides/websg/meshes.md"},p=l(`<h1 id="meshes" tabindex="-1">Meshes <a class="header-anchor" href="#meshes" aria-label="Permalink to &quot;Meshes&quot;">​</a></h1><p><code>Mesh</code> objects represent 3D objects with one or more mesh primitives. Each primitive defines geometry that can be drawn with a material.</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// Create a new Mesh object</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> mesh </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> world</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createMesh</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// You can then create a node with the new mesh</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> node </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> world</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createNode</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">mesh</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> mesh</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Alternatively, you can set the mesh after creation</span></span>
<span class="line"><span style="color:#A6ACCD;">node</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">mesh </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> mesh</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h2 id="accessor" tabindex="-1">Accessor <a class="header-anchor" href="#accessor" aria-label="Permalink to &quot;Accessor&quot;">​</a></h2><p>The <code>Accessor</code> class provides a way to read and write to a given <code>ArrayBuffer</code>. Accessors are used to programatically construct mesh primitives.</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// Assuming you have a ArrayBuffer object</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> arrayBuffer </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ArrayBuffer</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1024</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Create a new Accessor object</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> accessor </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> world</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createAccessorFrom</span><span style="color:#A6ACCD;">(arrayBuffer</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> WebSG</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">AccessorType</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">SCALAR</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> WebSG</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ComponentType</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">FLOAT</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">128</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// You can then use the Accessor to read and write data</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> value </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> accessor</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getScalar</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">accessor</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setScalar</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> value </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h2 id="primitives" tabindex="-1">Primitives <a class="header-anchor" href="#primitives" aria-label="Permalink to &quot;Primitives&quot;">​</a></h2><p>The <code>MeshPrimitive</code> object represents a single geometric primitive, which is used to create a <code>Mesh</code>. Many primitivess can be added to a mesh. Each primitive has a mode, an <code>Accessor</code> for the vertex positions, and optionally accessors for other attributes such as normals, colors, and texture coordinates.</p><p>The <code>Mode</code> type represents the type of primitive to render. It can be one of the following: <code>POINTS</code>, <code>LINES</code>, <code>LINE_LOOP</code>, <code>LINE_STRIP</code>, <code>TRIANGLES</code>, <code>TRIANGLE_STRIP</code>, <code>TRIANGLE_FAN</code>.</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// Create a new MeshPrimitive object</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> primitive </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">mode</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> WebSG</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">MeshPrimitiveMode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">TRIANGLES</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">indices</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> world</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createAccessorFrom</span><span style="color:#A6ACCD;">(indices</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">buffer</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">componentType</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> WebSG</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">AccessorComponentType</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Uint16</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">count</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> indicesCount</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> WebSG</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">AccessorType</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">SCALAR</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">attributes</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">POSITION</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> world</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createAccessorFrom</span><span style="color:#A6ACCD;">(positions</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">buffer</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">componentType</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> WebSG</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">AccessorComponentType</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Float32</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">count</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> positionsCount</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> WebSG</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">AccessorType</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">VEC3</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">dynamic</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">NORMAL</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> world</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createAccessorFrom</span><span style="color:#A6ACCD;">(normals</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">buffer</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">componentType</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> WebSG</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">AccessorComponentType</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Float32</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">count</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> normalsCount</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> WebSG</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">AccessorType</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">VEC3</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">normalized</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">dynamic</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">TEXCOORD_0</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> world</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createAccessorFrom</span><span style="color:#A6ACCD;">(uvs</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">buffer</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">componentType</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> WebSG</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">AccessorComponentType</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Float32</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">count</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> uvsCount</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> WebSG</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">AccessorType</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">VEC2</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// You can then add the primitive to a mesh</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> mesh </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> world</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createMesh</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">primitives</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [primitive]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h2 id="materials" tabindex="-1">Materials <a class="header-anchor" href="#materials" aria-label="Permalink to &quot;Materials&quot;">​</a></h2><p><code>Material</code> objects represent materials in a scene. It defines the appearance of a surface when rendered. This includes properties like color, texture, shininess, transparency, and more.</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// Create a new Material object</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> material </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> world</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createMaterial</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">baseColorFactor</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// aRGB Red color</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">metallicFactor</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Fully metallic</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">roughnessFactor</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Completely smooth</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// You can then set the material of a MeshPrimitive</span></span>
<span class="line"><span style="color:#A6ACCD;">mesh</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">primitives[</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">material </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> material</span><span style="color:#89DDFF;">;</span></span></code></pre></div>`,13),e=[p];function t(c,r,D,y,A,F){return a(),n("div",null,e)}const d=s(o,[["render",t]]);export{i as __pageData,d as default};
