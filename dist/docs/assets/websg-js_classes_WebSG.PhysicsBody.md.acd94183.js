import{_ as e,o as t,c as a,O as s}from"./chunks/framework.c0965656.js";const y=JSON.parse('{"title":"Class: PhysicsBody","description":"","frontmatter":{},"headers":[],"relativePath":"websg-js/classes/WebSG.PhysicsBody.md","filePath":"websg-js/classes/WebSG.PhysicsBody.md"}'),o={name:"websg-js/classes/WebSG.PhysicsBody.md"},r=s('<h1 id="class-physicsbody" tabindex="-1">Class: PhysicsBody <a class="header-anchor" href="#class-physicsbody" aria-label="Permalink to &quot;Class: PhysicsBody&quot;">​</a></h1><p><a href="./../modules/WebSG.html">WebSG</a>.PhysicsBody</p><p>A PhysicsBody is a behavior that can be added to a node to give it a physical presence in the world and interact with other physics bodies.</p><h2 id="table-of-contents" tabindex="-1">Table of contents <a class="header-anchor" href="#table-of-contents" aria-label="Permalink to &quot;Table of contents&quot;">​</a></h2><h3 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-label="Permalink to &quot;Constructors&quot;">​</a></h3><ul><li><a href="./WebSG.PhysicsBody.html#constructor">constructor</a></li></ul><h3 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h3><ul><li><a href="./WebSG.PhysicsBody.html#applyimpulse">applyImpulse</a></li></ul><h2 id="constructors-1" tabindex="-1">Constructors <a class="header-anchor" href="#constructors-1" aria-label="Permalink to &quot;Constructors&quot;">​</a></h2><h3 id="constructor" tabindex="-1">constructor <a class="header-anchor" href="#constructor" aria-label="Permalink to &quot;constructor&quot;">​</a></h3><p>• <strong>new PhysicsBody</strong>()</p><h2 id="methods-1" tabindex="-1">Methods <a class="header-anchor" href="#methods-1" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="applyimpulse" tabindex="-1">applyImpulse <a class="header-anchor" href="#applyimpulse" aria-label="Permalink to &quot;applyImpulse&quot;">​</a></h3><p>▸ <strong>applyImpulse</strong>(<code>impulse</code>): <code>undefined</code></p><p>Applies an impulse at the center of mass of this physics body.</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>impulse</code></td><td style="text-align:left;"><code>ArrayLike</code>&lt;<code>number</code>&gt;</td><td style="text-align:left;">The impulse to apply.</td></tr></tbody></table><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>undefined</code></p><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/dessangithub/thirdroom/blob/ef458977/packages/websg-types/types/websg.d.ts#L928" target="_blank" rel="noreferrer">websg.d.ts:928</a></p>',21),l=[r];function i(d,h,n,c,p,u){return t(),a("div",null,l)}const m=e(o,[["render",i]]);export{y as __pageData,m as default};
