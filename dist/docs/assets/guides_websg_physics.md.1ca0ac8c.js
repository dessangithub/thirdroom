import{_ as s,o as n,c as a,O as o}from"./chunks/framework.c0965656.js";const A=JSON.parse('{"title":"Physics","description":"","frontmatter":{},"headers":[],"relativePath":"guides/websg/physics.md","filePath":"guides/websg/physics.md"}'),l={name:"guides/websg/physics.md"},p=o(`<h1 id="physics" tabindex="-1">Physics <a class="header-anchor" href="#physics" aria-label="Permalink to &quot;Physics&quot;">​</a></h1><p>Physics in <code>WebSG</code> is run using the Rapier physics engine.</p><h2 id="colliders" tabindex="-1">Colliders <a class="header-anchor" href="#colliders" aria-label="Permalink to &quot;Colliders&quot;">​</a></h2><p>The <code>Collider</code> object represents a shape that can be used for collision detection in a physics simulation. It could be attached to a <code>Node</code> to give it a physical presence in the world.</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> boxNode </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> world</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createNode</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">mesh</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> world</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createBoxMesh</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">size</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">segments</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">collider</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> world</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createCollider</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">box</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">size</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h2 id="physics-body" tabindex="-1">Physics Body <a class="header-anchor" href="#physics-body" aria-label="Permalink to &quot;Physics Body&quot;">​</a></h2><p>The <code>PhysicsBody</code> represents a physical body in the physics simulation. It has properties like mass, velocity, and angular velocity, and needs to have one or more <code>Collider</code> objects attached to it for collision detection.</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// Add a new Rigid PhysicsBody object to the boxNode</span></span>
<span class="line"><span style="color:#A6ACCD;">boxNode</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addPhysicsBody</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> WebSG</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">PhysicsBodyType</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Rigid </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Set some properties of the body</span></span>
<span class="line"><span style="color:#A6ACCD;">boxNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">physicsBody</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">mass </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 1 kg</span></span>
<span class="line"><span style="color:#A6ACCD;">boxNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">physicsBody</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">linearVelocity </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Initial velocity is 0</span></span></code></pre></div><h2 id="collision-listeners" tabindex="-1">Collision Listeners <a class="header-anchor" href="#collision-listeners" aria-label="Permalink to &quot;Collision Listeners&quot;">​</a></h2><p><code>CollisionListener</code> objects are used to listen for collision events between <code>PhysicsBody</code> objects.</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// Create a new CollisionListener object</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> collisionListener </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> world</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createCollisionListener</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Iterate over the collisions queue</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> (</span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> collision </span><span style="color:#89DDFF;">of</span><span style="color:#A6ACCD;"> collisionListener</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">collisions</span><span style="color:#A6ACCD;">()) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">collision</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">started</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">continue</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// Colliding nodes can be accessed via nodeA and nodeB properties on the collision object</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">collision</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">nodeA</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">collision</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">nodeB</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div>`,11),e=[p];function t(c,r,y,i,D,C){return n(),a("div",null,e)}const d=s(l,[["render",t]]);export{A as __pageData,d as default};
