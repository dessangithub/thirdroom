import{_ as s,o as a,c as n,O as e}from"./chunks/framework.c0965656.js";const h=JSON.parse('{"title":"Scene Graph","description":"","frontmatter":{},"headers":[],"relativePath":"guides/websg/scenegraph.md","filePath":"guides/websg/scenegraph.md"}'),o={name:"guides/websg/scenegraph.md"},l=e(`<h1 id="scene-graph" tabindex="-1">Scene Graph <a class="header-anchor" href="#scene-graph" aria-label="Permalink to &quot;Scene Graph&quot;">​</a></h1><p>WebSG is, first and foremost, a scene graph API. A scene graph is a structured representation of a visual scene. It organizes objects in a hierarchical manner, capturing their relationships and attributes, such as relative positions and sizes. This allows for more efficient rendering, manipulation, and understanding of complex visual data.</p><h2 id="environment" tabindex="-1">Environment <a class="header-anchor" href="#environment" aria-label="Permalink to &quot;Environment&quot;">​</a></h2><p>The <code>world.environment</code> object is the root <code>scene</code> of the chosen glTF document for the currently loaded world. It provides a way to control and manipulate the environmental properties of the 3D world, and can have nodes attached to it.</p><h2 id="adding-and-removing-nodes" tabindex="-1">Adding and Removing Nodes <a class="header-anchor" href="#adding-and-removing-nodes" aria-label="Permalink to &quot;Adding and Removing Nodes&quot;">​</a></h2><p>The <code>environment</code> has methods to add and remove <code>Node</code> objects from the scene.</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// Create a new Node object</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> node </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> world</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createNode</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Add the node to the scene</span></span>
<span class="line"><span style="color:#A6ACCD;">world</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">environment</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addNode</span><span style="color:#A6ACCD;">(node)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Later, you can remove the node from the scene</span></span>
<span class="line"><span style="color:#A6ACCD;">world</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">environment</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">removeNode</span><span style="color:#A6ACCD;">(node)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>The <code>Node</code> object also has methods to add and remove children from nodes themselves. This allows you to build a hierarchy of nodes, aka a scene graph.</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// Create a new Node object</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> parentNode </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> world</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createNode</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> childNode </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> world</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createNode</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Add the child node to the parent node</span></span>
<span class="line"><span style="color:#A6ACCD;">parentNode</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addChild</span><span style="color:#A6ACCD;">(childNode)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Later, you can remove the child node from the parent node</span></span>
<span class="line"><span style="color:#A6ACCD;">parentNode</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">removeChild</span><span style="color:#A6ACCD;">(childNode)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h2 id="static-objects" tabindex="-1">Static Objects <a class="header-anchor" href="#static-objects" aria-label="Permalink to &quot;Static Objects&quot;">​</a></h2><p>The <code>isStatic</code> property of the <code>Node</code> is a boolean that indicates whether the node is static. If a node is static, it means that it does not move or change over time. This can be useful for optimization purposes, as static nodes can be treated differently by the rendering and physics systems.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Nodes are <strong>not</strong> static by default.</p></div><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// Create a new Node object</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> node </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> world</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createNode</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Set the node to be static</span></span>
<span class="line"><span style="color:#A6ACCD;">node</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">isStatic </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Later, you can check if the node is static</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (node</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">isStatic) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">The node is static.</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">The node is not static.</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div>`,13),t=[l];function p(c,r,i,d,y,D){return a(),n("div",null,t)}const A=s(o,[["render",p]]);export{h as __pageData,A as default};
