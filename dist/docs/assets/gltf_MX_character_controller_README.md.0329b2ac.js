import{_ as a,o as e,c as s,O as o}from"./chunks/framework.c0965656.js";const u=JSON.parse('{"title":"MX_character_controller","description":"","frontmatter":{},"headers":[],"relativePath":"gltf/MX_character_controller/README.md","filePath":"gltf/MX_character_controller/README.md"}'),n={name:"gltf/MX_character_controller/README.md"},t=o(`<h1 id="mx-character-controller" tabindex="-1">MX_character_controller <a class="header-anchor" href="#mx-character-controller" aria-label="Permalink to &quot;MX_character_controller&quot;">​</a></h1><h2 id="contributors" tabindex="-1">Contributors <a class="header-anchor" href="#contributors" aria-label="Permalink to &quot;Contributors&quot;">​</a></h2><ul><li>Robert Long, The Matrix.org Foundation</li></ul><h2 id="status" tabindex="-1">Status <a class="header-anchor" href="#status" aria-label="Permalink to &quot;Status&quot;">​</a></h2><p>Draft</p><h2 id="dependencies" tabindex="-1">Dependencies <a class="header-anchor" href="#dependencies" aria-label="Permalink to &quot;Dependencies&quot;">​</a></h2><p>Written against the glTF 2.0 spec.</p><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p>This extension allows for specifying the character controller to be used in an environment.</p><h2 id="gltf-schema-updates" tabindex="-1">glTF Schema Updates <a class="header-anchor" href="#gltf-schema-updates" aria-label="Permalink to &quot;glTF Schema Updates&quot;">​</a></h2><p>Usage of the extension must be listed in the <code>extensionsUsed</code> array:</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">extensionsUsed</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">MX_character_controller</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">]</span></span></code></pre></div><p>The <code>MX_character_controller</code> extension can be added to any <code>scene</code> property.</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">scenes</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">extensions</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">MX_character_controller</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F78C6C;">type</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">first-person</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">]</span></span></code></pre></div><p>The character controller <code>type</code> can be set to <code>first-person</code> or <code>fly</code>. Using <code>first-person</code> will spawn the player with a first person character controller with gravity and collision. The <code>fly</code> value spawns you with a first person flying character controller where you move forward in the direction that you are looking and no gravity is applied. Implementations can choose exactly how this character controller works. It&#39;s intended as a hint as to how you might navigate this scene.</p><h3 id="json-schema" tabindex="-1">JSON Schema <a class="header-anchor" href="#json-schema" aria-label="Permalink to &quot;JSON Schema&quot;">​</a></h3><p><a href="./schema/scene.MX_character_controller.schema.json">scene.MX_character_controller.schema.json</a></p><h2 id="known-implementations" tabindex="-1">Known Implementations <a class="header-anchor" href="#known-implementations" aria-label="Permalink to &quot;Known Implementations&quot;">​</a></h2><ul><li><a href="https://thirdroom.io" target="_blank" rel="noreferrer">Third Room</a></li><li><a href="https://github.com/matrix-org/thirdroom-unity-exporter" target="_blank" rel="noreferrer">Third Room Unity Exporter</a></li></ul>`,19),l=[t];function r(c,p,i,h,d,D){return e(),s("div",null,l)}const F=a(n,[["render",r]]);export{u as __pageData,F as default};
