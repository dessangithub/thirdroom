import{_ as s,o as a,c as n,O as l}from"./chunks/framework.c0965656.js";const C=JSON.parse('{"title":"Interactables","description":"","frontmatter":{},"headers":[],"relativePath":"guides/websg/interactables.md","filePath":"guides/websg/interactables.md"}'),e={name:"guides/websg/interactables.md"},p=l(`<h1 id="interactables" tabindex="-1">Interactables <a class="header-anchor" href="#interactables" aria-label="Permalink to &quot;Interactables&quot;">​</a></h1><p>Nodes in a scene can be marked as having an interactable behavior. There are currently two different types of interactables that can be specified:</p><ul><li><strong>WebSG.InteractableType.Interactable</strong>: The object tracks if it&#39;s been pressed, held, or released.</li><li><strong>WebSG.InteractableType.Grabbable</strong>: The object is made grabbable and can be picked up and moved around.</li></ul><h2 id="interactable" tabindex="-1">Interactable <a class="header-anchor" href="#interactable" aria-label="Permalink to &quot;Interactable&quot;">​</a></h2><p>Interactables are used for any object that you want add a custom behavior to when interacted with. For example, you might want to add a button to toggle the lights in a room.</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">world</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">onload</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">lightSwitch</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">world</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">findNodeByName</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">LightSwitch</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// Note: LightSwitch must already have a collider and physics body defined</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">materialButton</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addInteractable</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// Default is InteractableType.Interactable</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">lightSwitchState</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">world</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">onupdate</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// Get the interactable pressed state.</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">lightSwitch</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">interactable</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">pressed</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">lightSwitchState</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">lightSwitchState</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;font-style:italic;">// Toggle the light</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre></div><h2 id="grabbable" tabindex="-1">Grabbable <a class="header-anchor" href="#grabbable" aria-label="Permalink to &quot;Grabbable&quot;">​</a></h2><p>Grabbables are used for any object that you want to be able to pick up and move around. For example, you might want to add a ball that you can pick up and throw.</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> ball </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> world</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createNode</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">mesh</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> sphereMesh</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// You must specify a collider and physics body before adding the grabbable interactable behavior</span></span>
<span class="line"><span style="color:#A6ACCD;">ball</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">collider </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> world</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createCollider</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> WebSG</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ColliderType</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Sphere</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">radius</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0.5</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Make sure the physics body is rigid so it moves when grabbed</span></span>
<span class="line"><span style="color:#A6ACCD;">ball</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addPhysicsBody</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> WebSG</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">PhysicsBodyType</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Rigid</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">mass</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Add the interactable behavior after adding the physics body</span></span>
<span class="line"><span style="color:#A6ACCD;">ball</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addInteractable</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> WebSG</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">InteractableType</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Grabbable</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Make the ball grabbable</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>For a more complete example, see <a href="./basketball/part-1.html#Grabbables-and-Interactables">Part 1 of the WebSG tutorial series</a>.</p>`,10),o=[p];function t(c,r,y,F,D,i){return a(),n("div",null,o)}const b=s(e,[["render",t]]);export{C as __pageData,b as default};
