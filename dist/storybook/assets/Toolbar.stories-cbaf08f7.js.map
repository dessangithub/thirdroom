{"version":3,"file":"Toolbar.stories-cbaf08f7.js","sources":["../../../src/ui/views/components/editor-toolbar/ToolbarButton.tsx","../../../res/ic/menu.svg","../../../src/ui/views/components/editor-toolbar/Toolbar.tsx"],"sourcesContent":["import classNames from \"classnames\";\nimport { ButtonHTMLAttributes, ReactNode, forwardRef } from \"react\";\n\nimport \"./ToolbarButton.css\";\nimport { Text } from \"../../../atoms/text/Text\";\n\ninterface ToolbarButtonProps {\n  className?: string;\n  active?: boolean;\n  outlined?: boolean;\n  before?: ReactNode;\n  after?: ReactNode;\n  children?: ReactNode;\n}\n\nexport const ToolbarButton = forwardRef<\n  HTMLButtonElement,\n  ToolbarButtonProps & ButtonHTMLAttributes<HTMLButtonElement>\n>(({ className, active, outlined, before, after, children, ...props }, ref) => (\n  <button\n    className={classNames(\n      \"ToolbarButton\",\n      {\n        \"ToolbarButton--ui-before\": before,\n        \"ToolbarButton--ui-after\": after,\n        \"ToolbarButton--outlined\": outlined,\n      },\n      className\n    )}\n    type=\"button\"\n    aria-pressed={active}\n    {...props}\n    ref={ref}\n  >\n    {before}\n    {typeof children === \"string\" ? (\n      <Text className=\"truncate\" variant=\"b3\" weight=\"semi-bold\">\n        {children}\n      </Text>\n    ) : (\n      children\n    )}\n    {after}\n  </button>\n));\n\ninterface ToolbarButtonGroupProps {\n  className?: string;\n  children?: ReactNode;\n}\n\nexport function ToolbarButtonGroup({ className, children }: ToolbarButtonGroupProps) {\n  return <div className={classNames(\"ToolbarButtonGroup\", className)}>{children}</div>;\n}\n\nexport function ToolbarButtonDivider() {\n  return <div className=\"ToolbarButtonDivider\" />;\n}\n","export default \"__VITE_ASSET__8a9d0cc8__\"","import { ReactNode } from \"react\";\nimport classNames from \"classnames\";\n\nimport \"./Toolbar.css\";\n\ninterface ToolbarProps {\n  className?: string;\n  left?: ReactNode;\n  center?: ReactNode;\n  right?: ReactNode;\n}\n\nexport function Toolbar({ className, center, left, right }: ToolbarProps) {\n  return (\n    <div className={classNames(\"Toolbar\", className)}>\n      <div className=\"grow basis-0 flex items-center\">{left}</div>\n      <div className=\"shrink-0 basis-0 flex items-center justify-center\">{center}</div>\n      <div className=\"grow basis-0 flex items-center justify-end\">{right}</div>\n    </div>\n  );\n}\n\ninterface ToolbarItemGroupProps {\n  className?: string;\n  children?: ReactNode;\n}\n\nexport function ToolbarItemGroup({ className, children }: ToolbarItemGroupProps) {\n  return <div className={classNames(\"ToolbarItemGroup\", className)}>{children}</div>;\n}\n"],"names":["ToolbarButton","forwardRef","className","active","outlined","before","after","children","props","ref","jsxs","classNames","jsx","Text","ToolbarButtonGroup","ToolbarButtonDivider","MenuIC","Toolbar","center","left","right","ToolbarItemGroup"],"mappings":"qVAeO,MAAAA,EAAAC,EAAAA,WAAA,CAAA,CAAA,UAAAC,EAAA,OAAAC,EAAA,SAAAC,EAAA,OAAAC,EAAA,MAAAC,EAAA,SAAAC,EAAA,GAAAC,CAAA,EAAAC,IAAAC,EAIL,SAAC,CAAA,UAAAC,EACY,gBACT,CACA,2BAAAN,EAC8B,0BAAAC,EACD,0BAAAF,CACA,EAC7BF,CACA,EACF,KAAA,SACK,eAAAC,EACS,GAAAK,EACV,IAAAC,EACJ,SAAA,CAECJ,EAAA,OAAAE,GAAA,SAAAK,EAAAC,EAAA,CAAA,UAAA,WAAA,QAAA,KAAA,OAAA,YAAA,SAAAN,CAAA,CAAA,EAAAA,EAMCD,CAED,CAAA,CACH,CAAA,EAQK,SAAAQ,EAAA,CAAA,UAAAZ,EAAA,SAAAK,GAAA,CACL,OAAAK,EAAA,MAAA,CAAA,UAAAD,EAAA,qBAAAT,CAAA,EAAA,SAAAK,CAAA,CAAA,CACF,CAEO,SAAAQ,GAAA,CACL,OAAAH,EAAA,MAAA,CAAA,UAAA,sBAAA,CAAA,CACF,ixBCzDA,MAAeI,EAAA,sCCYR,SAAAC,EAAA,CAAA,UAAAf,EAAA,OAAAgB,EAAA,KAAAC,EAAA,MAAAC,CAAA,EAAA,CACL,OAAAV,EAAA,MAAA,CAAA,UAAAC,EAAA,UAAAT,CAAA,EAAA,SAAA,CAEIU,EAAA,MAAA,CAAA,UAAA,iCAAA,SAAAO,EAAA,EAAsDP,EAAA,MAAA,CAAA,UAAA,oDAAA,SAAAM,EAAA,EACqBN,EAAA,MAAA,CAAA,UAAA,6CAAA,SAAAQ,EAAA,CACR,CAAA,CAAA,CAGzE,CAOO,SAAAC,EAAA,CAAA,UAAAnB,EAAA,SAAAK,GAAA,CACL,OAAAK,EAAA,MAAA,CAAA,UAAAD,EAAA,mBAAAT,CAAA,EAAA,SAAAK,CAAA,CAAA,CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}