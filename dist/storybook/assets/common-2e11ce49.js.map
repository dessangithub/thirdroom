{"version":3,"file":"common-2e11ce49.js","sources":["../../../src/ui/utils/common.ts"],"sourcesContent":["export function getImageDimension(file: Blob): Promise<{\n  w: number;\n  h: number;\n}> {\n  return new Promise((resolve) => {\n    const img = new Image();\n    img.onload = async () => {\n      resolve({\n        w: img.width,\n        h: img.height,\n      });\n    };\n    img.src = URL.createObjectURL(file);\n  });\n}\n\nexport function bytesToSize(bytes: number) {\n  const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\"];\n  if (bytes === 0) return \"0 KB\";\n  const i = Math.floor(Math.log(bytes) / Math.log(1024));\n  if (i === 0) return `${bytes} ${sizes[i]}`;\n  return `${(bytes / 1024 ** i).toFixed(1)} ${sizes[i]}`;\n}\n\nexport function getPercentage(total: number, value: number) {\n  if (total === 0) return 0;\n  return Math.round((value / total) * 100);\n}\n\nexport function copyToClipboard(text: string) {\n  if (navigator.clipboard) {\n    navigator.clipboard.writeText(text);\n  } else {\n    const host = document.body;\n    const copyInput = document.createElement(\"input\");\n    copyInput.style.position = \"fixed\";\n    copyInput.style.opacity = \"0\";\n    copyInput.value = text;\n    host.append(copyInput);\n\n    copyInput.select();\n    copyInput.setSelectionRange(0, 99999);\n    document.execCommand(\"Copy\");\n    copyInput.remove();\n  }\n}\n\nexport function isMobileDevice() {\n  return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n}\n\nexport function loadImageUrl(url: string): Promise<string> {\n  return new Promise((resolve) => {\n    const image = document.createElement(\"img\");\n    image.onload = () => {\n      resolve(url);\n    };\n    image.src = url;\n  });\n}\n\nexport function linkifyText(body: string) {\n  const msgParts = [];\n\n  const LINK_REGEX = /\\b((https?:\\/\\/\\S+)|(#\\S+:\\S+))[^\\s.,!?)\\]]/g;\n  const links = body.match(LINK_REGEX);\n  if (!links) {\n    msgParts.push(document.createTextNode(body));\n    return msgParts;\n  }\n\n  let bodyStr = body;\n  for (let index = 0; index < links.length; index += 1) {\n    const link = links[index];\n    const linkIndex = bodyStr.indexOf(link);\n    msgParts.push(document.createTextNode(bodyStr.slice(0, linkIndex)));\n\n    const linkEl = document.createElement(\"a\");\n    linkEl.href = link.startsWith(\"#\") ? `https://matrix.to/#/${link}` : link;\n    linkEl.target = \"_blank\";\n    linkEl.rel = \"noopener noreferrer\";\n    linkEl.textContent = link;\n    msgParts.push(linkEl);\n\n    bodyStr = bodyStr.slice(linkIndex + link.length);\n  }\n\n  msgParts.push(document.createTextNode(bodyStr));\n  return msgParts;\n}\n\nexport function userToEngineChannel(channel: number): number {\n  return (1 / 255) * channel;\n}\nexport function engineToUserChannel(channel: number): number {\n  return Math.round(channel * 255);\n}\nexport function userToEngineAlpha(channel: number): number {\n  return (1 / 100) * channel;\n}\nexport function engineToUserAlpha(channel: number): number {\n  return Math.round(channel * 100);\n}\n\nexport function convertRGB(rgb: Float32Array, convertChannel?: (channel: number) => number): Float32Array {\n  return new Float32Array([\n    convertChannel?.(rgb[0]) ?? rgb[0],\n    convertChannel?.(rgb[1]) ?? rgb[1],\n    convertChannel?.(rgb[2]) ?? rgb[2],\n  ]);\n}\nexport function convertRGBA(\n  rgba: Float32Array,\n  convertChannel?: (channel: number) => number,\n  convertAlpha?: (channel: number) => number\n): Float32Array {\n  return new Float32Array([\n    convertChannel?.(rgba[0]) ?? rgba[0],\n    convertChannel?.(rgba[1]) ?? rgba[1],\n    convertChannel?.(rgba[2]) ?? rgba[2],\n    convertAlpha?.(rgba[3]) ?? rgba[3],\n  ]);\n}\n\nexport function inputFocused(): boolean {\n  return document.activeElement?.tagName.toLowerCase() === \"input\";\n}\n\nexport function saveData(blob: Blob, fileName: string) {\n  const a = document.createElement(\"a\");\n  const url = window.URL.createObjectURL(blob);\n  document.body.appendChild(a);\n  a.style.display = \"none\";\n  a.href = url;\n  a.download = fileName;\n  a.click();\n  window.URL.revokeObjectURL(url);\n  document.body.removeChild(a);\n}\n\nexport function clamp(value: number, min?: number, max?: number): number {\n  if (typeof min === \"number\" && value < min) return min;\n  if (typeof max === \"number\" && value > max) return max;\n  return value;\n}\n\nexport function camelizeVariableName(str: string): string {\n  return str\n    .replace(/(?:^\\w|[A-Z]|\\b\\w)/g, (word, index) => {\n      return index === 0 ? word.toLowerCase() : word.toUpperCase();\n    })\n    .replace(/([^a-zA-Z0-9_$])+/g, \"\");\n}\n"],"names":["bytesToSize","bytes","sizes","i","getPercentage","total","value","userToEngineAlpha","channel","engineToUserAlpha","convertRGBA","rgba","convertChannel","convertAlpha","clamp","min","max"],"mappings":"AAgBO,SAASA,EAAYC,EAAe,CACzC,MAAMC,EAAQ,CAAC,QAAS,KAAM,KAAM,KAAM,IAAI,EAC9C,GAAID,IAAU,EAAU,MAAA,OAClB,MAAAE,EAAI,KAAK,MAAM,KAAK,IAAIF,CAAK,EAAI,KAAK,IAAI,IAAI,CAAC,EACrD,OAAIE,IAAM,EAAU,GAAGF,KAASC,EAAMC,CAAC,IAChC,IAAIF,EAAQ,MAAQE,GAAG,QAAQ,CAAC,KAAKD,EAAMC,CAAC,GACrD,CAEgB,SAAAC,EAAcC,EAAeC,EAAe,CAC1D,OAAID,IAAU,EAAU,EACjB,KAAK,MAAOC,EAAQD,EAAS,GAAG,CACzC,CAsEO,SAASE,EAAkBC,EAAyB,CACzD,MAAQ,GAAI,IAAOA,CACrB,CACO,SAASC,EAAkBD,EAAyB,CAClD,OAAA,KAAK,MAAMA,EAAU,GAAG,CACjC,CASgB,SAAAE,EACdC,EACAC,EACAC,EACc,CACd,OAAO,IAAI,aAAa,EACtBD,GAAA,YAAAA,EAAiBD,EAAK,CAAC,KAAMA,EAAK,CAAC,GACnCC,GAAA,YAAAA,EAAiBD,EAAK,CAAC,KAAMA,EAAK,CAAC,GACnCC,GAAA,YAAAA,EAAiBD,EAAK,CAAC,KAAMA,EAAK,CAAC,GACnCE,GAAA,YAAAA,EAAeF,EAAK,CAAC,KAAMA,EAAK,CAAC,CAAA,CAClC,CACH,CAkBgB,SAAAG,EAAMR,EAAeS,EAAcC,EAAsB,CACnE,OAAA,OAAOD,GAAQ,UAAYT,EAAQS,EAAYA,EAC/C,OAAOC,GAAQ,UAAYV,EAAQU,EAAYA,EAC5CV,CACT"}