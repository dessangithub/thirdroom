{"version":3,"file":"SelectInput.stories-8fa3a4f0.js","sources":["../../../src/ui/views/components/property-panel/SelectInput.tsx"],"sourcesContent":["import { ReactNode } from \"react\";\nimport classNames from \"classnames\";\nimport { useSelect } from \"downshift\";\n\nimport { Icon } from \"../../../atoms/icon/Icon\";\nimport { Text } from \"../../../atoms/text/Text\";\nimport \"./SelectInput.css\";\nimport \"./ComboInput.css\";\nimport ChevronBottomIC from \"./../../../../../res/ic/chevron-bottom.svg\";\nimport ChevronTopIC from \"./../../../../../res/ic/chevron-top.svg\";\nimport { MenuItem } from \"../../../atoms/menu/MenuItem\";\nimport { Scroll } from \"../../../atoms/scroll/Scroll\";\n\ninterface SelectInputProps<T> {\n  before?: ReactNode;\n  options: { value: T; label: string }[];\n  disabled?: boolean;\n  value: T;\n  onChange: (value: T) => void;\n}\n\nexport function SelectInput<T>({ before, options, disabled, value, onChange }: SelectInputProps<T>) {\n  const selectedOption = options.find((option) => option.value === value);\n\n  const { isOpen, highlightedIndex, getToggleButtonProps, getMenuProps, getItemProps } = useSelect({\n    selectedItem: selectedOption,\n    items: options,\n    itemToString: (item) => item?.label ?? \"\",\n    onSelectedItemChange: (change) => {\n      if (change.selectedItem) onChange(change.selectedItem.value);\n    },\n  });\n\n  return (\n    <div className=\"ComboInput\">\n      <div className={classNames(\"SelectInput\", { \"SelectInput--disabled\": disabled }, \"flex items-center gap-xxs\")}>\n        {before}\n        <button\n          className=\"SelectInput__button grow flex items-center gap-xxs\"\n          {...getToggleButtonProps()}\n          type=\"button\"\n          disabled={disabled}\n        >\n          <Text className=\"grow truncate\" variant=\"b3\">\n            {selectedOption?.label ?? \"Select Item\"}\n          </Text>\n          <Icon src={isOpen ? ChevronTopIC : ChevronBottomIC} size=\"sm\" />\n        </button>\n      </div>\n      <div className=\"ComboInput__menu\" {...getMenuProps()}>\n        {isOpen && (\n          <Scroll className=\"ComboInput__menu-scroll\">\n            {options.map((option, index) => (\n              <MenuItem\n                variant={highlightedIndex === index ? \"primary\" : \"surface\"}\n                key={option.label + index}\n                {...getItemProps({ item: option, index })}\n              >\n                {option.label}\n              </MenuItem>\n            ))}\n          </Scroll>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"names":["SelectInput","before","options","disabled","value","onChange","selectedOption","option","isOpen","highlightedIndex","getToggleButtonProps","getMenuProps","getItemProps","useSelect","item","change","jsxs","classNames","jsx","Text","Icon","ChevronTopIC","ChevronBottomIC","Scroll","index","MenuItem"],"mappings":"onBAqBO,SAAAA,EAAA,CAAA,OAAAC,EAAA,QAAAC,EAAA,SAAAC,EAAA,MAAAC,EAAA,SAAAC,GAAA,CACL,MAAAC,EAAAJ,EAAA,KAAAK,GAAAA,EAAA,QAAAH,CAAA,EAEA,CAAA,OAAAI,EAAA,iBAAAC,EAAA,qBAAAC,EAAA,aAAAC,EAAA,aAAAC,CAAA,EAAAC,EAAA,CAAiG,aAAAP,EACjF,MAAAJ,EACP,aAAAY,IAAAA,GAAA,YAAAA,EAAA,QAAA,GACgC,qBAAAC,GAAA,CAErCA,EAAA,cAAyBV,EAAAU,EAAA,aAAA,KAAA,CAAkC,CAC7D,CAAA,EAGF,OAAAC,EAAA,MAAA,CAAA,UAAA,aAAA,SAAA,CAEIA,EAAA,MAAA,CAAA,UAAAC,EAAA,cAAA,CAAA,wBAAAd,CAAA,EAAA,2BAAA,EAAA,SAAA,CACGF,EAAAe,EACD,SAAC,CAAA,UAAA,qDACW,GAAAN,EAAA,EACe,KAAA,SACpB,SAAAP,EACL,SAAA,CAEAe,EAAAC,EAAA,CAAA,UAAA,gBAAA,QAAA,KAAA,UAAAb,GAAA,YAAAA,EAAA,QAAA,aAAA,CAAA,EAEAY,EAAAE,EAAA,CAAA,IAAAZ,EAAAa,EAAAC,EAAA,KAAA,KAAA,CAC8D,CAAA,CAAA,CAChE,EAAA,EACFJ,EAAA,MAAA,CAAA,UAAA,mBAAA,GAAAP,EAAA,EAAA,SAAAH,GAAAU,EAAAK,EAAA,CAAA,UAAA,0BAAA,SAAArB,EAAA,IAAA,CAAAK,EAAAiB,IAAAN,EAKQO,EAAC,CAAA,QAAAhB,IAAAe,EAAA,UAAA,UACmD,GAAAZ,EAAA,CAAA,KAAAL,EAAA,MAAAiB,CAAA,CAAA,EAEV,SAAAjB,EAAA,KAEhC,EAAAA,EAAA,MAAAiB,CAHY,CAAA,CAAA,CAAA,CAAA,CAAA,CAQ9B,CAAA,CAAA,CAGN;;;;;;;;;"}