{"version":3,"file":"Input-5f757d12.js","sources":["../../../src/ui/atoms/input/Input.tsx"],"sourcesContent":["import { ReactNode, InputHTMLAttributes, forwardRef } from \"react\";\nimport classNames from \"classnames\";\n\nimport \"./Input.css\";\n\nexport interface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  className?: string;\n  type?: \"text\" | \"password\" | \"email\" | \"number\" | \"search\";\n  inputSize?: \"sm\" | \"md\" | \"lg\";\n  state?: \"success\" | \"error\";\n  outlined?: boolean;\n  before?: ReactNode;\n  after?: ReactNode;\n}\n\nexport const Input = forwardRef<HTMLInputElement, InputProps>(\n  (\n    { className, type = \"text\", inputSize = \"md\", state, outlined, size = 1, disabled, before, after, ...props },\n    ref\n  ) => {\n    const inputClass = classNames(\n      `Input Input--${inputSize}`,\n      {\n        \"Input--success\": state === \"success\",\n        \"Input--error\": state === \"error\",\n        \"Input--disabled\": disabled,\n        \"Input--outlined\": outlined,\n      },\n      className\n    );\n\n    return (\n      <div className={inputClass}>\n        {before}\n        <input ref={ref} data-ui-state={state} type={type} size={size} disabled={disabled} {...props} />\n        {after}\n      </div>\n    );\n  }\n);\n"],"names":["Input","forwardRef","className","type","inputSize","state","outlined","size","disabled","before","after","props","ref","inputClass","classNames","jsxs","jsx"],"mappings":"qIAeO,MAAAA,EAAAC,EAAA,WAAc,CAAA,CAAA,UAAAC,EAAA,KAAAC,EAAA,OAAA,UAAAC,EAAA,KAAA,MAAAC,EAAA,SAAAC,EAAA,KAAAC,EAAA,EAAA,SAAAC,EAAA,OAAAC,EAAA,MAAAC,EAAA,GAAAC,CAAA,EAAAC,IAAA,CAKjB,MAAAC,EAAAC,EAAmB,gBAAAV,IACD,CAChB,iBAAAC,IAAA,UAC8B,eAAAA,IAAA,QACF,kBAAAG,EACP,kBAAAF,CACA,EACrBJ,CACA,EAGF,OAAAa,EAAA,MAAA,CAAA,UAAAF,EAAA,SAAA,CAEKJ,EAAAO,EAAA,QAAA,CAAA,IAAAJ,EAAA,gBAAAP,EAAA,KAAAF,EAAA,KAAAI,EAAA,SAAAC,EAAA,GAAAG,EAAA,EAC6FD,CAC7F,CAAA,CAAA,CACH,CAGN"}