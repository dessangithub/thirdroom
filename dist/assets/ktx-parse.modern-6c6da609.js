const z=163,Y=166;const W=0;class G{constructor(){this.vkFormat=0,this.typeSize=1,this.pixelWidth=0,this.pixelHeight=0,this.pixelDepth=0,this.layerCount=0,this.faceCount=1,this.supercompressionScheme=0,this.levels=[],this.dataFormatDescriptor=[{vendorId:0,descriptorType:0,descriptorBlockSize:0,versionNumber:2,colorModel:0,colorPrimaries:1,transferFunction:2,flags:0,texelBlockDimension:[0,0,0,0],bytesPlane:[0,0,0,0,0,0,0,0],samples:[]}],this.keyValue={},this.globalData=null}}class a{constructor(e,i,c,s){this._dataView=void 0,this._littleEndian=void 0,this._offset=void 0,this._dataView=new DataView(e.buffer,e.byteOffset+i,c),this._littleEndian=s,this._offset=0}_nextUint8(){const e=this._dataView.getUint8(this._offset);return this._offset+=1,e}_nextUint16(){const e=this._dataView.getUint16(this._offset,this._littleEndian);return this._offset+=2,e}_nextUint32(){const e=this._dataView.getUint32(this._offset,this._littleEndian);return this._offset+=4,e}_nextUint64(){const e=this._dataView.getUint32(this._offset,this._littleEndian),i=this._dataView.getUint32(this._offset+4,this._littleEndian),c=e+2**32*i;return this._offset+=8,c}_nextInt32(){const e=this._dataView.getInt32(this._offset,this._littleEndian);return this._offset+=4,e}_skip(e){return this._offset+=e,this}_scan(e,i=0){const c=this._offset;let s=0;for(;this._dataView.getUint8(this._offset)!==i&&s<e;)s++,this._offset++;return s<e&&this._offset++,new Uint8Array(this._dataView.buffer,this._dataView.byteOffset+c,s)}}const _=[171,75,84,88,32,50,48,187,13,10,26,10];function B(n){return typeof TextDecoder<"u"?new TextDecoder().decode(n):Buffer.from(n).toString("utf8")}function X(n){const e=new Uint8Array(n.buffer,n.byteOffset,_.length);if(e[0]!==_[0]||e[1]!==_[1]||e[2]!==_[2]||e[3]!==_[3]||e[4]!==_[4]||e[5]!==_[5]||e[6]!==_[6]||e[7]!==_[7]||e[8]!==_[8]||e[9]!==_[9]||e[10]!==_[10]||e[11]!==_[11])throw new Error("Missing KTX 2.0 identifier.");const i=new G,c=17*Uint32Array.BYTES_PER_ELEMENT,s=new a(n,_.length,c,!0);i.vkFormat=s._nextUint32(),i.typeSize=s._nextUint32(),i.pixelWidth=s._nextUint32(),i.pixelHeight=s._nextUint32(),i.pixelDepth=s._nextUint32(),i.layerCount=s._nextUint32(),i.faceCount=s._nextUint32();const x=s._nextUint32();i.supercompressionScheme=s._nextUint32();const m=s._nextUint32(),w=s._nextUint32(),T=s._nextUint32(),d=s._nextUint32(),p=s._nextUint64(),u=s._nextUint64(),A=x*3*8,h=new a(n,_.length+c,A,!0);for(let r=0;r<x;r++)i.levels.push({levelData:new Uint8Array(n.buffer,n.byteOffset+h._nextUint64(),h._nextUint64()),uncompressedByteLength:h._nextUint64()});const t=new a(n,m,w,!0),U={vendorId:t._skip(4)._nextUint16(),descriptorType:t._nextUint16(),versionNumber:t._nextUint16(),descriptorBlockSize:t._nextUint16(),colorModel:t._nextUint8(),colorPrimaries:t._nextUint8(),transferFunction:t._nextUint8(),flags:t._nextUint8(),texelBlockDimension:[t._nextUint8(),t._nextUint8(),t._nextUint8(),t._nextUint8()],bytesPlane:[t._nextUint8(),t._nextUint8(),t._nextUint8(),t._nextUint8(),t._nextUint8(),t._nextUint8(),t._nextUint8(),t._nextUint8()],samples:[]},I=6,H=4,K=(U.descriptorBlockSize/4-I)/H;for(let r=0;r<K;r++){const f={bitOffset:t._nextUint16(),bitLength:t._nextUint8(),channelType:t._nextUint8(),samplePosition:[t._nextUint8(),t._nextUint8(),t._nextUint8(),t._nextUint8()],sampleLower:-1/0,sampleUpper:1/0};f.channelType&64?(f.sampleLower=t._nextInt32(),f.sampleUpper=t._nextInt32()):(f.sampleLower=t._nextUint32(),f.sampleUpper=t._nextUint32()),U.samples[r]=f}i.dataFormatDescriptor.length=0,i.dataFormatDescriptor.push(U);const l=new a(n,T,d,!0);for(;l._offset<d;){const r=l._nextUint32(),f=l._scan(r),F=B(f),b=l._scan(r-f.byteLength);i.keyValue[F]=F.match(/^ktx/i)?B(b):b,l._offset%4&&l._skip(4-l._offset%4)}if(u<=0)return i;const o=new a(n,p,u,!0),L=o._nextUint16(),N=o._nextUint16(),D=o._nextUint32(),R=o._nextUint32(),y=o._nextUint32(),v=o._nextUint32(),E=[];for(let r=0;r<x;r++)E.push({imageFlags:o._nextUint32(),rgbSliceByteOffset:o._nextUint32(),rgbSliceByteLength:o._nextUint32(),alphaSliceByteOffset:o._nextUint32(),alphaSliceByteLength:o._nextUint32()});const S=p+o._offset,g=S+D,O=g+R,P=O+y,V=new Uint8Array(n.buffer,n.byteOffset+S,D),k=new Uint8Array(n.buffer,n.byteOffset+g,R),C=new Uint8Array(n.buffer,n.byteOffset+O,y),M=new Uint8Array(n.buffer,n.byteOffset+P,v);return i.globalData={endpointCount:L,selectorCount:N,imageDescs:E,endpointsData:V,selectorsData:k,tablesData:C,extendedData:M},i}export{z as K,W as V,Y as a,X as r};
//# sourceMappingURL=ktx-parse.modern-6c6da609.js.map
