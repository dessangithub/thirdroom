{"version":3,"file":"GLTFViewer-9094e721.js","sources":["../../src/ui/views/gltf-viewer/GLTFViewer.tsx"],"sourcesContent":["import { DragEvent, useCallback, useContext, useEffect, useRef, useState } from \"react\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { useSearchParams } from \"react-router-dom\";\n\nimport { registerMessageHandler, Thread } from \"../../../engine/module/module.common\";\nimport { createDisposables } from \"../../../engine/utils/createDisposables\";\nimport {\n  WorldLoadErrorMessage,\n  ThirdRoomMessageType,\n  WorldLoadedMessage,\n  LoadWorldMessage,\n  EnterWorldMessage,\n} from \"../../../plugins/thirdroom/thirdroom.common\";\nimport { useKeyDown } from \"../../hooks/useKeyDown\";\nimport { MainThreadContextProvider, useInitMainThreadContext, useMainThreadContext } from \"../../hooks/useMainThread\";\nimport { EditorView } from \"../session/editor/EditorView\";\nimport { Stats } from \"../session/stats/Stats\";\nimport { Text } from \"../../atoms/text/Text\";\nimport \"./GLTFViewer.css\";\nimport { HydrogenContext } from \"../../hooks/useHydrogen\";\nimport { EntityTooltip } from \"../session/entity-tooltip/EntityTooltip\";\nimport { InteractableAction } from \"../../../plugins/interaction/interaction.common\";\nimport { InteractableType } from \"../../../engine/resource/schema\";\nimport { Reticle } from \"../session/reticle/Reticle\";\nimport { InteractionState, useWorldInteraction } from \"../../hooks/useWorldInteraction\";\nimport { getMxIdUsername } from \"../../utils/matrixUtils\";\n\nexport default function GLTFViewer() {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const mainThread = useInitMainThreadContext(canvasRef);\n  const [{ loading, loaded, error }, setLoadState] = useState<{ loading: boolean; loaded: boolean; error?: string }>({\n    loading: false,\n    loaded: false,\n  });\n\n  const { session } = useContext(HydrogenContext) || {};\n\n  const [params] = useSearchParams();\n\n  useEffect(() => {\n    const mxcUrl = params.get(\"url\");\n\n    if (!mxcUrl) {\n      return;\n    }\n\n    if (!session) {\n      setLoadState({ loading: false, loaded: false, error: \"Not signed in\" });\n      return;\n    }\n\n    const sceneUrl = session.mediaRepository.mxcUrl(mxcUrl);\n\n    if (!sceneUrl) {\n      setLoadState({ loading: false, loaded: false, error: \"Invalid scene url\" });\n      return;\n    }\n\n    const loadScene = async () => {\n      const response = await fetch(sceneUrl);\n      const blob = await response.blob();\n      const environmentUrl = URL.createObjectURL(blob);\n\n      if (mainThread && environmentUrl) {\n        setLoadState({ loading: true, loaded: false });\n\n        mainThread.sendMessage<LoadWorldMessage>(Thread.Game, {\n          type: ThirdRoomMessageType.LoadWorld,\n          environmentUrl,\n          id: 1,\n        });\n      }\n    };\n\n    loadScene().catch((error) => {\n      setLoadState({ loading: false, loaded: true, error: error.message });\n    });\n  }, [mainThread, session, params]);\n\n  useEffect(() => {\n    if (mainThread) {\n      return createDisposables([\n        registerMessageHandler(mainThread, ThirdRoomMessageType.WorldLoaded, (ctx, message: WorldLoadedMessage) => {\n          ctx.sendMessage<EnterWorldMessage>(Thread.Game, {\n            type: ThirdRoomMessageType.EnterWorld,\n            id: message.id,\n          });\n\n          setLoadState({ loading: false, loaded: true });\n        }),\n        registerMessageHandler(mainThread, ThirdRoomMessageType.WorldLoadError, (ctx, message: WorldLoadErrorMessage) =>\n          setLoadState({ loading: false, loaded: true, error: message.error })\n        ),\n      ]);\n    }\n  }, [mainThread]);\n\n  const onClickCanvas = useCallback(() => {\n    if (canvasRef.current) {\n      canvasRef.current.requestPointerLock();\n    }\n  }, []);\n\n  const onDropFile = useCallback(\n    (e: DragEvent<HTMLCanvasElement>) => {\n      e.preventDefault();\n\n      if (!e.dataTransfer) {\n        return;\n      }\n\n      let environmentUrl: string | undefined = undefined;\n      let environmentScriptUrl: string | undefined = undefined;\n      const fileMap: Map<string, string> = new Map();\n\n      for (const item of e.dataTransfer.items) {\n        const file = item.getAsFile();\n\n        if (file) {\n          const fileUrl = URL.createObjectURL(file);\n\n          if (file.name.match(/\\.gl(?:tf|b)$/)) {\n            environmentUrl = fileUrl;\n          } else if (file.name.match(/\\.(js|wasm)$/)) {\n            environmentScriptUrl = fileUrl;\n          } else {\n            fileMap.set(encodeURIComponent(file.name), fileUrl);\n          }\n        }\n      }\n\n      if (mainThread && environmentUrl) {\n        setLoadState({ loading: true, loaded: false });\n\n        mainThread.sendMessage<LoadWorldMessage>(Thread.Game, {\n          type: ThirdRoomMessageType.LoadWorld,\n          id: 1,\n          environmentUrl,\n          options: {\n            environmentScriptUrl,\n            fileMap,\n          },\n        });\n      }\n    },\n    [mainThread]\n  );\n\n  const onDragOver = useCallback((e: DragEvent<HTMLCanvasElement>) => {\n    e.preventDefault();\n  }, []);\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <MainThreadContextProvider value={mainThread}>\n        <div className=\"GLTFViewer\">\n          <canvas\n            className=\"GLTFViewer__viewport\"\n            ref={canvasRef}\n            onClick={onClickCanvas}\n            onDrop={onDropFile}\n            onDragOver={onDragOver}\n          />\n          {mainThread && loaded && <GLTFViewerUI />}\n          {!loaded && !loading && !error && (\n            <div className=\"GLTFViewer__message\">\n              <Text color=\"world\">Drag and drop .gltf directory or .glb file to preview it.</Text>\n            </div>\n          )}\n          {!loaded && loading && (\n            <div className=\"GLTFViewer__message\">\n              <Text color=\"world\">Loading scene...</Text>\n            </div>\n          )}\n          {error && (\n            <div className=\"GLTFViewer__message\">\n              <Text color=\"danger\">{error}</Text>\n            </div>\n          )}\n        </div>\n      </MainThreadContextProvider>\n    </DndProvider>\n  );\n}\n\nfunction GLTFViewerUI() {\n  const mainThread = useMainThreadContext();\n  const [editorEnabled, setEditorEnabled] = useState(false);\n  const [statsEnabled, setStatsEnabled] = useState(false);\n  const [activeEntity, setActiveEntity] = useState<InteractionState | undefined>();\n\n  useKeyDown((e) => {\n    if (e.code === \"Backquote\") {\n      setEditorEnabled((enabled) => !enabled);\n    }\n    if (e.code === \"KeyS\" && e.shiftKey && e.ctrlKey) {\n      setStatsEnabled((enabled) => !enabled);\n    }\n  }, []);\n\n  const handleInteraction = useCallback(\n    (interaction?: InteractionState) => {\n      if (!interaction) return setActiveEntity(undefined);\n      const { interactableType, action, peerId } = interaction;\n\n      if (action === InteractableAction.Grab) {\n        if (interactableType === InteractableType.Player && typeof peerId === \"string\") {\n          console.log(\"Interacted with player\", interaction);\n          document.exitPointerLock();\n          return;\n        }\n        if (interactableType === InteractableType.Portal) {\n          console.log(\"Interacted with portal\", interaction);\n          return;\n        }\n      }\n\n      if (interactableType === InteractableType.Player) {\n        const entity: InteractionState = {\n          ...interaction,\n          name: peerId ? getMxIdUsername(peerId) : \"Player\",\n        };\n        setActiveEntity(entity);\n      }\n\n      setActiveEntity(interaction);\n    },\n    [setActiveEntity]\n  );\n\n  useWorldInteraction(mainThread, handleInteraction);\n\n  return (\n    <>\n      <Stats statsEnabled={statsEnabled} />\n      {editorEnabled && <EditorView />}\n      {activeEntity && <EntityTooltip activeEntity={activeEntity} portalProcess={{ joining: false }} />}\n      <Reticle />\n    </>\n  );\n}\n"],"names":["GLTFViewer","canvasRef","useRef","mainThread","useInitMainThreadContext","loading","loaded","error","setLoadState","useState","session","useContext","HydrogenContext","params","useSearchParams","useEffect","mxcUrl","sceneUrl","blob","environmentUrl","Thread","ThirdRoomMessageType","createDisposables","registerMessageHandler","ctx","message","onClickCanvas","useCallback","onDropFile","environmentScriptUrl","fileMap","item","file","fileUrl","onDragOver","jsx","DndProvider","HTML5Backend","MainThreadContextProvider","jsxs","GLTFViewerUI","Text","useMainThreadContext","editorEnabled","setEditorEnabled","statsEnabled","setStatsEnabled","activeEntity","setActiveEntity","useKeyDown","e","enabled","handleInteraction","interaction","interactableType","action","peerId","InteractableAction","InteractableType","entity","getMxIdUsername","useWorldInteraction","Fragment","Stats","EditorView","EntityTooltip","Reticle"],"mappings":"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"}