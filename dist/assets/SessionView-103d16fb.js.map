{"version":3,"file":"SessionView-103d16fb.js","sources":["../../src/ui/views/session/sidebar/SidebarView.tsx","../../src/ui/views/components/sidebar-tab/SidebarTab.tsx","../../res/ic/explore.svg","../../res/ic/notification.svg","../../src/ui/hooks/useObservableList.ts","../../src/ui/hooks/useInviteList.ts","../../res/ic/copy.svg","../../src/ui/atoms/input/Textarea.tsx","../../src/ui/views/session/rageshake/RageshakeDialog.tsx","../../src/ui/views/session/menus/UserMenu.tsx","../../src/ui/hooks/useRoomsOfType.ts","../../src/ui/state/sidebarTab.ts","../../src/ui/views/session/sidebar/SpacesView.tsx","../../src/ui/views/session/sidebar/RoomListView.tsx","../../res/ic/add.svg","../../src/ui/views/session/dialogs/DmDialog.tsx","../../src/ui/views/session/dialogs/JoinWithAliasDialog.tsx","../../src/ui/hooks/useDialog.ts","../../src/ui/views/session/sidebar/RoomListHeader.tsx","../../src/ui/views/session/sidebar/RoomListContent.tsx","../../src/ui/views/session/overlay/ActiveChats.tsx","../../res/ic/cross-circle.svg","../../src/ui/views/components/active-chat-tile/ActiveChatTile.tsx","../../src/ui/views/session/chat/ChatView.tsx","../../src/ui/views/components/chat-header/ChatHeader.tsx","../../res/ic/minus.svg","../../src/ui/views/session/chat/ChatViewHeader.tsx","../../src/ui/views/session/chat/tiles/ChatGap.ts","../../src/ui/views/session/chat/tiles/ChatBaseMessage.tsx","../../src/ui/views/session/chat/tiles/ChatMessage.ts","../../src/ui/views/session/chat/tiles/ChatAnnouncement.ts","../../src/ui/views/session/chat/tiles/ChatImage.ts","../../src/ui/views/session/chat/tiles/ChatDate.tsx","../../src/ui/views/session/chat/tiles/index.tsx","../../src/ui/views/session/chat/ChatTimeline.tsx","../../res/ic/send.svg","../../src/ui/views/session/chat/ChatComposer.tsx","../../src/ui/views/session/chat/ChatViewContent.tsx","../../src/ui/hooks/useInvite.ts","../../src/ui/hooks/useInviteControl.ts","../../src/ui/views/session/chat/ChatViewInvite.tsx","../../src/ui/hooks/useObservableValue.ts","../../src/ui/hooks/useAsyncObservableValue.ts","../../src/ui/hooks/useRoomStatus.ts","../../src/ui/views/components/window/Window.tsx","../../src/ui/views/components/discover-group/DiscoverGroup.tsx","../../src/ui/hooks/useStateEvents.ts","../../src/ui/views/components/FeaturedWorldsProvider.tsx","../../src/ui/views/components/FeaturedRoomsProvider.tsx","../../src/ui/views/components/room-preview-card/RoomPreviewCard.tsx","../../src/ui/hooks/useRoomSummary.ts","../../src/ui/views/components/RoomSummaryProvider.tsx","../../src/ui/views/components/JoinRoomProvider.tsx","../../src/ui/views/session/discover/FeaturedRoomCard.tsx","../../src/ui/views/session/discover/FeaturedWorldCard.tsx","../../src/ui/views/components/FeaturedScenesProvider.tsx","../../src/ui/atoms/thumbnail/Thumbnail.tsx","../../src/ui/views/components/scene-preview-card/ScenePreviewCard.tsx","../../src/ui/atoms/modal/ModalAside.tsx","../../src/ui/atoms/modal/ModalContent.tsx","../../src/ui/views/components/scene-preview/ScenePreview.tsx","../../src/ui/atoms/thumbnail/ThumbnailHover.tsx","../../src/ui/views/components/avatar-picker/AvatarPicker.tsx","../../src/ui/hooks/useFilePicker.ts","../../res/ic/check.svg","../../src/ui/views/components/file-upload-card/FileUploadCard.tsx","../../src/ui/hooks/useAttachmentUpload.ts","../../src/ui/hooks/useThrottle.ts","../../src/ui/views/components/AutoFileUpload.tsx","../../res/ic/upload.svg","../../src/ui/views/session/create-world/UploadScene.tsx","../../src/ui/views/session/create-world/CreateWorldForm.tsx","../../src/ui/views/session/create-world/CreateWorldModal.tsx","../../src/ui/views/session/discover/FeaturedSceneCard.tsx","../../src/ui/views/session/discover/DiscoverHome.tsx","../../src/ui/atoms/segment-control/SegmentControl.tsx","../../src/ui/atoms/segment-control/SegmentControlItem.tsx","../../res/ic/bin.svg","../../src/ui/views/session/discover/SceneSubmission.tsx","../../src/ui/hooks/useOrderString.ts","../../src/ui/hooks/useOrderMove.ts","../../src/ui/views/session/discover/DiscoverAdmin.tsx","../../src/ui/views/session/discover/DiscoverAll.tsx","../../src/ui/atoms/thumbnail/ThumbnailBadgeWrapper.tsx","../../src/ui/views/session/discover/DiscoverCreator.tsx","../../src/ui/views/session/discover/DiscoverView.tsx","../../src/ui/hooks/useUpdateScene.ts","../../src/ui/views/session/overlay/WorldPreview.tsx","../../src/ui/views/components/window/WindowContent.tsx","../../src/ui/views/components/window/WindowAside.tsx","../../src/ui/views/session/create-world/CreateWorld.tsx","../../src/ui/views/components/scene-preview/ScenePreviewOverlay.tsx","../../src/ui/hooks/use3DAvatar.ts","../../src/ui/views/session/user-profile/UserProfileOverview.tsx","../../src/ui/views/session/user-profile/UserProfileInventory.tsx","../../src/ui/views/session/user-profile/UserProfile.tsx","../../src/ui/atoms/avatar/AvatarOutline.tsx","../../src/ui/views/components/room-tile/RoomTile.tsx","../../src/ui/views/components/room-tile/RoomTileTitle.tsx","../../src/ui/atoms/avatar/AvatarPile.tsx","../../src/ui/views/session/sidebar/WorldTileMembers.tsx","../../src/ui/views/session/sidebar/selector/WorldSelector.tsx","../../src/ui/views/session/sidebar/selector/RoomSelector.tsx","../../src/ui/views/components/empty-state/EmptyState.tsx","../../src/ui/views/session/sidebar/RoomListHome.tsx","../../src/ui/views/session/sidebar/RoomListFriends.tsx","../../src/ui/views/session/world-settings/WorldSettings.tsx","../../src/ui/hooks/useInvitesOfType.ts","../../src/ui/views/session/sidebar/RoomListNotifications.tsx","../../src/ui/views/components/now-playing/NowPlaying.tsx","../../res/ic/network.svg","../../src/ui/views/components/now-playing/NowPlayingStatus.tsx","../../src/ui/views/components/now-playing/NowPlayingTitle.tsx","../../src/ui/views/session/overlay/NowPlayingWorld.tsx","../../src/ui/views/session/overlay/NowPlayingControls.tsx","../../src/ui/views/session/overlay/Overlay.tsx","../../src/ui/hooks/useRoomList.ts","../../src/ui/state/whatsNew.ts","../../src/ui/hooks/useWhatsNew.ts","../../src/ui/views/session/whats-new/WhatsNewNotification.tsx","../../src/ui/views/session/statusbar/StatusBar.tsx","../../src/ui/hooks/useHomeWorld.ts","../../src/ui/hooks/useAutoJoinRoom.ts","../../src/ui/views/session/cmd-panel/SearchResults.tsx","../../src/ui/views/session/cmd-panel/CmdPanel.tsx","../../src/ui/views/session/whats-new/WhatsNewCard.tsx","../../src/ui/views/session/whats-new/WhatsNewModal.tsx","../../src/ui/views/session/whats-new/special/WebSceneGraphDialog.tsx","../../src/ui/views/session/whats-new/WhatsNew.tsx","../../src/ui/views/session/dialogs/FirefoxPerfAlert.tsx","../../src/ui/views/session/SessionView.tsx"],"sourcesContent":["import { ReactNode } from \"react\";\nimport classNames from \"classnames\";\n\nimport \"./SidebarView.css\";\n\ninterface SidebarViewProps {\n  spaces?: ReactNode;\n  roomList?: ReactNode;\n}\n\nexport function SidebarView({ spaces, roomList }: SidebarViewProps) {\n  return (\n    <div className={classNames(\"SidebarView\", { [\"SidebarView--close\"]: !open }, \"flex gap-xs\")}>\n      {spaces && <div className=\"shrink-0 flex\">{spaces}</div>}\n      {roomList && <div className=\"grow flex\">{roomList}</div>}\n    </div>\n  );\n}\n","import { MouseEvent } from \"react\";\nimport classNames from \"classnames\";\n\nimport { Icon } from \"../../../atoms/icon/Icon\";\n\nimport \"./SidebarTab.css\";\ninterface ISidebarTab {\n  className?: string;\n  iconSrc: string;\n  name: string;\n  variant?: \"surface\" | \"surface-low\" | \"primary\" | \"secondary\" | \"danger\";\n  isActive?: boolean;\n  onClick: (event: MouseEvent<HTMLButtonElement>) => void;\n}\n\nexport function SidebarTab({ className, iconSrc, name, variant = \"surface\", isActive = false, onClick }: ISidebarTab) {\n  const avatarIconClass = classNames(\n    `SidebarTab SidebarTab--${variant}`,\n    { [\"SidebarTab--active\"]: isActive },\n    className\n  );\n  const iconColor: \"surface-low\" | \"on-primary\" | \"on-secondary\" | \"on-danger\" =\n    variant === \"surface\" || variant === \"surface-low\" ? \"surface-low\" : `on-${variant}`;\n\n  return (\n    <button onClick={onClick} type=\"button\" className={avatarIconClass} aria-label={name}>\n      <Icon color={iconColor} src={iconSrc} size=\"md\" />\n    </button>\n  );\n}\n","export default \"__VITE_ASSET__33ad904f__\"","export default \"__VITE_ASSET__b1dac06e__\"","import { BaseObservableList } from \"@thirdroom/hydrogen-view-sdk\";\n\nimport { useObservable } from \"./useObservable\";\n\nexport function useObservableList<T>(observableFactory: () => BaseObservableList<T>, deps: unknown[]): T[] {\n  return useObservable(\n    observableFactory,\n    (update, observable) => ({\n      onReset: () => update(Array.from(observable)),\n      onAdd: () => update(Array.from(observable)),\n      onUpdate: () => update(Array.from(observable)),\n      onMove: () => update(Array.from(observable)),\n      onRemove: () => update(Array.from(observable)),\n    }),\n    (observable) => Array.from(observable),\n    deps\n  );\n}\n","import { Invite, Session } from \"@thirdroom/hydrogen-view-sdk\";\n\nimport { useObservableList } from \"./useObservableList\";\n\nfunction roomListComparator(a: Invite, b: Invite) {\n  return b.timestamp - a.timestamp;\n}\n\nexport function useInviteList(session: Session): Invite[] {\n  return useObservableList(() => session.invites.sortValues(roomListComparator), [session.invites]);\n}\n","export default \"__VITE_ASSET__5bf06bc3__\"","import { ReactNode, forwardRef, TextareaHTMLAttributes } from \"react\";\nimport classNames from \"classnames\";\n\nimport \"./Input.css\";\n\nexport interface TextareaProps extends TextareaHTMLAttributes<HTMLTextAreaElement> {\n  className?: string;\n  size?: \"sm\" | \"md\" | \"lg\";\n  state?: \"success\" | \"error\";\n  outlined?: boolean;\n  before?: ReactNode;\n  after?: ReactNode;\n}\n\nexport const Textarea = forwardRef<HTMLTextAreaElement, TextareaProps>(\n  ({ className, size = \"md\", state, outlined, disabled, before, after, ...props }, ref) => {\n    const inputClass = classNames(\n      `Input Input--${size}`,\n      {\n        \"Input--success\": state === \"success\",\n        \"Input--error\": state === \"error\",\n        \"Input--disabled\": disabled,\n        \"Input--outlined\": outlined,\n      },\n      className\n    );\n\n    return (\n      <div className={inputClass}>\n        {before}\n        <textarea ref={ref} data-ui-state={state} disabled={disabled} {...props} />\n        {after}\n      </div>\n    );\n  }\n);\n","import { IBlobHandle, Platform, submitLogsToRageshakeServer } from \"@thirdroom/hydrogen-view-sdk\";\nimport React, { FormEventHandler } from \"react\";\n\nimport { Text } from \"../../../atoms/text/Text\";\nimport { Dialog } from \"../../../atoms/dialog/Dialog\";\nimport { Header } from \"../../../atoms/header/Header\";\nimport { HeaderTitle } from \"../../../atoms/header/HeaderTitle\";\nimport { IconButton } from \"../../../atoms/button/IconButton\";\nimport CrossIC from \"../../../../../res/ic/cross.svg\";\nimport { useHydrogen } from \"../../../hooks/useHydrogen\";\nimport { SettingTile } from \"../../components/setting-tile/SettingTile\";\nimport { Label } from \"../../../atoms/text/Label\";\nimport { Button } from \"../../../atoms/button/Button\";\nimport { Dots } from \"../../../atoms/loading/Dots\";\nimport { useAsyncCallback } from \"../../../hooks/useAsyncCallback\";\nimport { saveData } from \"../../../utils/common\";\nimport { Textarea } from \"../../../atoms/input/Textarea\";\n\nconst getLogs = async (platform: Platform): Promise<IBlobHandle> => {\n  const exportReporter = platform.logger.reporters.find((r) => typeof r.export === \"function\");\n  if (!exportReporter) {\n    throw new Error(\"No logger that can export configured\");\n  }\n  const logExport = await exportReporter.export();\n  const logs = logExport.asBlob() as IBlobHandle;\n  return logs;\n};\n\ninterface RageshakeDialogProps {\n  open: boolean;\n  requestClose: () => void;\n}\n\nexport function RageshakeDialog({ open, requestClose }: RageshakeDialogProps) {\n  const { platform, session } = useHydrogen(true);\n\n  const {\n    callback: submitLogs,\n    loading: submitting,\n    error,\n  } = useAsyncCallback(async (text?: string) => {\n    const { bugReportEndpointUrl } = platform.config;\n    if (!bugReportEndpointUrl) {\n      throw new Error(\"No server configured to submit logs\");\n    }\n\n    const logs = await getLogs(platform);\n    await submitLogsToRageshakeServer(\n      {\n        app: \"thirdroom\",\n        userAgent: platform.description,\n        version: platform.version,\n        text: `Third Room user ${session.userId} on device ${session.deviceId}: ${text ?? \"No description provided.\"}`,\n      },\n      logs,\n      bugReportEndpointUrl,\n      platform.request\n    );\n  }, []);\n\n  const handleSubmit: FormEventHandler<HTMLFormElement> = (evt) => {\n    evt.preventDefault();\n\n    const { descInput } = evt.target as typeof evt.target & { descInput: HTMLInputElement };\n    const desc = descInput.value.trim() || undefined;\n    descInput.value = \"\";\n    submitLogs(desc);\n  };\n\n  const downloadLogs = async () => {\n    getLogs(platform).then((outputBlob) => {\n      saveData(outputBlob.nativeBlob, `thirdroom-logs-${new Date()}.json`);\n    });\n  };\n\n  return (\n    <Dialog open={open} onOpenChange={requestClose}>\n      <Header\n        left={<HeaderTitle size=\"lg\">Report Bug</HeaderTitle>}\n        right={<IconButton iconSrc={CrossIC} onClick={requestClose} label=\"Close\" />}\n      />\n      <form\n        onSubmit={handleSubmit}\n        className=\"flex flex-column gap-md\"\n        style={{ padding: \"0 var(--sp-md) var(--sp-md)\" }}\n      >\n        <Text variant=\"b3\">\n          {\"Please \"}\n          <a href=\"https://github.com/matrix-org/thirdroom/issues\" target=\"_blank\">\n            view existing bugs on Github\n          </a>\n          {\" first. No match? \"}\n          <a href=\"https://github.com/matrix-org/thirdroom/issues/new\" target=\"_blank\">\n            Start a new one\n          </a>\n          .\n        </Text>\n        <div className=\"flex flex-column gap-xxs\">\n          <Text weight=\"bold\">Submit Debug Logs</Text>\n          <Text variant=\"b3\">\n            Debug logs contain application usage data including your username, the IDs or aliases of the rooms or groups\n            you have visited, the usernames of other users and the names of files you send. They do not contain\n            messages. For more information, review our{\" \"}\n            <a href=\"https://element.io/privacy\" target=\"_blank\">\n              privacy policy\n            </a>\n            .\n          </Text>\n        </div>\n        <SettingTile label={<Label>Description</Label>}>\n          <div className=\"flex flex-column gap-xxs\">\n            <Textarea style={{ height: \"100px\" }} name=\"descInput\" disabled={submitting} />\n            {error && (\n              <Text variant=\"b3\" color=\"danger\">\n                {error.message || \"Failed to submit logs.\"}\n              </Text>\n            )}\n          </div>\n        </SettingTile>\n        <div className=\"flex flex-column gap-sm\">\n          <Button type=\"submit\" disabled={submitting}>\n            {submitting ? <Dots color=\"on-primary\" /> : \"Submit Logs\"}\n          </Button>\n          <Button type=\"button\" onClick={downloadLogs} fill=\"outline\">\n            Download Logs\n          </Button>\n        </div>\n      </form>\n    </Dialog>\n  );\n}\n","import { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAtomValue, useSetAtom } from \"jotai\";\n\nimport { DropdownMenu } from \"../../../atoms/menu/DropdownMenu\";\nimport { DropdownMenuItem } from \"../../../atoms/menu/DropdownMenuItem\";\nimport { Avatar } from \"../../../atoms/avatar/Avatar\";\nimport { getAvatarHttpUrl, getIdentifierColorNumber } from \"../../../utils/avatar\";\nimport CopyIC from \"../../../../../res/ic/copy.svg\";\nimport { Text } from \"../../../atoms/text/Text\";\nimport { IconButton } from \"../../../atoms/button/IconButton\";\nimport { Tooltip } from \"../../../atoms/tooltip/Tooltip\";\nimport { copyToClipboard } from \"../../../utils/common\";\nimport { useHydrogen } from \"../../../hooks/useHydrogen\";\nimport \"./UserMenu.css\";\nimport { OverlayWindow, overlayWindowAtom } from \"../../../state/overlayWindow\";\nimport { userProfileAtom } from \"../../../state/userProfile\";\nimport { RageshakeDialog } from \"../rageshake/RageshakeDialog\";\n\nexport function UserMenu() {\n  const { session, platform, logout } = useHydrogen(true);\n  const { accountManagementUrl } = session.sessionInfo;\n  const { userId, displayName, avatarUrl } = useAtomValue(userProfileAtom);\n  const setOverlayWindow = useSetAtom(overlayWindowAtom);\n  const [copied, setCopied] = useState(false);\n  const [bugReport, setBugReport] = useState(false);\n  const navigate = useNavigate();\n\n  const handleCopy = () => {\n    if (copied) return;\n    setCopied(true);\n    copyToClipboard(userId);\n    setTimeout(() => setCopied(false), 500);\n  };\n\n  return (\n    <>\n      <RageshakeDialog open={bugReport} requestClose={() => setBugReport(false)} />\n      <DropdownMenu\n        content={\n          <div className=\"UserMenu flex flex-column gap-xs\">\n            <div className=\"UserMenu__header\">\n              <Text weight=\"medium\">{displayName}</Text>\n              <div className=\"flex items-center gap-xxs\">\n                <Text className=\"truncate\" variant=\"b3\" color=\"surface-low\">\n                  {userId}\n                </Text>\n                <Tooltip open={copied} content={copied ? \"Copied\" : \"Copy\"} side=\"top\">\n                  <IconButton\n                    onClick={handleCopy}\n                    className=\"shrink-0\"\n                    size=\"sm\"\n                    iconSrc={CopyIC}\n                    variant=\"primary\"\n                    label=\"Copy user id\"\n                  />\n                </Tooltip>\n              </div>\n            </div>\n            <div>\n              <DropdownMenuItem onSelect={() => setOverlayWindow({ type: OverlayWindow.UserProfile })}>\n                User Settings\n              </DropdownMenuItem>\n              {accountManagementUrl && (\n                <DropdownMenuItem onSelect={() => window.open(accountManagementUrl)}>Manage Account</DropdownMenuItem>\n              )}\n              <DropdownMenuItem onSelect={() => navigate(\"/landing\")}>Landing Page</DropdownMenuItem>\n              <DropdownMenuItem onSelect={() => setBugReport(true)}>Report Bug</DropdownMenuItem>\n              <DropdownMenuItem\n                onSelect={() => {\n                  if (confirm(\"Are you sure?\")) logout();\n                }}\n                variant=\"danger\"\n              >\n                Logout\n              </DropdownMenuItem>\n            </div>\n          </div>\n        }\n      >\n        <Avatar\n          onClick={() => false /* used for keyboard focus */}\n          shape=\"circle\"\n          name={displayName}\n          bgColor={`var(--usercolor${getIdentifierColorNumber(userId)})`}\n          imageSrc={avatarUrl ? getAvatarHttpUrl(avatarUrl, 40, platform, session.mediaRepository) : undefined}\n        />\n      </DropdownMenu>\n    </>\n  );\n}\n","import { useState } from \"react\";\nimport { Room, Invite, Session } from \"@thirdroom/hydrogen-view-sdk\";\n\nimport { useObservableList } from \"./useObservableList\";\n\nfunction roomListComparator(a: Room, b: Room) {\n  return b.lastMessageTimestamp - a.lastMessageTimestamp;\n}\n\nexport enum RoomTypes {\n  World,\n  Room,\n  Direct,\n}\n\nexport const roomTypeFilter = (room: Room | Invite, type: RoomTypes) => {\n  if (type === RoomTypes.World) return room.type === \"org.matrix.msc3815.world\";\n  if (type === RoomTypes.Room && !room.type && !room.isDirectMessage) return true;\n  if (type === RoomTypes.Direct) return room.isDirectMessage;\n  return false;\n};\n\nexport function useRoomsOfType(session: Session, initialType: RoomTypes): [Room[], (type: RoomTypes) => void] {\n  const [type, setType] = useState(initialType);\n\n  return [\n    useObservableList(() => {\n      return session.rooms.filterValues((room) => roomTypeFilter(room, type)).sortValues(roomListComparator);\n    }, [session.rooms, type]),\n    setType,\n  ];\n}\n","import { atom } from \"jotai\";\n\nimport { OverlayWindow, overlayWindowAtom } from \"./overlayWindow\";\n\nexport enum SidebarTab {\n  Home = \"Home\",\n  Friends = \"Friends\",\n  Notifications = \"Notifications\",\n}\n\nconst baseSidebarTabAtom = atom<SidebarTab>(SidebarTab.Home);\n\nexport const sidebarTabAtom = atom<SidebarTab, [SidebarTab], void>(\n  (get) => get(baseSidebarTabAtom),\n  (get, set, value) => {\n    set(overlayWindowAtom, { type: OverlayWindow.None });\n    set(baseSidebarTabAtom, value);\n  }\n);\n","import { useAtom } from \"jotai\";\n\nimport { SidebarTab } from \"../../components/sidebar-tab/SidebarTab\";\nimport PlanetIC from \"../../../../../res/ic/planet.svg\";\nimport PeoplesIC from \"../../../../../res/ic/peoples.svg\";\nimport ExploreIC from \"../../../../../res/ic/explore.svg\";\nimport NotificationIC from \"../../../../../res/ic/notification.svg\";\nimport { useHydrogen } from \"../../../hooks/useHydrogen\";\nimport { BadgeWrapper } from \"../../../atoms/badge/BadgeWrapper\";\nimport { NotificationBadge } from \"../../../atoms/badge/NotificationBadge\";\nimport { useInviteList } from \"../../../hooks/useInviteList\";\nimport { UserMenu } from \"../menus/UserMenu\";\nimport \"./SpacesView.css\";\nimport { RoomTypes, useRoomsOfType } from \"../../../hooks/useRoomsOfType\";\nimport { sidebarTabAtom, SidebarTab as SidebarTabEnum } from \"../../../state/sidebarTab\";\nimport { OverlayWindow, overlayWindowAtom } from \"../../../state/overlayWindow\";\n\nexport function SpacesView() {\n  const { session } = useHydrogen(true);\n  const invites = useInviteList(session);\n  const [rooms] = useRoomsOfType(session, RoomTypes.Room);\n  const [directs] = useRoomsOfType(session, RoomTypes.Direct);\n  const [sidebarTab, setSidebarTab] = useAtom(sidebarTabAtom);\n  const [overlayWindow, setOverlayWindow] = useAtom(overlayWindowAtom);\n\n  const roomsNotifCount = rooms.reduce((total, room) => total + room.notificationCount, 0);\n  const directsNotifCount = directs.reduce((total, room) => total + room.notificationCount, 0);\n\n  return (\n    <div className=\"SpacesView flex flex-column\">\n      <div className=\"grow flex flex-column items-center gap-xs\">\n        <BadgeWrapper badge={roomsNotifCount > 0 && <NotificationBadge content={roomsNotifCount} />}>\n          <SidebarTab\n            onClick={() => setSidebarTab(SidebarTabEnum.Home)}\n            isActive={sidebarTab === SidebarTabEnum.Home && overlayWindow.type === OverlayWindow.None}\n            name=\"Home\"\n            iconSrc={PlanetIC}\n            variant=\"surface-low\"\n          />\n        </BadgeWrapper>\n\n        <BadgeWrapper badge={directsNotifCount > 0 && <NotificationBadge content={directsNotifCount} />}>\n          <SidebarTab\n            onClick={() => setSidebarTab(SidebarTabEnum.Friends)}\n            isActive={sidebarTab === SidebarTabEnum.Friends && overlayWindow.type === OverlayWindow.None}\n            name=\"Friends\"\n            iconSrc={PeoplesIC}\n            variant=\"surface-low\"\n          />\n        </BadgeWrapper>\n\n        <BadgeWrapper badge={invites.length > 0 ? <NotificationBadge content={invites.length} /> : undefined}>\n          <SidebarTab\n            onClick={() => setSidebarTab(SidebarTabEnum.Notifications)}\n            isActive={sidebarTab === SidebarTabEnum.Notifications && overlayWindow.type === OverlayWindow.None}\n            name=\"Notifications\"\n            iconSrc={NotificationIC}\n            variant=\"surface-low\"\n          />\n        </BadgeWrapper>\n        <SidebarTab\n          onClick={() => setOverlayWindow({ type: OverlayWindow.Discover })}\n          isActive={overlayWindow.type === OverlayWindow.Discover}\n          name=\"Discover\"\n          iconSrc={ExploreIC}\n          variant=\"surface-low\"\n        />\n      </div>\n      <div className=\"shrink-0 flex flex-column items-center gap-xs\">\n        <UserMenu />\n      </div>\n    </div>\n  );\n}\n","import { ReactNode } from \"react\";\n\nimport { Scroll } from \"../../../atoms/scroll/Scroll\";\nimport \"./RoomListView.css\";\n\ninterface RoomListViewProps {\n  header: ReactNode;\n  content: ReactNode;\n  footer?: ReactNode;\n}\n\nexport function RoomListView({ header, content, footer }: RoomListViewProps) {\n  return (\n    <div className=\"RoomListView flex flex-column\">\n      {header}\n      <div className=\"RoomListView__container grow\">\n        <Scroll type=\"hover\">{content}</Scroll>\n      </div>\n      {footer}\n    </div>\n  );\n}\n","export default \"__VITE_ASSET__543aced3__\"","import { useState, FormEvent, useCallback, ChangeEvent } from \"react\";\nimport { RoomVisibility } from \"@thirdroom/hydrogen-view-sdk\";\n\nimport { Header } from \"../../../atoms/header/Header\";\nimport { HeaderTitle } from \"../../../atoms/header/HeaderTitle\";\nimport { Input } from \"../../../atoms/input/Input\";\nimport { Label } from \"../../../atoms/text/Label\";\nimport { SettingTile } from \"../../components/setting-tile/SettingTile\";\nimport { IconButton } from \"../../../atoms/button/IconButton\";\nimport { Button } from \"../../../atoms/button/Button\";\nimport { Text } from \"../../../atoms/text/Text\";\nimport { Dots } from \"../../../atoms/loading/Dots\";\nimport { Icon } from \"../../../atoms/icon/Icon\";\nimport { useHydrogen } from \"../../../hooks/useHydrogen\";\nimport CrossIC from \"../../../../../res/ic/cross.svg\";\nimport InfoIC from \"../../../../../res/ic/info.svg\";\nimport { Tooltip } from \"../../../atoms/tooltip/Tooltip\";\nimport { useDebounce } from \"../../../hooks/useDebounce\";\nimport { useSearchProfile } from \"../../../hooks/useSearchProfile\";\nimport { ProfileSuggestion } from \"./ProfileSuggestion\";\nimport { isValidUserId, waitToCreateRoom } from \"../../../utils/matrixUtils\";\n\ninterface DmDialogProps {\n  requestClose: () => void;\n}\n\nexport function DmDialog({ requestClose }: DmDialogProps) {\n  const { session } = useHydrogen(true);\n\n  const [starting, setStarting] = useState(false);\n  const [error, setError] = useState<string>();\n\n  const { loading, value: searchResult, setSearchTerm } = useSearchProfile(session);\n\n  const dmUser = async (userId: string) => {\n    if (starting) return;\n    setError(undefined);\n    setStarting(true);\n    if ((await isValidUserId(session.hsApi, userId)) === false) {\n      setError(`User id \"${userId}\" is invalid. Failed to start direct message.`);\n      setStarting(false);\n      return;\n    }\n    const roomBeingCreated = session.createRoom({\n      visibility: RoomVisibility.DirectMessage,\n      invites: [userId],\n    });\n    await waitToCreateRoom(session, roomBeingCreated);\n    requestClose();\n  };\n\n  const handleSubmit = async (evt: FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n\n    const value = evt.currentTarget.input.value as string;\n    dmUser(value.trim());\n  };\n\n  const handleInputChange = useDebounce(\n    useCallback(\n      (evt: ChangeEvent<HTMLInputElement>) => {\n        setError(undefined);\n        setSearchTerm(evt.target.value);\n      },\n      [setSearchTerm]\n    ),\n    { wait: 400 }\n  );\n\n  return (\n    <div className=\"flex flex-column\">\n      <Header\n        className=\"shrink-0\"\n        left={<HeaderTitle size=\"lg\">Direct Message</HeaderTitle>}\n        right={<IconButton iconSrc={CrossIC} onClick={requestClose} label=\"Close\" />}\n      />\n      <form onSubmit={handleSubmit} className=\"grow flex flex-column gap-lg\" style={{ padding: \"var(--sp-md)\" }}>\n        <div className=\"flex flex-column gap-sm\">\n          <SettingTile\n            label={\n              <>\n                <Label>User Id</Label>\n                <Tooltip content=\"User id looks like @user:server.name\" side=\"right\">\n                  <Icon src={InfoIC} color=\"surface-low\" size=\"sm\" />\n                </Tooltip>\n              </>\n            }\n          >\n            <Input\n              onChange={handleInputChange}\n              name=\"input\"\n              maxLength={255}\n              autoFocus\n              placeholder=\"@user:server.name\"\n              required\n            />\n          </SettingTile>\n          {!starting && error && (\n            <Text variant=\"b3\" color=\"danger\" weight=\"medium\">\n              {error}\n            </Text>\n          )}\n          <ProfileSuggestion\n            loading={loading}\n            suggestion={searchResult?.results}\n            onSelect={(profile) => dmUser(profile.userId)}\n          />\n        </div>\n        <Button size=\"lg\" type=\"submit\">\n          {starting && <Dots color=\"on-primary\" />}\n          {starting ? \"Starting\" : \"Direct Message\"}\n        </Button>\n      </form>\n    </div>\n  );\n}\n","import { useState, FormEvent } from \"react\";\n\nimport { Header } from \"../../../atoms/header/Header\";\nimport { HeaderTitle } from \"../../../atoms/header/HeaderTitle\";\nimport { Input } from \"../../../atoms/input/Input\";\nimport { Label } from \"../../../atoms/text/Label\";\nimport { SettingTile } from \"../../components/setting-tile/SettingTile\";\nimport { IconButton } from \"../../../atoms/button/IconButton\";\nimport { Button } from \"../../../atoms/button/Button\";\nimport { Text } from \"../../../atoms/text/Text\";\nimport { Dots } from \"../../../atoms/loading/Dots\";\nimport { Icon } from \"../../../atoms/icon/Icon\";\nimport { useHydrogen } from \"../../../hooks/useHydrogen\";\nimport CrossIC from \"../../../../../res/ic/cross.svg\";\nimport InfoIC from \"../../../../../res/ic/info.svg\";\nimport { Tooltip } from \"../../../atoms/tooltip/Tooltip\";\n\ninterface JoinWithAliasDialogProps {\n  requestClose: () => void;\n}\n\nexport function JoinWithAliasDialog({ requestClose }: JoinWithAliasDialogProps) {\n  const { session } = useHydrogen(true);\n\n  const [joining, setJoining] = useState(false);\n  const [error, setError] = useState<string>();\n\n  const handleSubmit = async (evt: FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n    if (joining) return;\n    setError(undefined);\n\n    const value = evt.currentTarget.input.value as string;\n    const aliasOrId = value.trim();\n\n    if (aliasOrId === \"\") return;\n    if (aliasOrId.match(/^(!|#).+:.+$/) == undefined) {\n      setError(\n        `Invalid ${\n          aliasOrId.startsWith(\"!\") ? \"id\" : \"alias\"\n        } \"${aliasOrId}\". Alias will look like #example:server.name`\n      );\n      return;\n    }\n\n    setJoining(true);\n    try {\n      await session.joinRoom(aliasOrId);\n      requestClose();\n    } catch (err) {\n      setError(`Failed to join \"${aliasOrId}\". Either world/room is private or doesn't exist.`);\n    }\n    setJoining(false);\n  };\n\n  const handleInputChange = () => {\n    setError(undefined);\n  };\n\n  return (\n    <div className=\"flex flex-column\">\n      <Header\n        className=\"shrink-0\"\n        left={<HeaderTitle size=\"lg\">Join with Alias</HeaderTitle>}\n        right={<IconButton iconSrc={CrossIC} onClick={requestClose} label=\"Close\" />}\n      />\n      <form onSubmit={handleSubmit} className=\"grow flex flex-column gap-lg\" style={{ padding: \"var(--sp-md)\" }}>\n        <div className=\"flex flex-column gap-sm\">\n          <SettingTile\n            label={\n              <>\n                <Label>Alias</Label>\n                <Tooltip content=\"Use alias or id.\" side=\"right\">\n                  <Icon src={InfoIC} color=\"surface-low\" size=\"sm\" />\n                </Tooltip>\n              </>\n            }\n          >\n            <Input\n              onChange={handleInputChange}\n              name=\"input\"\n              maxLength={255}\n              autoFocus\n              placeholder=\"#example:server.name\"\n              required\n            />\n          </SettingTile>\n          {!joining && error && (\n            <Text variant=\"b3\" color=\"danger\" weight=\"medium\">\n              {error}\n            </Text>\n          )}\n        </div>\n        <Button size=\"lg\" type=\"submit\">\n          {joining && <Dots color=\"on-primary\" />}\n          {joining ? \"Joining\" : \"Join\"}\n        </Button>\n      </form>\n    </div>\n  );\n}\n","import { useCallback, useState } from \"react\";\n\nexport function useDialog(isOpen: boolean) {\n  const [open, setOpen] = useState(isOpen);\n  const openDialog = useCallback(() => setOpen(true), []);\n  const closeDialog = useCallback(() => setOpen(false), []);\n  return { open, setOpen, openDialog, closeDialog };\n}\n","import { useAtomValue, useSetAtom } from \"jotai\";\n\nimport AddIC from \"../../../../../res/ic/add.svg\";\nimport { Text } from \"../../../atoms/text/Text\";\nimport \"./RoomListHeader.css\";\nimport { IconButton } from \"../../../atoms/button/IconButton\";\nimport { DmDialog } from \"../dialogs/DmDialog\";\nimport { JoinWithAliasDialog } from \"../dialogs/JoinWithAliasDialog\";\nimport { DropdownMenu } from \"../../../atoms/menu/DropdownMenu\";\nimport { DropdownMenuItem } from \"../../../atoms/menu/DropdownMenuItem\";\nimport { useDialog } from \"../../../hooks/useDialog\";\nimport { Dialog } from \"../../../atoms/dialog/Dialog\";\nimport { sidebarTabAtom, SidebarTab } from \"../../../state/sidebarTab\";\nimport { OverlayWindow, overlayWindowAtom } from \"../../../state/overlayWindow\";\n\nexport function RoomListHeader() {\n  const sidebarTab = useAtomValue(sidebarTabAtom);\n  const setOverlayWindow = useSetAtom(overlayWindowAtom);\n  const { open, setOpen, openDialog, closeDialog } = useDialog(false);\n  const {\n    open: openJoin,\n    setOpen: setJoinOpen,\n    openDialog: openJoinDialog,\n    closeDialog: closeJoinDialog,\n  } = useDialog(false);\n\n  return (\n    <header className=\"RoomListHeader shrink-0 flex items-center gap-xs\">\n      {sidebarTab === SidebarTab.Home && (\n        <>\n          <Text className=\"grow truncate\" variant=\"s2\" weight=\"semi-bold\">\n            Home\n          </Text>\n          <Dialog open={openJoin} onOpenChange={setJoinOpen}>\n            <JoinWithAliasDialog requestClose={closeJoinDialog} />\n          </Dialog>\n          <DropdownMenu\n            content={\n              <>\n                <DropdownMenuItem onSelect={() => setOverlayWindow({ type: OverlayWindow.CreateWorld })}>\n                  Create World\n                </DropdownMenuItem>\n                <DropdownMenuItem onSelect={openJoinDialog}>Join with Alias</DropdownMenuItem>\n              </>\n            }\n          >\n            <IconButton label=\"Add\" iconSrc={AddIC} />\n          </DropdownMenu>\n        </>\n      )}\n      {sidebarTab === SidebarTab.Friends && (\n        <>\n          <Text className=\"grow truncate\" variant=\"s2\" weight=\"semi-bold\">\n            Friends\n          </Text>\n          <Dialog open={open} onOpenChange={setOpen}>\n            <DmDialog requestClose={closeDialog} />\n          </Dialog>\n          <IconButton onClick={openDialog} label=\"Direct Message\" iconSrc={AddIC} />\n        </>\n      )}\n      {sidebarTab === SidebarTab.Notifications && (\n        <>\n          <Text className=\"grow truncate\" variant=\"s2\" weight=\"semi-bold\">\n            Notifications\n          </Text>\n        </>\n      )}\n    </header>\n  );\n}\n","import { ReactNode } from \"react\";\n\nimport \"./RoomListContent.css\";\n\ninterface IRoomListContent {\n  children: ReactNode;\n}\n\nexport function RoomListContent({ children }: IRoomListContent) {\n  return <div className=\"RoomListViewContent\">{children}</div>;\n}\n","import { ReactNode } from \"react\";\n\nimport { Scroll } from \"../../../atoms/scroll/Scroll\";\n\nimport \"./ActiveChats.css\";\n\ninterface ActiveChatsProps {\n  chat?: ReactNode;\n  tiles: ReactNode;\n}\n\nexport function ActiveChats({ chat, tiles }: ActiveChatsProps) {\n  return (\n    <div className=\"ActiveChats flex flex-column\">\n      <div className=\"ActiveChats__chat grow flex justify-end items-end\">{chat}</div>\n      <Scroll className=\"shrink-0\" orientation=\"horizontal\" type=\"scroll\">\n        <div className=\"flex justify-end\">\n          <div className=\"ActiveChats__tiles flex flex-row-reverse\">{tiles}</div>\n        </div>\n      </Scroll>\n    </div>\n  );\n}\n","export default \"__VITE_ASSET__b19d1ec9__\"","import { ReactNode } from \"react\";\nimport classNames from \"classnames\";\n\nimport { Text } from \"../../../atoms/text/Text\";\nimport { IconButton } from \"../../../atoms/button/IconButton\";\nimport CrossCircleIC from \"../../../../../res/ic/cross-circle.svg\";\n\nimport \"./ActiveChatTile.css\";\n\ninterface IActiveChatTile {\n  roomId: string;\n  avatar: ReactNode;\n  title: string;\n  isActive: boolean;\n  onClick: (roomId: string) => void;\n  onClose: (roomId: string) => void;\n}\n\nexport function ActiveChatTile({ roomId, avatar, title, isActive, onClick, onClose }: IActiveChatTile) {\n  const activeChatClass = classNames(\"ActiveChatTile\", { [\"ActiveChatTile--active\"]: isActive }, \"flex items-center\");\n\n  return (\n    <div className={activeChatClass}>\n      <button className=\"grow flex items-center\" type=\"button\" onClick={() => onClick(roomId)}>\n        <div className=\"shrink-0\">{avatar}</div>\n        <Text\n          className=\"ActiveChatTile__title truncate\"\n          type=\"span\"\n          color={isActive ? \"on-primary\" : \"surface\"}\n          weight=\"medium\"\n        >\n          {title}\n        </Text>\n      </button>\n      <div className=\"ActiveChatTile__options shrink-0\">\n        <IconButton\n          variant={isActive ? \"on-primary\" : \"surface-low\"}\n          size=\"sm\"\n          iconSrc={CrossCircleIC}\n          label=\"Close\"\n          onClick={() => onClose(roomId)}\n        />\n      </div>\n    </div>\n  );\n}\n","import { ReactNode } from \"react\";\n\nimport \"./ChatView.css\";\n\ninterface ChatViewProps {\n  children: ReactNode;\n}\n\nexport function ChatView({ children }: ChatViewProps) {\n  return <div className=\"ChatView flex flex-column\">{children}</div>;\n}\n","import classNames from \"classnames\";\nimport { ReactNode } from \"react\";\n\nimport { Text } from \"../../../atoms/text/Text\";\nimport \"./ChatHeader.css\";\n\ninterface IChatHeader {\n  className?: string;\n  avatar: ReactNode;\n  title: string;\n  options: ReactNode;\n}\n\nexport function ChatHeader({ className, avatar, title, options }: IChatHeader) {\n  return (\n    <header className={classNames(\"ChatHeader flex items-center\", className)}>\n      <div className=\"shrink-0 flex\">{avatar}</div>\n      <div className=\"ChatHeader__title grow\">\n        <Text className=\"truncate\">{title}</Text>\n      </div>\n      <div className=\"ChatHeader__options shrink-0 flex\">{options}</div>\n    </header>\n  );\n}\n","export default \"__VITE_ASSET__bdb1f41d__\"","import { Invite, Platform, Room, Session } from \"@thirdroom/hydrogen-view-sdk\";\n\nimport { ChatHeader } from \"../../components/chat-header/ChatHeader\";\nimport { Avatar } from \"../../../atoms/avatar/Avatar\";\nimport { IconButton } from \"../../../atoms/button/IconButton\";\nimport { getAvatarHttpUrl, getIdentifierColorNumber } from \"../../../utils/avatar\";\nimport CrossIC from \"../../../../../res/ic/cross.svg\";\nimport MinusIC from \"../../../../../res/ic/minus.svg\";\n\ninterface ChatViewHeaderProps {\n  room: Room | Invite;\n  session: Session;\n  platform: Platform;\n  onMinimize: (roomId: string) => void;\n  onClose: (roomId: string) => void;\n}\n\nexport function ChatViewHeader({ room, platform, session, onMinimize, onClose }: ChatViewHeaderProps) {\n  const roomName = room.name || \"Empty room\";\n\n  return (\n    <ChatHeader\n      className=\"shrink-0\"\n      avatar={\n        <Avatar\n          imageSrc={\n            room.avatarUrl ? getAvatarHttpUrl(room.avatarUrl, 50, platform, session.mediaRepository) : undefined\n          }\n          size=\"sm\"\n          name={roomName}\n          bgColor={`var(--usercolor${getIdentifierColorNumber(room.id)})`}\n        />\n      }\n      title={roomName}\n      options={\n        <>\n          <IconButton variant=\"surface\" label=\"Minimize\" iconSrc={MinusIC} onClick={() => onMinimize(room.id)} />\n          <IconButton variant=\"surface\" label=\"Close\" iconSrc={CrossIC} onClick={() => onClose(room.id)} />\n        </>\n      }\n    />\n  );\n}\n","import { TemplateView, GapTile, Builder, TileView } from \"@thirdroom/hydrogen-view-sdk\";\n\nimport \"./ChatGap.css\";\nexport class ChatGap extends TemplateView<GapTile> implements TileView {\n  constructor(vm: GapTile) {\n    super(vm);\n  }\n\n  render(t: Builder<GapTile>, vm: GapTile) {\n    return t.li(\n      { className: \"ChatGap flex justify-center\" },\n      t.p({ className: \"ChatGap__content Text Text-b2 Text--surface Text--semi-bold\" }, [\n        (vm) => (vm.isLoading ? \"Loading more messages...\" : \"Not loading!\"),\n        (vm) => (vm.error ? vm.error : \"\"),\n      ])\n    );\n  }\n\n  /* This is called by the parent ListView, which just has 1 listener for the whole list */\n  onClick() {}\n}\n","import classNames from \"classnames\";\nimport { TemplateView, BaseMessageTile, TileView, Builder } from \"@thirdroom/hydrogen-view-sdk\";\n\nimport \"./ChatBaseMessage.css\";\n\nexport abstract class ChatBaseMessage extends TemplateView<BaseMessageTile> implements TileView {\n  constructor(vm: BaseMessageTile) {\n    super(vm);\n  }\n\n  render(t: Builder<BaseMessageTile>, vm: BaseMessageTile): Element {\n    const isEmote = vm._getContent()?.msgtype === \"m.emote\";\n    const contentOnly = vm.isContinuation;\n    return t.li(\n      {\n        className: classNames(\n          \"ChatBaseMessage\",\n          { \"ChatBaseMessage--contentOnly\": contentOnly && !isEmote },\n          { \"ChatBaseMessage--emote\": isEmote },\n          \"flex\"\n        ),\n      },\n      [\n        contentOnly && !isEmote ? \"\" : this.renderAvatar(t, vm),\n        t.div({ className: \"ChatBaseMessage__content grow\" }, [\n          contentOnly || isEmote\n            ? \"\"\n            : t.p(\n                { className: \"ChatBaseMessage__sender Text Text-b2 Text--surface Text--bold truncate\" },\n                vm.displayName\n              ),\n          t.div({ className: \"ChatBaseMessage__body\" }, this.renderBody?.(t, vm) || \"\"),\n        ]),\n      ]\n    );\n  }\n\n  renderAvatar(t: Builder<BaseMessageTile>, vm: BaseMessageTile): Element {\n    const isEmote = vm._getContent()?.msgtype === \"m.emote\";\n    const avatarUrl = vm.avatarUrl(40);\n    const { avatarColorNumber, avatarLetter, avatarTitle } = vm;\n\n    const className = classNames(`ChatBaseMessage__avatar ChatBaseMessage__avatar-${avatarColorNumber} shrink-0`, {\n      \"ChatBaseMessage__avatar--sm\": isEmote,\n    });\n\n    const child = avatarUrl\n      ? t.img({ src: avatarUrl })\n      : t.span({ className: \"Text Text-b2 Text--medium\" }, avatarLetter);\n\n    return t.div({ className, \"aria-label\": avatarTitle }, child);\n  }\n\n  onClick() {}\n  abstract renderBody<T extends Builder<BaseMessageTile>>(t: T, vm: BaseMessageTile): Element;\n}\n","import { TextTile, Builder, BaseMessageTile } from \"@thirdroom/hydrogen-view-sdk\";\n\nimport { linkifyText } from \"../../../../utils/common\";\nimport { ChatBaseMessage } from \"./ChatBaseMessage\";\n\nimport \"./ChatMessage.css\";\n\nexport class ChatMessage extends ChatBaseMessage {\n  constructor(vm: TextTile) {\n    super(vm);\n  }\n\n  renderBody<T extends Builder<BaseMessageTile>>(t: T, vm: TextTile): Element {\n    const isEmote = vm._getContent()?.msgtype === \"m.emote\";\n    let body = isEmote ? `* ${vm.displayName} ` : \"\";\n    body += vm._getPlainBody?.();\n    return t.div(\n      { className: \"ChatMessage__body flex\" },\n      t.p({ className: \"Text Text-b2 Text--surface Text--regular\" }, linkifyText(body) || \"*** EMPTY MESSAGE ***\")\n    );\n  }\n  onClick() {}\n}\n","import { TemplateView, RoomMemberTile, Builder } from \"@thirdroom/hydrogen-view-sdk\";\nimport \"./ChatAnnouncement.css\";\n\nexport class ChatAnnouncement extends TemplateView<RoomMemberTile> {\n  constructor(vm: RoomMemberTile) {\n    super(vm);\n  }\n\n  render(t: Builder<RoomMemberTile>, vm: RoomMemberTile): Element {\n    return t.li(\n      { className: \"ChatAnnouncement flex\" },\n      t.div(\n        { className: \"ChatAnnouncement__content\" },\n        t.p({ className: \"Text Text-b2 Text--surface-low Text--regular\" }, vm.announcement)\n      )\n    );\n  }\n\n  onClick() {}\n}\n","import { ImageTile, Builder, BaseMessageTile } from \"@thirdroom/hydrogen-view-sdk\";\n\nimport { ChatBaseMessage } from \"./ChatBaseMessage\";\n\nimport \"./ChatImage.css\";\n\nexport class ChatImage extends ChatBaseMessage {\n  constructor(vm: ImageTile) {\n    super(vm);\n  }\n\n  renderBody<T extends Builder<BaseMessageTile>>(t: T, vm: ImageTile): Element {\n    const { height } = vm;\n    return t.div(\n      { className: \"ChatImage__body flex\" },\n      t.img({ src: vm.thumbnailUrl, style: `width: 340px; height: ${height}px;` })\n    );\n  }\n  onClick() {}\n}\n","import { TemplateView, DateTile, Builder } from \"@thirdroom/hydrogen-view-sdk\";\n\nimport \"./ChatDate.css\";\n\nexport class ChatDate extends TemplateView<DateTile> {\n  constructor(vm: DateTile) {\n    super(vm);\n  }\n\n  render(t: Builder<DateTile>, vm: DateTile) {\n    return t.p(\n      { className: \"ChatDate Text Text-b2 Text--surface Text--semi-bold\" },\n      t.time({ dateTime: vm.machineReadableDate }, vm.relativeDate)\n    );\n  }\n\n  onClick() {}\n}\n","import { SimpleTile, TileViewConstructor } from \"@thirdroom/hydrogen-view-sdk\";\n\nimport { ChatGap } from \"./ChatGap\";\nimport { ChatMessage } from \"./ChatMessage\";\nimport { ChatAnnouncement } from \"./ChatAnnouncement\";\nimport { ChatImage } from \"./ChatImage\";\nimport { ChatDate } from \"./ChatDate\";\n\nexport function viewClassForTile(vm: SimpleTile): TileViewConstructor<any> {\n  switch (vm.shape) {\n    case \"gap\":\n      return ChatGap;\n    case \"announcement\":\n      return ChatAnnouncement;\n    case \"message\":\n    case \"message-status\":\n      return ChatMessage;\n    case \"image\":\n      return ChatImage;\n    case \"date-header\":\n      return ChatDate;\n    default:\n      throw new Error(\n        `Tiles of shape \"${vm.shape}\" are not supported, check the tileClassForEntry function in the view model`\n      );\n  }\n}\n","import { useRef } from \"react\";\nimport { TimelineViewModel } from \"@thirdroom/hydrogen-view-sdk\";\n\nimport \"./ChatTimeline.css\";\nimport { useEmbedTimeline } from \"../../../hooks/useEmbedTimeline\";\nimport { viewClassForTile } from \"./tiles\";\n\ninterface ChatTimelineProps {\n  timelineViewModel: TimelineViewModel;\n}\n\nexport function ChatTimeline({ timelineViewModel }: ChatTimelineProps) {\n  const chatTimelineRef = useRef<HTMLDivElement>(null);\n  useEmbedTimeline(chatTimelineRef, timelineViewModel, viewClassForTile);\n\n  return <div className=\"ChatTimeline flex\" ref={chatTimelineRef} />;\n}\n","export default \"__VITE_ASSET__8331ea29__\"","import { FormEvent } from \"react\";\nimport { ComposerViewModel } from \"@thirdroom/hydrogen-view-sdk\";\n\nimport { IconButton } from \"../../../atoms/button/IconButton\";\nimport SendIC from \"../../../../../res/ic/send.svg\";\nimport \"./ChatComposer.css\";\n\ninterface ChatComposerProps {\n  composerViewModel: ComposerViewModel;\n}\n\nexport function ChatComposer({ composerViewModel }: ChatComposerProps) {\n  const handleSubmit = (ev: FormEvent) => {\n    ev.preventDefault();\n    const target = ev.target as typeof ev.target & {\n      message: { value: string };\n    };\n    const message = target.message.value.trim();\n    if (message === \"\") return;\n    target.message.value = \"\";\n    composerViewModel.sendMessage(message);\n  };\n\n  return (\n    <div className=\"ChatComposer flex\">\n      <form className=\"grow flex items-center\" onSubmit={handleSubmit}>\n        <input\n          className=\"Text Text-b1 Text--surface Text--regular grow\"\n          name=\"message\"\n          type=\"text\"\n          placeholder=\"Send a message...\"\n          autoComplete=\"off\"\n          autoFocus\n        />\n        <IconButton iconSrc={SendIC} label=\"Send Message\" type=\"submit\" />\n      </form>\n    </div>\n  );\n}\n","import { Room } from \"@thirdroom/hydrogen-view-sdk\";\n\nimport { useRoomViewModel, chatTileClassForEntry } from \"../../../hooks/useRoomViewModel\";\nimport { ChatTimeline } from \"./ChatTimeline\";\nimport { ChatComposer } from \"./ChatComposer\";\nimport { Dots } from \"../../../atoms/loading/Dots\";\n\ninterface ChatViewContentProps {\n  room: Room;\n}\n\nexport function ChatViewContent({ room }: ChatViewContentProps) {\n  setTimeout(() => room.clearUnread(), 1000);\n  const { loading, roomViewModel, error } = useRoomViewModel(room, chatTileClassForEntry);\n\n  return (\n    <>\n      {error && <div className=\"grow flex justify-center items-center\">{error.message}</div>}\n      {!error && (loading || !roomViewModel) && (\n        <div className=\"grow flex justify-center items-center\">\n          <Dots color=\"surface-low\" />\n        </div>\n      )}\n      {!error && roomViewModel?.timelineViewModel && (\n        <>\n          <div className=\"grow\">\n            <ChatTimeline timelineViewModel={roomViewModel.timelineViewModel!} />\n          </div>\n          <div className=\"shrink-0\">\n            <ChatComposer composerViewModel={roomViewModel.composerViewModel!} />\n          </div>\n        </>\n      )}\n    </>\n  );\n}\n","import { Invite, Session } from \"@thirdroom/hydrogen-view-sdk\";\n\nimport { useObservableMap } from \"./useObservableMap\";\n\nexport function useInvite(session: Session, roomId: string | undefined): Invite | undefined {\n  const invites = useObservableMap(() => session.invites, [session.invites]);\n  return roomId ? invites.get(roomId) : undefined;\n}\n","import { useReducer } from \"react\";\nimport { Session } from \"@thirdroom/hydrogen-view-sdk\";\n\nimport { useInvite } from \"./useInvite\";\nimport { useIsMounted } from \"./useIsMounted\";\n\nexport function useInviteControl(session: Session, roomId: string) {\n  const [, forceUpdate] = useReducer((v) => v + 1, 0);\n  const isMounted = useIsMounted();\n  const invite = useInvite(session, roomId);\n\n  const accept = async () => {\n    if (!invite) return;\n    forceUpdate();\n    // TODO: handle error when unable to join\n    // when canonicalAlias is not available.\n    await invite.accept();\n    if (!isMounted()) return;\n    forceUpdate();\n  };\n  const reject = async () => {\n    if (!invite) return;\n    forceUpdate();\n    await invite.reject();\n    if (!isMounted()) return;\n    forceUpdate();\n  };\n\n  return { invite, accept, reject };\n}\n","import { Session } from \"@thirdroom/hydrogen-view-sdk\";\n\nimport { Button } from \"../../../atoms/button/Button\";\nimport { Text } from \"../../../atoms/text/Text\";\nimport { Dots } from \"../../../atoms/loading/Dots\";\nimport { useInviteControl } from \"../../../hooks/useInviteControl\";\nimport { Avatar } from \"../../../atoms/avatar/Avatar\";\nimport { getIdentifierColorNumber } from \"../../../utils/avatar\";\n\ninterface ChatViewInviteProps {\n  session: Session;\n  roomId: string;\n}\nexport function ChatViewInvite({ session, roomId }: ChatViewInviteProps) {\n  const { invite, accept, reject } = useInviteControl(session, roomId);\n\n  if (invite === undefined) return <Text className=\"grow flex justify-center items-center\">Failed to load invite</Text>;\n\n  return (\n    <div\n      style={{ padding: \"var(--sp-md)\" }}\n      className=\"grow text-center flex flex-column justify-center items-center gap-md\"\n    >\n      <Avatar\n        imageSrc={invite.avatarUrl}\n        size=\"lg\"\n        name={invite.name || \"Unnamed Room\"}\n        bgColor={`var(--usercolor${getIdentifierColorNumber(invite.id)})`}\n      />\n      <Text>\n        <b>{invite.inviter.name}</b> invites you to <b>{invite.name || \"Unnamed Room\"}</b>.\n      </Text>\n      <div className=\"flex gap-xs\">\n        {!(invite.accepting || invite.accepted) && (\n          <Button fill=\"outline\" onClick={reject} disabled={invite.rejecting}>\n            {invite.rejecting ? <Dots color=\"primary\" /> : \"Reject\"}\n          </Button>\n        )}\n        {!(invite.rejecting || invite.rejected) && (\n          <Button onClick={accept} disabled={invite.accepting}>\n            {invite.accepting ? <Dots color=\"on-primary\" /> : \"Accept\"}\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n}\n","import { BaseObservableValue } from \"@thirdroom/hydrogen-view-sdk\";\n\nimport { useObservable } from \"./useObservable\";\n\nexport function useObservableValue<T>(observableFactory: () => BaseObservableValue<T>, deps: unknown[]): T {\n  return useObservable(\n    observableFactory,\n    (update) => update,\n    (observable) => observable.get(),\n    deps\n  );\n}\n","import { BaseObservableValue, ObservableValue } from \"@thirdroom/hydrogen-view-sdk\";\n\nimport { useObservableValue } from \"./useObservableValue\";\nimport { useAsync } from \"./useAsync\";\n\ninterface UseAsyncObservableReturn<T> {\n  loading: boolean;\n  error?: any;\n  value?: T | undefined;\n}\n\nexport function useAsyncObservableValue<T>(\n  promiseFactory: () => Promise<BaseObservableValue<T>>,\n  deps: unknown[]\n): UseAsyncObservableReturn<T> {\n  const { loading, error, value: observable } = useAsync(promiseFactory, deps);\n\n  const value = useObservableValue(() => observable || new ObservableValue(undefined), [observable]);\n\n  return { loading, error, value };\n}\n","import { ObservableValue, Session } from \"@thirdroom/hydrogen-view-sdk\";\n\nimport { useAsyncObservableValue } from \"./useAsyncObservableValue\";\n\nexport function useRoomStatus(session: Session, roomId?: string) {\n  return useAsyncObservableValue(\n    () => (roomId ? session.observeRoomStatus(roomId) : Promise.resolve(new ObservableValue(undefined))),\n    [session, roomId]\n  );\n}\n","import { ReactNode } from \"react\";\nimport classNames from \"classnames\";\n\nimport \"./Window.css\";\nimport { useKeyDown } from \"../../../hooks/useKeyDown\";\n\ninterface WindowProps {\n  className?: string;\n  onRequestClose?: () => void;\n  children: ReactNode;\n}\n\nexport function Window({ className, onRequestClose, children }: WindowProps) {\n  useKeyDown((e) => {\n    if (e.key === \"Escape\") onRequestClose?.();\n  }, []);\n\n  return <div className={classNames(\"Window flex flex-column\", className)}>{children}</div>;\n}\n","import { MouseEvent, ReactNode } from \"react\";\nimport classNames from \"classnames\";\n\nimport { Icon } from \"../../../atoms/icon/Icon\";\nimport { Text } from \"../../../atoms/text/Text\";\n\ninterface DiscoverGroupProps {\n  className?: string;\n  label: ReactNode;\n  content: ReactNode;\n  footer?: ReactNode;\n}\n\nexport function DiscoverGroup({ className, label, content, footer }: DiscoverGroupProps) {\n  return (\n    <div className={classNames(\"flex flex-column gap-xs\", className)}>\n      {label}\n      {content}\n      {footer}\n    </div>\n  );\n}\n\ninterface DiscoverGroupGridProps {\n  className?: string;\n  itemMinWidth?: number;\n  gap?: \"xxs\" | \"xs\" | \"sm\" | \"md\" | \"lg\" | \"xs\";\n  children: ReactNode | ReactNode[];\n}\nexport function DiscoverGroupGrid({ className, itemMinWidth = 475, gap = \"xs\", children }: DiscoverGroupGridProps) {\n  return (\n    <div\n      style={{\n        display: \"grid\",\n        gridGap: `var(--sp-${gap})`,\n        gridTemplateColumns: `repeat(auto-fit, minmax(${itemMinWidth}px, 1fr))`,\n      }}\n      className={className}\n    >\n      {children}\n    </div>\n  );\n}\n\ninterface DiscoverMoreButtonProps {\n  className?: string;\n  text?: string;\n  iconSrc?: string;\n  onClick?: (event: MouseEvent<HTMLButtonElement>) => void;\n}\nexport function DiscoverMoreButton({ className, text, iconSrc, onClick }: DiscoverMoreButtonProps) {\n  return (\n    <button\n      style={{ cursor: \"pointer\" }}\n      className={classNames(\"flex items-center gap-sm\", className)}\n      onClick={onClick}\n      type=\"button\"\n    >\n      <Text variant=\"b3\" weight=\"bold\">\n        {text}\n      </Text>\n      {iconSrc && <Icon size=\"sm\" src={iconSrc} />}\n    </button>\n  );\n}\n","import { ObservableMap, Room, StateEvent } from \"@thirdroom/hydrogen-view-sdk\";\nimport { useEffect, useState } from \"react\";\n\nimport { useIsMounted } from \"./useIsMounted\";\nimport { useObservableMap } from \"./useObservableMap\";\n\nexport function useStateEvents(room: Room, eventType: string) {\n  const [eventObservable, setEventObservable] = useState(new ObservableMap<string, StateEvent>());\n  const isMounted = useIsMounted();\n\n  const events = useObservableMap(() => eventObservable, [eventObservable]);\n\n  useEffect(() => {\n    room.observeStateType(eventType).then((stateObserver) => {\n      if (!isMounted()) return;\n      setEventObservable(stateObserver);\n    });\n  }, [eventType, room, isMounted]);\n\n  return events;\n}\n","import { Room, StateEvent } from \"@thirdroom/hydrogen-view-sdk\";\n\nimport { useStateEvents } from \"../../hooks/useStateEvents\";\nimport { RepositoryEvents } from \"../session/discover/DiscoverView\";\n\nexport function useFeaturedWorlds(repoRoom: Room) {\n  const featuredWorldsMap = useStateEvents(repoRoom, RepositoryEvents.FeaturedWorld);\n  return [...featuredWorldsMap]\n    .map(([eventId, stateEvent]) => stateEvent)\n    .filter((stateEvent) => Object.keys(stateEvent.content).length > 0);\n}\n\nexport function FeaturedWorldsProvider({\n  room,\n  children,\n}: {\n  room: Room;\n  children: (featuredWorlds: StateEvent[]) => JSX.Element | null;\n}) {\n  const featuredWorlds = useFeaturedWorlds(room);\n  return children(featuredWorlds);\n}\n","import { Room, StateEvent } from \"@thirdroom/hydrogen-view-sdk\";\n\nimport { useStateEvents } from \"../../hooks/useStateEvents\";\nimport { RepositoryEvents } from \"../session/discover/DiscoverView\";\n\nexport function useFeaturedRooms(repoRoom: Room) {\n  const featuredRoomsMap = useStateEvents(repoRoom, RepositoryEvents.FeaturedRoom);\n  return [...featuredRoomsMap]\n    .map(([eventId, stateEvent]) => stateEvent)\n    .filter((stateEvent) => Object.keys(stateEvent.content).length > 0);\n}\n\nexport function FeaturedRoomsProvider({\n  room,\n  children,\n}: {\n  room: Room;\n  children: (featuredRooms: StateEvent[]) => JSX.Element | null;\n}) {\n  const featuredRooms = useFeaturedRooms(room);\n  return children(featuredRooms);\n}\n","import classNames from \"classnames\";\nimport { ReactNode } from \"react\";\n\nimport { Icon } from \"../../../atoms/icon/Icon\";\nimport PeoplesIC from \"../../../../../res/ic/peoples.svg\";\nimport { Text } from \"../../../atoms/text/Text\";\n\nimport \"./RoomPreviewCard.css\";\n\ninterface RoomPreviewCardProps {\n  className?: string;\n  avatar?: ReactNode;\n  name?: string | ReactNode;\n  desc?: string | ReactNode;\n  memberCount?: number;\n  options?: ReactNode;\n}\n\nexport function RoomPreviewCard({ className, avatar, name, desc, memberCount, options }: RoomPreviewCardProps) {\n  return (\n    <div className={classNames(\"RoomPreviewCard\", \"flex items-center gap-xs\", className)}>\n      <div className=\"shrink-0 flex\">{avatar}</div>\n      <div className=\"grow flex items-center gap-md\">\n        <div className=\"grow\">\n          {name && (\n            <Text variant=\"b2\" className=\"truncate\" weight=\"medium\">\n              {name}\n            </Text>\n          )}\n          {memberCount && (\n            <div className=\"flex items-center gap-xxs\">\n              <Icon size=\"sm\" src={PeoplesIC} />\n              <Text variant=\"b3\" weight=\"bold\">\n                {memberCount}\n              </Text>\n            </div>\n          )}\n          {desc && (\n            <Text className=\"truncate\" variant=\"b3\">\n              {desc}\n            </Text>\n          )}\n        </div>\n        {options && <div className=\"shrink-0\">{options}</div>}\n      </div>\n    </div>\n  );\n}\n","import { Session } from \"@thirdroom/hydrogen-view-sdk\";\nimport { useEffect, useState } from \"react\";\n\nimport { useHydrogen } from \"./useHydrogen\";\n\nexport function getRoomSummary(session: Session, roomIdOrAlias: string, signal?: AbortSignal) {\n  const { homeserver } = session.sessionInfo;\n  return fetch(\n    `${homeserver}/_matrix/client/unstable/im.nheko.summary/rooms/${encodeURIComponent(roomIdOrAlias)}/summary`,\n    { signal }\n  );\n}\n\nexport interface SummaryData {\n  roomId: string;\n  avatarUrl?: string;\n  name: string;\n  topic?: string;\n  alias?: string;\n  roomType?: string;\n  memberCount: number;\n}\n\nexport function useRoomSummary(roomIdOrAlias: string) {\n  const { session } = useHydrogen(true);\n  const [summary, setSummary] = useState<SummaryData>();\n\n  useEffect(() => {\n    let controller: AbortController | undefined;\n    const run = async () => {\n      controller = new AbortController();\n      const response = await getRoomSummary(session, roomIdOrAlias, controller.signal);\n      const data = await response.json();\n      if (data.errcode) {\n        return;\n      }\n      setSummary({\n        roomId: data.room_id,\n        avatarUrl: data.avatar_url,\n        name: data.name,\n        topic: data.topic,\n        alias: data.canonical_alias,\n        roomType: data.room_type,\n        memberCount: data.num_joined_members,\n      });\n    };\n    if (roomIdOrAlias) run();\n    return () => {\n      controller?.abort();\n    };\n  }, [session, roomIdOrAlias]);\n\n  return summary;\n}\n","import { SummaryData, useRoomSummary } from \"../../hooks/useRoomSummary\";\n\nexport function RoomSummaryProvider({\n  roomIdOrAlias,\n  fallback,\n  children,\n}: {\n  roomIdOrAlias: string;\n  fallback: () => JSX.Element;\n  children: (summary: SummaryData) => JSX.Element;\n}) {\n  const summary = useRoomSummary(roomIdOrAlias);\n  if (!summary) return fallback();\n  return children(summary);\n}\n","import { Session } from \"@thirdroom/hydrogen-view-sdk\";\n\nimport { useAsyncCallback } from \"../../hooks/useAsyncCallback\";\n\nexport function JoinRoomProvider({\n  session,\n  roomId,\n  children,\n}: {\n  session: Session;\n  roomId: string;\n  children: (\n    join: (aliasOrId: string) => Promise<unknown>,\n    isJoined: boolean,\n    loading: boolean,\n    error: Error | undefined\n  ) => JSX.Element | null;\n}) {\n  const { value, loading, error, callback } = useAsyncCallback<(aliasOrId: string) => Promise<string>, string>(\n    async (aliasOrId: string) => {\n      const res = await session.hsApi.joinIdOrAlias(aliasOrId).response();\n      const rId = res?.room_id ?? undefined;\n      return rId;\n    },\n    [session]\n  );\n\n  const isJoined = typeof value === \"string\" || !!session.rooms.get(roomId);\n\n  return children(callback, isJoined, loading, error);\n}\n","import { Platform, Session } from \"@thirdroom/hydrogen-view-sdk\";\nimport { useSetAtom } from \"jotai\";\n\nimport { Avatar } from \"../../../atoms/avatar/Avatar\";\nimport { Button } from \"../../../atoms/button/Button\";\nimport { RoomPreviewCard } from \"../../components/room-preview-card/RoomPreviewCard\";\nimport { RoomSummaryProvider } from \"../../components/RoomSummaryProvider\";\nimport { getAvatarHttpUrl, getIdentifierColorNumber } from \"../../../utils/avatar\";\nimport { Dots } from \"../../../atoms/loading/Dots\";\nimport { JoinRoomProvider } from \"../../components/JoinRoomProvider\";\nimport { activeChatsAtom } from \"../../../state/overlayChat\";\nimport { SidebarTab, sidebarTabAtom } from \"../../../state/sidebarTab\";\nimport { OverlayWindow, overlayWindowAtom } from \"../../../state/overlayWindow\";\n\nexport function FeaturedRoomCard({\n  session,\n  platform,\n  roomId,\n}: {\n  session: Session;\n  platform: Platform;\n  roomId: string;\n}) {\n  const selectChat = useSetAtom(activeChatsAtom);\n  const setSidebarTab = useSetAtom(sidebarTabAtom);\n  const setOverlayWindow = useSetAtom(overlayWindowAtom);\n\n  const handleViewRoom = () => {\n    selectChat({ type: \"OPEN\", roomId });\n    setSidebarTab(SidebarTab.Home);\n    setOverlayWindow({ type: OverlayWindow.None });\n  };\n\n  return (\n    <RoomSummaryProvider roomIdOrAlias={roomId} fallback={() => <RoomPreviewCard />}>\n      {(summaryData) => (\n        <RoomPreviewCard\n          avatar={\n            <Avatar\n              imageSrc={\n                summaryData.avatarUrl && getAvatarHttpUrl(summaryData.avatarUrl, 60, platform, session.mediaRepository)\n              }\n              shape=\"rounded\"\n              size=\"lg\"\n              bgColor={`var(--usercolor${getIdentifierColorNumber(summaryData.roomId)})`}\n              name={summaryData.name}\n            />\n          }\n          name={summaryData.name}\n          desc={summaryData.topic}\n          memberCount={summaryData.memberCount}\n          options={\n            <div className=\"flex items-center gap-xs\">\n              <JoinRoomProvider session={session} roomId={roomId}>\n                {(join, isJoined, loading, error) =>\n                  isJoined ? (\n                    <Button variant=\"secondary\" fill=\"outline\" size=\"sm\" onClick={handleViewRoom}>\n                      View\n                    </Button>\n                  ) : (\n                    <Button\n                      disabled={loading}\n                      variant=\"secondary\"\n                      size=\"sm\"\n                      onClick={() => join(summaryData.alias ?? roomId)}\n                    >\n                      {loading && <Dots size=\"sm\" color=\"on-secondary\" />}\n                      {loading ? \"Joining\" : \"Join\"}\n                    </Button>\n                  )\n                }\n              </JoinRoomProvider>\n            </div>\n          }\n        />\n      )}\n    </RoomSummaryProvider>\n  );\n}\n","import { Platform, Session } from \"@thirdroom/hydrogen-view-sdk\";\nimport { useSetAtom } from \"jotai\";\n\nimport { Avatar } from \"../../../atoms/avatar/Avatar\";\nimport { Button } from \"../../../atoms/button/Button\";\nimport { RoomPreviewCard } from \"../../components/room-preview-card/RoomPreviewCard\";\nimport { RoomSummaryProvider } from \"../../components/RoomSummaryProvider\";\nimport { getAvatarHttpUrl, getIdentifierColorNumber } from \"../../../utils/avatar\";\nimport { Dots } from \"../../../atoms/loading/Dots\";\nimport { JoinRoomProvider } from \"../../components/JoinRoomProvider\";\nimport { overlayWorldAtom } from \"../../../state/overlayWorld\";\nimport { SidebarTab, sidebarTabAtom } from \"../../../state/sidebarTab\";\nimport { OverlayWindow, overlayWindowAtom } from \"../../../state/overlayWindow\";\n\nexport function FeaturedWorldCard({\n  session,\n  platform,\n  roomId,\n}: {\n  session: Session;\n  platform: Platform;\n  roomId: string;\n}) {\n  const selectWorld = useSetAtom(overlayWorldAtom);\n  const setSidebarTab = useSetAtom(sidebarTabAtom);\n  const setOverlayWindow = useSetAtom(overlayWindowAtom);\n\n  const handleViewWorld = () => {\n    selectWorld(roomId);\n    setSidebarTab(SidebarTab.Home);\n    setOverlayWindow({ type: OverlayWindow.None });\n  };\n\n  return (\n    <RoomSummaryProvider roomIdOrAlias={roomId} fallback={() => <RoomPreviewCard />}>\n      {(summaryData) => (\n        <RoomPreviewCard\n          avatar={\n            <Avatar\n              imageSrc={\n                summaryData.avatarUrl && getAvatarHttpUrl(summaryData.avatarUrl, 60, platform, session.mediaRepository)\n              }\n              shape=\"circle\"\n              size=\"lg\"\n              bgColor={`var(--usercolor${getIdentifierColorNumber(summaryData.roomId)})`}\n              name={summaryData.name}\n            />\n          }\n          name={summaryData.name}\n          desc={summaryData.topic}\n          memberCount={summaryData.memberCount}\n          options={\n            <div className=\"flex items-center gap-xs\">\n              <JoinRoomProvider session={session} roomId={roomId}>\n                {(join, isJoined, loading, error) =>\n                  isJoined ? (\n                    <Button variant=\"secondary\" fill=\"outline\" size=\"sm\" onClick={handleViewWorld}>\n                      View\n                    </Button>\n                  ) : (\n                    <Button\n                      disabled={loading}\n                      variant=\"secondary\"\n                      size=\"sm\"\n                      onClick={() => join(summaryData.alias ?? roomId)}\n                    >\n                      {loading && <Dots size=\"sm\" color=\"on-secondary\" />}\n                      {loading ? \"Joining\" : \"Join\"}\n                    </Button>\n                  )\n                }\n              </JoinRoomProvider>\n            </div>\n          }\n        />\n      )}\n    </RoomSummaryProvider>\n  );\n}\n","import { Room, StateEvent } from \"@thirdroom/hydrogen-view-sdk\";\n\nimport { useStateEvents } from \"../../hooks/useStateEvents\";\nimport { RepositoryEvents } from \"../session/discover/DiscoverView\";\n\nexport function useFeaturedScenes(repoRoom: Room) {\n  const featuredScenesMap = useStateEvents(repoRoom, RepositoryEvents.FeaturedScene);\n  return [...featuredScenesMap]\n    .map(([eventId, stateEvent]) => stateEvent)\n    .filter((stateEvent) => Object.keys(stateEvent.content).length > 0);\n}\n\nexport function FeaturedScenesProvider({\n  room,\n  children,\n}: {\n  room: Room;\n  children: (featuredScenes: StateEvent[]) => JSX.Element | null;\n}) {\n  const featuredScenes = useFeaturedScenes(room);\n  return children(featuredScenes);\n}\n","import { ReactNode, CSSProperties } from \"react\";\nimport classNames from \"classnames\";\nimport \"./Thumbnail.css\";\n\ninterface ThumbnailProps {\n  className?: string;\n  bgColor?: string;\n  size?: \"lg\" | \"md\" | \"sm\";\n  outlined?: boolean;\n  wide?: boolean;\n  children?: ReactNode;\n}\n\nexport function Thumbnail({ className, bgColor, size = \"md\", outlined, wide, children }: ThumbnailProps) {\n  const style: CSSProperties = {};\n  if (bgColor) style.backgroundColor = bgColor;\n  return (\n    <div\n      className={classNames(\n        \"Thumbnail\",\n        `Thumbnail--${size}`,\n        { \"Thumbnail--outlined\": outlined },\n        { \"Thumbnail--wide\": wide },\n        className\n      )}\n      style={style}\n    >\n      {children}\n    </div>\n  );\n}\n","import classNames from \"classnames\";\nimport { ReactNode } from \"react\";\n\nimport \"./ScenePreviewCard.css\";\n\ninterface ScenePreviewCardProps {\n  className?: string;\n  thumbnail: ReactNode;\n  children: ReactNode;\n}\nexport function ScenePreviewCard({ className, thumbnail, children }: ScenePreviewCardProps) {\n  return (\n    <div className={classNames(\"ScenePreviewCard flex flex-column gap-xs\", className)}>\n      {thumbnail}\n      {children}\n    </div>\n  );\n}\n\ninterface ScenePreviewCardContentProps {\n  className?: string;\n  children: ReactNode;\n}\n\nexport function ScenePreviewCardContent({ className, children }: ScenePreviewCardContentProps) {\n  return <span className={classNames(\"ScenePreviewCard__Content flex gap-xs\", className)}>{children}</span>;\n}\n","import { ReactNode } from \"react\";\nimport classNames from \"classnames\";\n\nimport \"./ModalAside.css\";\n\ninterface ModalAsideProps {\n  className?: string;\n  children: ReactNode;\n}\n\nexport function ModalAside({ className, children }: ModalAsideProps) {\n  const asideClass = classNames(\"ModalAside\", className);\n\n  return <div className={asideClass}>{children}</div>;\n}\n","import { ReactNode } from \"react\";\nimport classNames from \"classnames\";\n\nimport \"./ModalContent.css\";\n\ninterface ModalContentProps {\n  className?: string;\n  children: ReactNode;\n  aside?: ReactNode;\n}\n\nexport function ModalContent({ className, children, aside }: ModalContentProps) {\n  return (\n    <div className={classNames(\"ModalContent flex\", className)}>\n      <div className=\"ModalContent__main grow flex\">{children}</div>\n      {aside && <aside className=\"ModalContent__aside\">{aside}</aside>}\n    </div>\n  );\n}\n","import { ReactNode } from \"react\";\nimport classNames from \"classnames\";\n\nimport \"./ScenePreview.css\";\n\ninterface ScenePreviewProps {\n  className?: string;\n  src?: string;\n  alt?: string;\n  fallback?: ReactNode;\n}\n\nexport function ScenePreview({ className, src, alt, fallback }: ScenePreviewProps) {\n  return (\n    <div className={classNames(\"ScenePreview flex justify-center items-center\", className)}>\n      {src ? <img src={src} alt={alt} /> : fallback}\n    </div>\n  );\n}\n","import { ReactNode } from \"react\";\nimport classNames from \"classnames\";\nimport \"./ThumbnailHover.css\";\n\ninterface ThumbnailHoverPops {\n  className?: string;\n  content?: ReactNode;\n  children: ReactNode;\n}\n\nexport function ThumbnailHover({ className, content, children }: ThumbnailHoverPops) {\n  return (\n    <div className={classNames(\"ThumbnailHover\", className)}>\n      {children}\n      {content && <div className=\"ThumbnailHover__content\">{content}</div>}\n    </div>\n  );\n}\n","import { IconButton } from \"../../../atoms/button/IconButton\";\nimport { Thumbnail } from \"../../../atoms/thumbnail/Thumbnail\";\nimport { ThumbnailHover } from \"../../../atoms/thumbnail/ThumbnailHover\";\nimport { ThumbnailImg } from \"../../../atoms/thumbnail/ThumbnailImg\";\nimport CrossIC from \"../../../../../res/ic/cross.svg\";\nimport AddIC from \"../../../../../res/ic/add.svg\";\nimport { Text } from \"../../../atoms/text/Text\";\n\ninterface AvatarPickerProps {\n  url?: string;\n  onAvatarPick: () => void;\n  onAvatarDrop: () => void;\n}\nexport function AvatarPicker({ url, onAvatarPick, onAvatarDrop }: AvatarPickerProps) {\n  return (\n    <ThumbnailHover\n      className=\"shrink-0\"\n      content={\n        !url ? undefined : (\n          <IconButton variant=\"world\" onClick={onAvatarDrop} size=\"xl\" iconSrc={CrossIC} label=\"Remove avatar\" />\n        )\n      }\n    >\n      <Thumbnail size=\"sm\" className=\"flex flex-column\">\n        {url ? (\n          <ThumbnailImg src={url} />\n        ) : (\n          <>\n            <IconButton variant=\"surface-low\" onClick={onAvatarPick} size=\"xl\" iconSrc={AddIC} label=\"Add avatar\" />\n            <Text color=\"surface-low\" variant=\"b3\" weight=\"semi-bold\">\n              Upload\n            </Text>\n          </>\n        )}\n      </Thumbnail>\n    </ThumbnailHover>\n  );\n}\n","import { useCallback, useEffect, useState } from \"react\";\nimport { IBlobHandle, Platform } from \"@thirdroom/hydrogen-view-sdk\";\n\nexport interface FileData {\n  blob?: IBlobHandle;\n  url?: string;\n  pickUsed: number;\n  dropUsed: number;\n}\n\nexport function useFilePicker(platform: Platform, mimeType: string) {\n  const [fileData, setFileData] = useState<FileData>({\n    pickUsed: 0,\n    dropUsed: 0,\n  });\n\n  useEffect(() => {\n    return () => {\n      if (fileData.url) {\n        URL.revokeObjectURL(fileData.url);\n      }\n    };\n  }, [fileData.url]);\n\n  const pickFile = useCallback(async () => {\n    const data = await platform.openFile(mimeType);\n    if (!data) return;\n    setFileData((state) => ({\n      blob: data.blob,\n      url: URL.createObjectURL(data.blob.nativeBlob),\n      pickUsed: state.pickUsed + 1,\n      dropUsed: state.dropUsed,\n    }));\n  }, [setFileData, platform, mimeType]);\n\n  const dropFile = useCallback(\n    () => setFileData((state) => ({ pickUsed: state.pickUsed, dropUsed: state.dropUsed + 1 })),\n    []\n  );\n\n  const resetUses = useCallback(\n    () => ({\n      pickUsed: 0,\n      dropUsed: 0,\n    }),\n    []\n  );\n\n  return { fileData, pickFile, dropFile, resetUses };\n}\n","export default \"__VITE_ASSET__317232e2__\"","import classNames from \"classnames\";\n\nimport { Text } from \"../../../atoms/text/Text\";\nimport { IconButton } from \"../../../atoms/button/IconButton\";\nimport { Progress } from \"../../../atoms/progress/Progress\";\nimport { bytesToSize, getPercentage } from \"../../../utils/common\";\nimport CrossIC from \"../../../../../res/ic/cross.svg\";\nimport CheckIC from \"../../../../../res/ic/check.svg\";\nimport \"./FileUploadCard.css\";\nimport { Icon } from \"../../../atoms/icon/Icon\";\n\ninterface FileUploadCardProps {\n  className?: string;\n  name: string;\n  totalBytes: number;\n  sentBytes: number;\n  onUploadDrop: () => void;\n}\n\nexport function FileUploadCard({ className, name, sentBytes, totalBytes, onUploadDrop }: FileUploadCardProps) {\n  return (\n    <div className={classNames(\"FileUploadCard flex flex-column gap-xs\", className)}>\n      <div className=\"flex items-center gap-xs\">\n        <div className=\"grow\">\n          <Text className=\"truncate\" variant=\"b2\" weight=\"medium\">\n            {name}\n          </Text>\n        </div>\n        <IconButton onClick={onUploadDrop} iconSrc={CrossIC} size=\"sm\" label=\"cancel\" />\n      </div>\n      {sentBytes < totalBytes && <Progress variant=\"secondary\" value={sentBytes} max={totalBytes} />}\n      <div className=\"flex items-center gap-xs\">\n        {sentBytes < totalBytes ? (\n          <Text className=\"grow\" variant=\"b3\" color=\"surface-low\">\n            {`${getPercentage(totalBytes, sentBytes)}%`}\n          </Text>\n        ) : (\n          <div className=\"grow flex items-start gap-xxs\">\n            <Text variant=\"b3\" color=\"surface-low\">\n              Uploaded\n            </Text>\n            <Icon size=\"sm\" color=\"secondary\" src={CheckIC} />\n          </div>\n        )}\n        <Text variant=\"b3\" color=\"surface-low\">\n          {sentBytes < totalBytes ? `${bytesToSize(sentBytes)} / ${bytesToSize(totalBytes)}` : bytesToSize(totalBytes)}\n        </Text>\n      </div>\n    </div>\n  );\n}\n\ninterface FileUploadErrorCardProps {\n  className?: string;\n  name: string;\n  message?: string;\n  onUploadDrop: () => void;\n}\nexport function FileUploadErrorCard({ className, name, message, onUploadDrop }: FileUploadErrorCardProps) {\n  return (\n    <div className={classNames(\"FileUploadCard flex flex-column gap-xxs\", className)}>\n      <div className=\"flex items-center gap-xs\">\n        <div className=\"grow\">\n          <Text color=\"danger\" className=\"truncate\" variant=\"b2\" weight=\"medium\">\n            {name}\n          </Text>\n        </div>\n        <IconButton onClick={onUploadDrop} iconSrc={CrossIC} size=\"sm\" label=\"cancel\" />\n      </div>\n      {message && <Text variant=\"b3\">{message}</Text>}\n    </div>\n  );\n}\n","import { useState, useRef, useEffect, useCallback } from \"react\";\nimport { HomeServerApi, IBlobHandle, IHomeServerRequest } from \"@thirdroom/hydrogen-view-sdk\";\n\nimport { uploadAttachment } from \"../utils/matrixUtils\";\n\nexport function useAttachmentUpload(\n  hsApi: HomeServerApi,\n  onProgress?: (sentBytes: number, totalBytes: number) => void\n) {\n  const [mxc, setMxc] = useState<string>();\n  const [error, setError] = useState<Error>();\n  const requestRef = useRef<IHomeServerRequest>();\n\n  const upload = useCallback(\n    async (blob: IBlobHandle) => {\n      if (requestRef.current) {\n        console.warn(\"Already uploading attachment.\", blob);\n        return;\n      }\n      try {\n        const mxc = await uploadAttachment(\n          hsApi,\n          blob,\n          (request) => {\n            requestRef.current = request;\n          },\n          onProgress\n        );\n\n        if (!requestRef.current) return;\n        setMxc(mxc);\n        requestRef.current === null;\n      } catch (err: any) {\n        if (err.name !== \"AbortError\") setError(err);\n        requestRef.current === null;\n      }\n    },\n    [hsApi, onProgress]\n  );\n\n  const cancel = useCallback(() => {\n    requestRef.current?.abort();\n    requestRef.current = undefined;\n    setError(undefined);\n    setMxc(undefined);\n  }, []);\n\n  useEffect(() => {\n    return () => {\n      requestRef.current?.abort();\n    };\n  }, []);\n\n  return { mxc, error, upload, cancel };\n}\n","import { useCallback, useRef, useEffect } from \"react\";\n\nexport function useThrottle<T extends any[]>(callback: (...args: T) => void, interval = 100): (...args: T) => void {\n  const timeoutIdRef = useRef<number | undefined>();\n  const lastCalled = useRef<number>(0);\n\n  const throttledCallback = useCallback(\n    (...cbArgs: T) => {\n      const now = Date.now();\n\n      if (now >= lastCalled.current + interval) {\n        callback(...cbArgs);\n      } else {\n        clearTimeout(timeoutIdRef.current);\n\n        timeoutIdRef.current = window.setTimeout(() => {\n          lastCalled.current = now;\n          callback(...cbArgs);\n        });\n      }\n\n      lastCalled.current = now;\n    },\n    [callback, interval]\n  );\n\n  useEffect(() => {\n    return () => {\n      clearTimeout(timeoutIdRef.current);\n    };\n  }, []);\n\n  return throttledCallback;\n}\n","import { useEffect, useState } from \"react\";\nimport { IBlobHandle } from \"@thirdroom/hydrogen-view-sdk\";\n\nimport { FileUploadCard, FileUploadErrorCard } from \"./file-upload-card/FileUploadCard\";\nimport { useAttachmentUpload } from \"../../hooks/useAttachmentUpload\";\nimport { useHydrogen } from \"../../hooks/useHydrogen\";\nimport { useFilePicker } from \"../../hooks/useFilePicker\";\nimport { useThrottle } from \"../../hooks/useThrottle\";\n\nexport interface AutoUploadInfo {\n  mxc?: string;\n  blob?: IBlobHandle;\n  url?: string;\n}\n\ninterface AutoFileUploadProps {\n  mimeType: string;\n  onUploadInfo: (info: AutoUploadInfo) => void;\n  renderButton: (pickFile: () => Promise<void>) => JSX.Element;\n}\n\nexport function AutoFileUpload({ renderButton, mimeType, onUploadInfo }: AutoFileUploadProps) {\n  const { session, platform } = useHydrogen(true);\n\n  const { fileData, pickFile, dropFile } = useFilePicker(platform, mimeType);\n  const [progress, setProgress] = useState(0);\n  const throttledSetProgress = useThrottle(setProgress, 16);\n  const { mxc, error, upload, cancel } = useAttachmentUpload(session.hsApi, throttledSetProgress);\n  useEffect(() => {\n    if (fileData.blob) upload(fileData.blob);\n    else {\n      cancel();\n      setProgress(0);\n    }\n  }, [fileData.blob, upload, cancel]);\n\n  useEffect(() => {\n    onUploadInfo({\n      mxc,\n      blob: fileData.blob,\n      url: fileData.url,\n    });\n  }, [mxc, fileData.blob, fileData.url, onUploadInfo]);\n\n  if (error) {\n    return <FileUploadErrorCard name={error.name} message={error.message} onUploadDrop={dropFile} />;\n  }\n\n  return fileData.blob ? (\n    <FileUploadCard\n      name={fileData.blob.nativeBlob.name}\n      sentBytes={mxc ? fileData.blob.size : progress}\n      totalBytes={fileData.blob.size}\n      onUploadDrop={dropFile}\n    />\n  ) : (\n    renderButton(pickFile)\n  );\n}\n","export default \"__VITE_ASSET__31048831__\"","import { ReactNode, useState } from \"react\";\n\nimport { Modal } from \"../../../atoms/modal/Modal\";\nimport { ModalContent } from \"../../../atoms/modal/ModalContent\";\nimport { ModalAside } from \"../../../atoms/modal/ModalAside\";\nimport { Text } from \"../../../atoms/text/Text\";\nimport { ScenePreview } from \"../../components/scene-preview/ScenePreview\";\nimport { Button } from \"../../../atoms/button/Button\";\nimport { Content } from \"../../../atoms/content/Content\";\nimport { Header } from \"../../../atoms/header/Header\";\nimport { HeaderTitle } from \"../../../atoms/header/HeaderTitle\";\nimport { Scroll } from \"../../../atoms/scroll/Scroll\";\nimport \"./UploadScene.css\";\nimport { Footer } from \"../../../atoms/footer/Footer\";\nimport { SettingTile } from \"../../components/setting-tile/SettingTile\";\nimport { AutoFileUpload, AutoUploadInfo } from \"../../components/AutoFileUpload\";\nimport { Label } from \"../../../atoms/text/Label\";\nimport { Icon } from \"../../../atoms/icon/Icon\";\nimport UploadIC from \"../../../../../res/ic/upload.svg\";\n\ninterface UploadSceneProps {\n  onSave: (mxc: string, previewMxc: string) => void;\n  renderTrigger: (openModal: () => void) => ReactNode;\n}\nexport function UploadScene({ onSave, renderTrigger }: UploadSceneProps) {\n  const [isOpen, setIsOpen] = useState(false);\n  const openModal = () => setIsOpen(true);\n  const closeModal = () => setIsOpen(false);\n\n  const [sceneInfo, setSceneInfo] = useState<AutoUploadInfo>({});\n  const [previewInfo, setPreviewInfo] = useState<AutoUploadInfo>({});\n\n  const saveChanges = () => {\n    if (sceneInfo.mxc && previewInfo.mxc) {\n      onSave(sceneInfo.mxc, previewInfo.mxc);\n      closeModal();\n    }\n  };\n\n  return (\n    <>\n      {renderTrigger(openModal)}\n      <Modal open={isOpen} onOpenChange={setIsOpen}>\n        <Content className=\"grow\">\n          <ModalContent\n            children={\n              <Content\n                top={<Header left={<HeaderTitle>Upload Scene</HeaderTitle>} />}\n                children={\n                  <Scroll>\n                    <div className=\"UploadScene__content\">\n                      <SettingTile className=\"grow basis-0\" label={<Label>Scene</Label>}>\n                        <Text className=\"UploadScene__info-text\" variant=\"b3\" color=\"surface-low\">\n                          Upload a 3D scene (*.glb file)\n                        </Text>\n                        <AutoFileUpload\n                          mimeType=\".glb\"\n                          onUploadInfo={setSceneInfo}\n                          renderButton={(pickFile) => (\n                            <Button onClick={pickFile}>\n                              <Icon src={UploadIC} color=\"on-primary\" />\n                              Upload Scene\n                            </Button>\n                          )}\n                        />\n                      </SettingTile>\n                      <SettingTile className=\"grow basis-0\" label={<Label>Scene Preview</Label>}>\n                        <Text className=\"UploadScene__info-text\" variant=\"b3\" color=\"surface-low\">\n                          Upload a preview image of 3D scene\n                        </Text>\n                        <AutoFileUpload\n                          mimeType=\"image/*\"\n                          onUploadInfo={setPreviewInfo}\n                          renderButton={(pickFile) => (\n                            <Button onClick={pickFile}>\n                              <Icon src={UploadIC} color=\"on-primary\" />\n                              Upload Preview\n                            </Button>\n                          )}\n                        />\n                      </SettingTile>\n                    </div>\n                  </Scroll>\n                }\n                bottom={\n                  <Footer\n                    left={\n                      <Button onClick={closeModal} fill=\"outline\">\n                        Cancel\n                      </Button>\n                    }\n                    right={\n                      <Button onClick={saveChanges} disabled={!sceneInfo.mxc || !previewInfo.mxc}>\n                        Save\n                      </Button>\n                    }\n                  />\n                }\n              />\n            }\n            aside={\n              <ModalAside className=\"flex\">\n                <ScenePreview\n                  className=\"grow\"\n                  src={previewInfo.url}\n                  alt=\"3D Avatar preview\"\n                  fallback={\n                    <Text variant=\"b3\" color=\"surface-low\" weight=\"medium\">\n                      Uploaded scene preview will appear here.\n                    </Text>\n                  }\n                />\n              </ModalAside>\n            }\n          />\n        </Content>\n      </Modal>\n    </>\n  );\n}\n","import { useCallback, useState, FormEvent, ChangeEvent, ReactNode, useEffect } from \"react\";\nimport { RoomVisibility, IBlobHandle, RoomType, Session, StateEvent } from \"@thirdroom/hydrogen-view-sdk\";\n\nimport { Text } from \"../../../atoms/text/Text\";\nimport { Button } from \"../../../atoms/button/Button\";\nimport { Switch } from \"../../../atoms/button/Switch\";\nimport { Label } from \"../../../atoms/text/Label\";\nimport { Input } from \"../../../atoms/input/Input\";\nimport { Scroll } from \"../../../atoms/scroll/Scroll\";\nimport { SettingTile } from \"../../components/setting-tile/SettingTile\";\nimport { getMxIdDomain, isRoomAliasAvailable, waitToCreateRoom } from \"../../../utils/matrixUtils\";\nimport { getImageDimension } from \"../../../utils/common\";\nimport { useHydrogen } from \"../../../hooks/useHydrogen\";\nimport { useDebounce } from \"../../../hooks/useDebounce\";\nimport { useIsMounted } from \"../../../hooks/useIsMounted\";\nimport { Footer } from \"../../../atoms/footer/Footer\";\nimport { Content } from \"../../../atoms/content/Content\";\nimport { AvatarPicker } from \"../../components/avatar-picker/AvatarPicker\";\nimport { useFilePicker } from \"../../../hooks/useFilePicker\";\nimport defaultWorlds from \"../../../../../res/defaultWorlds.json\";\nimport { Thumbnail } from \"../../../atoms/thumbnail/Thumbnail\";\nimport { ThumbnailImg } from \"../../../atoms/thumbnail/ThumbnailImg\";\nimport { getHttpUrl } from \"../../../utils/avatar\";\nimport { UploadScene } from \"./UploadScene\";\nimport { MAX_OBJECT_CAP } from \"../../../../engine/config.common\";\nimport \"./CreateWorldForm.css\";\nimport { AutoFileUpload, AutoUploadInfo } from \"../../components/AutoFileUpload\";\nimport { Icon } from \"../../../atoms/icon/Icon\";\nimport UploadIC from \"../../../../../res/ic/upload.svg\";\n\nexport function AliasAvailabilityProvider({\n  session,\n  children,\n}: {\n  session: Session;\n  children: (\n    available: boolean | undefined,\n    handleAliasChange: (evt: ChangeEvent<HTMLInputElement>) => void\n  ) => ReactNode;\n}) {\n  const { homeserver } = session.sessionInfo;\n  const userHSDomain = getMxIdDomain(session.userId);\n  const isMounted = useIsMounted();\n  const [available, setAvailable] = useState<boolean>();\n\n  const debouncedAliasChange = useCallback(\n    async (evt: ChangeEvent<HTMLInputElement>) => {\n      if (!isMounted()) return;\n      setAvailable(undefined);\n      if (evt.target.value.trim() === \"\") return;\n\n      const value = evt.target.value.replace(/\\s/g, \"-\");\n      if (evt.target.value !== value) evt.target.value = value;\n      const isAvail = await isRoomAliasAvailable(homeserver, `#${value}:${userHSDomain}`);\n\n      if (evt.target.value !== value) return;\n      if (!isMounted()) return;\n      setAvailable(isAvail);\n    },\n    [homeserver, userHSDomain, isMounted]\n  );\n\n  const handleAliasChange = useDebounce(debouncedAliasChange, { wait: 300, immediate: true });\n  return <>{children(available, handleAliasChange)}</>;\n}\n\nexport type CreateWorldContent = {\n  scene_url: string;\n  scene_preview_url: string;\n  max_member_object_cap?: number;\n  script_url?: string;\n} & Record<string, any>;\nexport interface CreateWorldOptions {\n  avatar?: IBlobHandle;\n  name: string;\n  topic?: string;\n  visibility: RoomVisibility;\n  alias?: string;\n  content: CreateWorldContent;\n}\n\nexport async function createWorld(\n  session: Session,\n  { avatar, name, topic, visibility, alias, content }: CreateWorldOptions\n) {\n  const avatarInfo = !avatar\n    ? undefined\n    : {\n        name: avatar.nativeBlob.name,\n        blob: avatar,\n        info: {\n          mimetype: avatar.nativeBlob.type,\n          size: avatar.size,\n          ...(await getImageDimension(avatar.nativeBlob)),\n        },\n      };\n\n  const roomBeingCreated = await session.createRoom({\n    type: RoomType.World,\n    visibility,\n    avatar: avatarInfo,\n    name,\n    topic,\n    alias,\n    isEncrypted: false,\n    isFederationDisabled: false,\n    powerLevelContentOverride: {\n      invite: 100,\n      kick: 100,\n      ban: 100,\n      redact: 50,\n      state_default: 50,\n      events_default: 0,\n      users_default: 0,\n      events: {\n        \"m.room.power_levels\": 100,\n        \"m.room.history_visibility\": 100,\n        \"m.room.tombstone\": 100,\n        \"m.room.encryption\": 100,\n        \"m.room.name\": 50,\n        \"m.room.message\": 0,\n        \"m.room.encrypted\": 50,\n        \"m.sticker\": 50,\n        \"org.matrix.msc3815.world\": 50,\n        \"org.matrix.msc3401.call\": 0,\n        \"org.matrix.msc3401.call.member\": 0,\n        \"org.matrix.msc3815.member.world\": 0,\n      },\n      users: {\n        [session.userId]: 100,\n      },\n    },\n    initialState: [\n      {\n        type: \"org.matrix.msc3815.world\",\n        content,\n      },\n    ],\n  });\n\n  return roomBeingCreated;\n}\n\nexport interface CreateWorldFormProps {\n  scene?: {\n    roomId: string;\n    event: StateEvent;\n  };\n  onSceneChange?: (sceneUrl?: string, scenePreviewUrl?: string) => void;\n  onCreate: (roomId: string) => void;\n  onClose: () => void;\n}\nexport function CreateWorldForm({ scene, onSceneChange, onCreate, onClose }: CreateWorldFormProps) {\n  const { session, platform } = useHydrogen(true);\n  const userHSDomain = getMxIdDomain(session.userId);\n  const isMounted = useIsMounted();\n\n  const { fileData: avatarData, pickFile: pickAvatar, dropFile: dropAvatar } = useFilePicker(platform, \"image/*\");\n\n  const eventSceneUrl = scene?.event?.content.scene.url;\n  const eventPreviewUrl = scene?.event?.content.scene.preview_url;\n  const controlledScene =\n    typeof eventSceneUrl === \"string\" && typeof eventPreviewUrl === \"string\"\n      ? {\n          url: eventSceneUrl,\n          previewUrl: eventPreviewUrl,\n        }\n      : undefined;\n\n  const [uploadScene, setUploadScene] = useState<{ url: string; previewUrl: string } | undefined>(controlledScene);\n  const [selectedScene, setSelectedScene] = useState<{ url: string; previewUrl: string } | undefined>(controlledScene);\n  const [scriptInfo, setScriptInfo] = useState<AutoUploadInfo>({});\n  const [creatingRoom, setCreatingRoom] = useState(false);\n\n  const handleCreateWorld = async (options: CreateWorldOptions) => {\n    setCreatingRoom(true);\n    const roomBeingCreated = await createWorld(session, options);\n    const room = await waitToCreateRoom(session, roomBeingCreated);\n    if (room && isMounted()) {\n      onCreate(room.id);\n      setCreatingRoom(false);\n    }\n  };\n\n  const handleSubmit = (evt: FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n    if (!selectedScene) return;\n    const { nameInput, topicInput, isPrivateInput, aliasInput, maxObjectCapInput } = evt.target as typeof evt.target & {\n      nameInput: HTMLInputElement;\n      topicInput: HTMLInputElement;\n      isPrivateInput: HTMLInputElement;\n      aliasInput: HTMLInputElement;\n      maxObjectCapInput: HTMLInputElement;\n    };\n    const alias = aliasInput.getAttribute(\"data-ui-state\") === \"error\" ? undefined : aliasInput.value || undefined;\n    const content: CreateWorldContent = {\n      scene_url: selectedScene.url,\n      scene_preview_url: selectedScene.previewUrl,\n      max_member_object_cap: parseInt(maxObjectCapInput.value) || undefined,\n    };\n    if (scriptInfo.mxc) {\n      content.script_url = scriptInfo.mxc;\n    }\n    if (controlledScene && scene) {\n      content.scene = scene.event.content.scene;\n      content.scene_from = {\n        state_key: scene.event.state_key ?? undefined,\n        room_id: scene.roomId,\n      };\n    }\n    handleCreateWorld({\n      visibility: isPrivateInput.checked ? RoomVisibility.Private : RoomVisibility.Public,\n      name: nameInput.value,\n      topic: topicInput.value || undefined,\n      avatar: avatarData.blob,\n      alias,\n      content,\n    });\n  };\n\n  useEffect(() => {\n    onSceneChange?.(selectedScene?.url, selectedScene?.previewUrl);\n  }, [selectedScene, onSceneChange]);\n\n  const renderSceneSelector = (sceneUrl: string, previewUrl: string, roomAvatarUrl?: string) => (\n    <button\n      key={sceneUrl}\n      className=\"flex\"\n      style={{ cursor: \"pointer\" }}\n      onClick={() => {\n        setSelectedScene({ url: sceneUrl, previewUrl });\n      }}\n      type=\"button\"\n    >\n      <Thumbnail outlined={selectedScene?.url === sceneUrl} className=\"shrink-0\" size=\"sm\">\n        <ThumbnailImg src={getHttpUrl(session, roomAvatarUrl ?? previewUrl)!} />\n      </Thumbnail>\n    </button>\n  );\n\n  return (\n    <Content\n      onSubmit={handleSubmit}\n      children={\n        <Scroll>\n          <div className=\"CreateWorldForm\">\n            {controlledScene ? null : (\n              <SettingTile label={<Label>Scenes *</Label>}>\n                <Scroll orientation=\"horizontal\" type=\"hover\">\n                  <div className=\"flex items-center gap-md\">\n                    {uploadScene && renderSceneSelector(uploadScene.url, uploadScene.previewUrl)}\n                    <UploadScene\n                      onSave={(sceneUrl, previewUrl) => {\n                        setUploadScene({ url: sceneUrl, previewUrl });\n                        setSelectedScene({ url: sceneUrl, previewUrl });\n                      }}\n                      renderTrigger={(openModal) => (\n                        <AvatarPicker onAvatarPick={openModal} onAvatarDrop={() => false} />\n                      )}\n                    />\n                    <div\n                      className=\"shrink-0\"\n                      style={{ backgroundColor: \"var(--bg-surface-border)\", height: \"40px\", width: \"2px\" }}\n                    />\n                    {defaultWorlds.scenes.map((scene) =>\n                      renderSceneSelector(scene.sceneUrl, scene.scenePreviewUrl, scene.defaultRoomAvatarUrl)\n                    )}\n                  </div>\n                </Scroll>\n              </SettingTile>\n            )}\n            <div className=\"flex gap-lg\">\n              <SettingTile className=\"grow basis-0\" label={<Label>World Name *</Label>}>\n                <Input name=\"nameInput\" required />\n              </SettingTile>\n              <SettingTile className=\"grow basis-0\" label={<Label>Topic</Label>}>\n                <Input name=\"topicInput\" />\n              </SettingTile>\n            </div>\n            <div className=\"flex gap-lg\">\n              <AliasAvailabilityProvider session={session}>\n                {(isAliasAvail, handleAliasChange) => (\n                  <SettingTile\n                    className=\"grow basis-0\"\n                    label={\n                      <Label color={isAliasAvail ? \"secondary\" : isAliasAvail === false ? \"danger\" : undefined}>\n                        {isAliasAvail\n                          ? \"Alias (Available)\"\n                          : isAliasAvail === false\n                          ? \"Alias (Already in use)\"\n                          : \"Alias\"}\n                      </Label>\n                    }\n                  >\n                    <Input\n                      name=\"aliasInput\"\n                      state={isAliasAvail ? \"success\" : isAliasAvail === false ? \"error\" : undefined}\n                      onChange={handleAliasChange}\n                      maxLength={255 - (userHSDomain.length + 2) /*for -> #:*/}\n                      before={<Text variant=\"b2\">#</Text>}\n                      after={<Text variant=\"b2\">{`:${userHSDomain}`}</Text>}\n                    />\n                  </SettingTile>\n                )}\n              </AliasAvailabilityProvider>\n              <SettingTile className=\"grow basis-0\" label={<Label>Max Spawned Objects Per User</Label>}>\n                <Input name=\"maxObjectCapInput\" type=\"number\" defaultValue={MAX_OBJECT_CAP} required />\n              </SettingTile>\n            </div>\n            <div className=\"flex gap-lg\">\n              <SettingTile className=\"grow basis-0\" label={<Label>Private</Label>}>\n                <Switch name=\"isPrivateInput\" defaultChecked={true} />\n              </SettingTile>\n              <SettingTile className=\"grow basis-0\" label={<Label>Script (EXPERIMENTAL)</Label>}>\n                <AutoFileUpload\n                  mimeType=\".js,.wasm\"\n                  onUploadInfo={setScriptInfo}\n                  renderButton={(pickFile) => (\n                    <Button fill=\"outline\" onClick={pickFile}>\n                      <Icon src={UploadIC} color=\"primary\" />\n                      Upload Script\n                    </Button>\n                  )}\n                />\n              </SettingTile>\n            </div>\n            <SettingTile label={<Label>World Avatar</Label>}>\n              <AvatarPicker url={avatarData.url} onAvatarPick={pickAvatar} onAvatarDrop={dropAvatar} />\n            </SettingTile>\n          </div>\n        </Scroll>\n      }\n      bottom={\n        <Footer\n          left={\n            <Button size=\"lg\" fill=\"outline\" onClick={onClose}>\n              Cancel\n            </Button>\n          }\n          right={\n            <Button size=\"lg\" type=\"submit\" disabled={!selectedScene || creatingRoom}>\n              {creatingRoom ? \"Creating World...\" : \"Create World\"}\n            </Button>\n          }\n        />\n      }\n    />\n  );\n}\n","import { Session } from \"@thirdroom/hydrogen-view-sdk\";\nimport { useState } from \"react\";\n\nimport { Content } from \"../../../atoms/content/Content\";\nimport { Header } from \"../../../atoms/header/Header\";\nimport { HeaderTitle } from \"../../../atoms/header/HeaderTitle\";\nimport { ModalAside } from \"../../../atoms/modal/ModalAside\";\nimport { ModalContent } from \"../../../atoms/modal/ModalContent\";\nimport { Text } from \"../../../atoms/text/Text\";\nimport { getHttpUrl } from \"../../../utils/avatar\";\nimport { ScenePreview } from \"../../components/scene-preview/ScenePreview\";\nimport { CreateWorldForm, CreateWorldFormProps } from \"./CreateWorldForm\";\n\nexport function CreateWorldModal({ session, scene, onCreate, onClose }: { session: Session } & CreateWorldFormProps) {\n  const [scenePreviewUrl, setScenePreviewUrl] = useState<string>();\n\n  return (\n    <Content className=\"grow\">\n      <ModalContent\n        children={\n          <Content\n            top={<Header left={<HeaderTitle>Create World</HeaderTitle>} />}\n            children={\n              <CreateWorldForm\n                scene={scene}\n                onSceneChange={(sceneUrl, previewUrl) => setScenePreviewUrl(previewUrl)}\n                onCreate={onCreate}\n                onClose={onClose}\n              />\n            }\n          />\n        }\n        aside={\n          <ModalAside className=\"flex\">\n            <ScenePreview\n              className=\"grow\"\n              src={getHttpUrl(session, scenePreviewUrl)}\n              alt=\"3D Avatar preview\"\n              fallback={\n                <Text variant=\"b3\" color=\"surface-low\" weight=\"medium\">\n                  Uploaded scene preview will appear here.\n                </Text>\n              }\n            />\n          </ModalAside>\n        }\n      />\n    </Content>\n  );\n}\n","import { Session, StateEvent } from \"@thirdroom/hydrogen-view-sdk\";\nimport { useSetAtom } from \"jotai\";\nimport { useState } from \"react\";\n\nimport { Button } from \"../../../atoms/button/Button\";\nimport { Modal } from \"../../../atoms/modal/Modal\";\nimport { Text } from \"../../../atoms/text/Text\";\nimport { Thumbnail } from \"../../../atoms/thumbnail/Thumbnail\";\nimport { ThumbnailImg } from \"../../../atoms/thumbnail/ThumbnailImg\";\nimport { OverlayWindow, overlayWindowAtom } from \"../../../state/overlayWindow\";\nimport { overlayWorldAtom } from \"../../../state/overlayWorld\";\nimport { getHttpUrl } from \"../../../utils/avatar\";\nimport { ScenePreviewCard, ScenePreviewCardContent } from \"../../components/scene-preview-card/ScenePreviewCard\";\nimport { CreateWorldModal } from \"../create-world/CreateWorldModal\";\n\ninterface FeaturedSceneCardProps {\n  session: Session;\n  roomId: string;\n  stateEvent: StateEvent;\n}\n\nexport function FeaturedSceneCard({ session, roomId, stateEvent }: FeaturedSceneCardProps) {\n  const [create, setCreate] = useState(false);\n  const content = stateEvent.content;\n  const selectWorld = useSetAtom(overlayWorldAtom);\n  const setOverlayWindow = useSetAtom(overlayWindowAtom);\n\n  const handleCreateWorld = (roomId: string) => {\n    selectWorld(roomId);\n    setOverlayWindow({ type: OverlayWindow.None });\n    setCreate(false);\n  };\n\n  return (\n    <ScenePreviewCard\n      thumbnail={\n        <Thumbnail size=\"lg\" wide>\n          <ThumbnailImg src={getHttpUrl(session, content.scene.preview_url) ?? \"\"} alt={content.scene.name} />\n        </Thumbnail>\n      }\n    >\n      <ScenePreviewCardContent>\n        <div className=\"grow\">\n          <Text className=\"truncate\" variant=\"b3\">\n            {content.scene.author_name}\n          </Text>\n          <Text className=\"truncate\">{content.scene.name}</Text>\n        </div>\n        <div className=\"flex items-center gap-xs\">\n          <Modal open={create} onOpenChange={setCreate}>\n            <CreateWorldModal\n              session={session}\n              scene={{\n                roomId,\n                event: stateEvent,\n              }}\n              onClose={() => setCreate(false)}\n              onCreate={handleCreateWorld}\n            />\n          </Modal>\n          <Button onClick={() => setCreate(true)} variant=\"secondary\">\n            Create World\n          </Button>\n        </div>\n      </ScenePreviewCardContent>\n    </ScenePreviewCard>\n  );\n}\n","import { Room } from \"@thirdroom/hydrogen-view-sdk\";\n\nimport { Content } from \"../../../atoms/content/Content\";\nimport { Scroll } from \"../../../atoms/scroll/Scroll\";\nimport { Label } from \"../../../atoms/text/Label\";\nimport ArrowForwardIC from \"../../../../../res/ic/arrow-forward.svg\";\nimport \"./DiscoverHome.css\";\nimport { DiscoverGroup, DiscoverGroupGrid, DiscoverMoreButton } from \"../../components/discover-group/DiscoverGroup\";\nimport { RepositoryEvents } from \"./DiscoverView\";\nimport { useHydrogen } from \"../../../hooks/useHydrogen\";\nimport { FeaturedWorldsProvider } from \"../../components/FeaturedWorldsProvider\";\nimport { FeaturedRoomsProvider } from \"../../components/FeaturedRoomsProvider\";\nimport { FeaturedRoomCard } from \"./FeaturedRoomCard\";\nimport { FeaturedWorldCard } from \"./FeaturedWorldCard\";\nimport { FeaturedScenesProvider } from \"../../components/FeaturedScenesProvider\";\nimport { FeaturedSceneCard } from \"./FeaturedSceneCard\";\nimport { eventByOrderKey } from \"../../../utils/matrixUtils\";\n\ninterface DiscoverHomeProps {\n  room: Room;\n  supportRoomSummary: boolean;\n  onLoadEvent: (eventType: RepositoryEvents) => void;\n}\nexport function DiscoverHome({ room, supportRoomSummary, onLoadEvent }: DiscoverHomeProps) {\n  const { session, platform } = useHydrogen(true);\n\n  return (\n    <Scroll>\n      <Content className=\"DiscoverHome__content\">\n        <div className=\"flex flex-column gap-md\">\n          {supportRoomSummary && (\n            <>\n              <FeaturedRoomsProvider room={room}>\n                {(featuredRooms) =>\n                  featuredRooms.length === 0 ? null : (\n                    <DiscoverGroup\n                      label={<Label>Featured Public Rooms</Label>}\n                      content={\n                        <DiscoverGroupGrid>\n                          {featuredRooms\n                            .sort(eventByOrderKey)\n                            .slice(0, 4)\n                            .map((stateEvent) => (\n                              <FeaturedRoomCard\n                                key={stateEvent.state_key}\n                                session={session}\n                                platform={platform}\n                                roomId={stateEvent.state_key}\n                              />\n                            ))}\n                        </DiscoverGroupGrid>\n                      }\n                      footer={\n                        featuredRooms.length > 4 && (\n                          <div className=\"flex justify-end\">\n                            <DiscoverMoreButton\n                              onClick={() => onLoadEvent(RepositoryEvents.FeaturedRoom)}\n                              text=\"Browse All Public Rooms\"\n                              iconSrc={ArrowForwardIC}\n                            />\n                          </div>\n                        )\n                      }\n                    />\n                  )\n                }\n              </FeaturedRoomsProvider>\n              <FeaturedWorldsProvider room={room}>\n                {(featuredWorlds) =>\n                  featuredWorlds.length === 0 ? null : (\n                    <DiscoverGroup\n                      label={<Label>Featured Public Worlds</Label>}\n                      content={\n                        <DiscoverGroupGrid>\n                          {featuredWorlds\n                            .sort(eventByOrderKey)\n                            .slice(0, 4)\n                            .map((stateEvent) => (\n                              <FeaturedWorldCard\n                                key={stateEvent.state_key}\n                                session={session}\n                                platform={platform}\n                                roomId={stateEvent.state_key}\n                              />\n                            ))}\n                        </DiscoverGroupGrid>\n                      }\n                      footer={\n                        featuredWorlds.length > 4 && (\n                          <div className=\"flex justify-end\">\n                            <DiscoverMoreButton\n                              onClick={() => onLoadEvent(RepositoryEvents.FeaturedWorld)}\n                              text=\"Browse All Public Worlds\"\n                              iconSrc={ArrowForwardIC}\n                            />\n                          </div>\n                        )\n                      }\n                    />\n                  )\n                }\n              </FeaturedWorldsProvider>\n            </>\n          )}\n          <FeaturedScenesProvider room={room}>\n            {(featuredScenes) =>\n              featuredScenes.length === 0 ? null : (\n                <DiscoverGroup\n                  label={<Label>Featured Scenes</Label>}\n                  content={\n                    <DiscoverGroupGrid itemMinWidth={400} gap=\"md\">\n                      {featuredScenes\n                        .sort(eventByOrderKey)\n                        .slice(0, 3)\n                        .map((stateEvent) => (\n                          <FeaturedSceneCard\n                            key={stateEvent.state_key}\n                            session={session}\n                            roomId={room.id}\n                            stateEvent={stateEvent}\n                          />\n                        ))}\n                    </DiscoverGroupGrid>\n                  }\n                  footer={\n                    featuredScenes.length > 3 && (\n                      <div className=\"flex justify-end\">\n                        <DiscoverMoreButton\n                          onClick={() => onLoadEvent(RepositoryEvents.FeaturedScene)}\n                          text=\"Browse All Scenes\"\n                          iconSrc={ArrowForwardIC}\n                        />\n                      </div>\n                    )\n                  }\n                />\n              )\n            }\n          </FeaturedScenesProvider>\n        </div>\n      </Content>\n    </Scroll>\n  );\n}\n","import { ReactNode } from \"react\";\nimport classNames from \"classnames\";\n\nimport \"./SegmentControl.css\";\n\ninterface SegmentControlProps {\n  className?: string;\n  children: ReactNode;\n}\n\nexport function SegmentControl({ className, children }: SegmentControlProps) {\n  return <div className={classNames(\"SegmentControl\", className)}>{children}</div>;\n}\n","import classNames from \"classnames\";\n\nimport { Text } from \"../text/Text\";\nimport \"./SegmentControlItem.css\";\n\ninterface SegmentControlItemProps<T> {\n  className?: string;\n  value: T;\n  isSelected?: boolean;\n  onSelect: (value: T) => void;\n  children: string;\n}\n\nexport function SegmentControlItem<T>({\n  className,\n  value,\n  isSelected = false,\n  onSelect,\n  children,\n}: SegmentControlItemProps<T>) {\n  return (\n    <button\n      className={classNames(\"SegmentControlItem\", { \"SegmentControlItem--selected\": isSelected }, className)}\n      onClick={() => onSelect(value)}\n    >\n      <Text variant=\"b2\" color={isSelected ? \"primary\" : \"surface\"} weight={isSelected ? \"bold\" : \"medium\"}>\n        {children}\n      </Text>\n    </button>\n  );\n}\n","export default \"__VITE_ASSET__cb5b7a94__\"","import { FormEvent, ReactNode, useState } from \"react\";\n\nimport { Modal } from \"../../../atoms/modal/Modal\";\nimport { ModalContent } from \"../../../atoms/modal/ModalContent\";\nimport { ModalAside } from \"../../../atoms/modal/ModalAside\";\nimport { Text } from \"../../../atoms/text/Text\";\nimport { ScenePreview } from \"../../components/scene-preview/ScenePreview\";\nimport { Button } from \"../../../atoms/button/Button\";\nimport { Content } from \"../../../atoms/content/Content\";\nimport { Header } from \"../../../atoms/header/Header\";\nimport { HeaderTitle } from \"../../../atoms/header/HeaderTitle\";\nimport { Scroll } from \"../../../atoms/scroll/Scroll\";\nimport \"./SceneSubmission.css\";\nimport { Footer } from \"../../../atoms/footer/Footer\";\nimport { SettingTile } from \"../../components/setting-tile/SettingTile\";\nimport { AutoFileUpload, AutoUploadInfo } from \"../../components/AutoFileUpload\";\nimport { Label } from \"../../../atoms/text/Label\";\nimport { Icon } from \"../../../atoms/icon/Icon\";\nimport UploadIC from \"../../../../../res/ic/upload.svg\";\nimport { Input } from \"../../../atoms/input/Input\";\n\nexport interface SceneData {\n  sceneUrl: string;\n  scenePreviewUrl: string;\n  sceneName: string;\n  sceneDescription: string;\n  sceneAuthorName: string;\n  sceneAuthorUrl?: string;\n  sceneSourceUrl?: string;\n  sceneLicense: string;\n  sceneVersion: number;\n}\n\nexport function sceneDataToScene(data: SceneData) {\n  return {\n    url: data.sceneUrl,\n    preview_url: data.scenePreviewUrl,\n    name: data.sceneName,\n    description: data.sceneDescription,\n    author_name: data.sceneAuthorName,\n    license: data.sceneLicense,\n    version: data.sceneVersion,\n    author_url: data.sceneAuthorUrl,\n    source_url: data.sceneSourceUrl,\n  };\n}\n\ninterface SceneSubmissionProps {\n  onSave: (data: SceneData) => void;\n  renderTrigger: (openModal: () => void) => ReactNode;\n}\nexport function SceneSubmission({ onSave, renderTrigger }: SceneSubmissionProps) {\n  const [isOpen, setIsOpen] = useState(false);\n  const openModal = () => setIsOpen(true);\n  const closeModal = () => setIsOpen(false);\n\n  const [sceneInfo, setSceneInfo] = useState<AutoUploadInfo>({});\n  const [previewInfo, setPreviewInfo] = useState<AutoUploadInfo>({});\n\n  const handleSubmit = (evt: FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n\n    const { sceneNameInput, sceneDescriptionInput, authorNameInput, licenseInput, authorURLInput, sourceURLInput } =\n      evt.target as typeof evt.target & {\n        sceneNameInput: HTMLInputElement;\n        sceneDescriptionInput: HTMLInputElement;\n        authorNameInput: HTMLInputElement;\n        licenseInput: HTMLInputElement;\n        authorURLInput: HTMLInputElement;\n        sourceURLInput: HTMLInputElement;\n      };\n    const sceneName = sceneNameInput.value.trim();\n    const sceneDescription = sceneDescriptionInput.value.trim();\n    const sceneAuthorName = authorNameInput.value.trim();\n    const sceneLicense = licenseInput.value.trim();\n    const sceneAuthorUrl = authorURLInput.value.trim() || undefined;\n    const sceneSourceUrl = sourceURLInput.value.trim() || undefined;\n\n    if (sceneInfo.mxc && previewInfo.mxc) {\n      onSave({\n        sceneUrl: sceneInfo.mxc,\n        scenePreviewUrl: previewInfo.mxc,\n        sceneName,\n        sceneDescription,\n        sceneAuthorName,\n        sceneLicense,\n        sceneVersion: 1,\n        sceneAuthorUrl,\n        sceneSourceUrl,\n      });\n      closeModal();\n    }\n  };\n\n  const canSave = !!sceneInfo.mxc && !!previewInfo.mxc;\n\n  return (\n    <>\n      {renderTrigger(openModal)}\n      <Modal open={isOpen} onOpenChange={setIsOpen}>\n        <Content className=\"grow\">\n          <ModalContent\n            children={\n              <Content\n                onSubmit={handleSubmit}\n                top={<Header left={<HeaderTitle>Scene Submission</HeaderTitle>} />}\n                children={\n                  <Scroll>\n                    <div className=\"SceneSubmission__content\">\n                      <div className=\"flex gap-md\">\n                        <SettingTile className=\"grow basis-0\" label={<Label>Scene</Label>}>\n                          <Text className=\"SceneSubmission__info-text\" variant=\"b3\" color=\"surface-low\">\n                            Upload a 3D scene (*.glb file)\n                          </Text>\n                          <AutoFileUpload\n                            mimeType=\".glb\"\n                            onUploadInfo={setSceneInfo}\n                            renderButton={(pickFile) => (\n                              <Button onClick={pickFile}>\n                                <Icon src={UploadIC} color=\"on-primary\" />\n                                Upload Scene\n                              </Button>\n                            )}\n                          />\n                        </SettingTile>\n                        <SettingTile className=\"grow basis-0\" label={<Label>Scene Preview</Label>}>\n                          <Text className=\"SceneSubmission__info-text\" variant=\"b3\" color=\"surface-low\">\n                            Upload a preview image of 3D scene\n                          </Text>\n                          <AutoFileUpload\n                            mimeType=\"image/*\"\n                            onUploadInfo={setPreviewInfo}\n                            renderButton={(pickFile) => (\n                              <Button onClick={pickFile}>\n                                <Icon src={UploadIC} color=\"on-primary\" />\n                                Upload Preview\n                              </Button>\n                            )}\n                          />\n                        </SettingTile>\n                      </div>\n                      <div className=\"flex gap-md\">\n                        <SettingTile className=\"grow basis-0\" label={<Label>Name</Label>}>\n                          <Input name=\"sceneNameInput\" required />\n                        </SettingTile>\n                        <SettingTile className=\"grow basis-0\" label={<Label>Description</Label>}>\n                          <Input name=\"sceneDescriptionInput\" required />\n                        </SettingTile>\n                      </div>\n\n                      <div className=\"flex gap-md\">\n                        <SettingTile className=\"grow basis-0\" label={<Label>Author Name</Label>}>\n                          <Input name=\"authorNameInput\" required />\n                        </SettingTile>\n                        <SettingTile className=\"grow basis-0\" label={<Label>License</Label>}>\n                          <Input name=\"licenseInput\" required />\n                        </SettingTile>\n                      </div>\n                      <div className=\"flex gap-md\">\n                        <SettingTile className=\"grow basis-0\" label={<Label>Author URL (optional)</Label>}>\n                          <Input name=\"authorURLInput\" />\n                        </SettingTile>\n                        <SettingTile className=\"grow basis-0\" label={<Label>Source URL (optional)</Label>}>\n                          <Input name=\"sourceURLInput\" />\n                        </SettingTile>\n                      </div>\n                    </div>\n                  </Scroll>\n                }\n                bottom={\n                  <Footer\n                    left={\n                      <Button onClick={closeModal} fill=\"outline\">\n                        Cancel\n                      </Button>\n                    }\n                    right={\n                      <Button type=\"submit\" disabled={!canSave}>\n                        Save\n                      </Button>\n                    }\n                  />\n                }\n              />\n            }\n            aside={\n              <ModalAside className=\"flex\">\n                <ScenePreview\n                  className=\"grow\"\n                  src={previewInfo.url}\n                  alt=\"3D Avatar preview\"\n                  fallback={\n                    <Text variant=\"b3\" color=\"surface-low\" weight=\"medium\">\n                      Uploaded scene preview will appear here.\n                    </Text>\n                  }\n                />\n              </ModalAside>\n            }\n          />\n        </Content>\n      </Modal>\n    </>\n  );\n}\n","import { useMemo } from \"react\";\n\nexport function useOrderString() {\n  return useMemo(() => {\n    const LOWER_CHAR = \" \";\n    const UPPER_CHAR = \"~\";\n    const MAX_STR_LEN = 6;\n\n    const getMidStr = () => \"NNNOOO\";\n\n    const validStr = (str: string) => {\n      if (typeof str !== \"string\" || str === \"\") return false;\n      if (str.length > MAX_STR_LEN) return false;\n      for (let charIndex = 0; charIndex < str.length; charIndex = charIndex + 1) {\n        const charCode = str.charCodeAt(charIndex);\n        if (charCode < LOWER_CHAR.charCodeAt(0) || charCode > UPPER_CHAR.charCodeAt(0)) return false;\n      }\n      return true;\n    };\n\n    /**\n     * To generate previous string in lexicographical order\n     */\n    const getPrevStr = (str: string): string | null => {\n      if (!validStr(str)) return null;\n      let newStr = str;\n      const charIndex = newStr.length - 1;\n      const charCode = newStr.charCodeAt(charIndex);\n\n      if (charCode === LOWER_CHAR.charCodeAt(0)) {\n        newStr = newStr.slice(0, charIndex);\n        if (newStr.length === 0) return null;\n        return newStr;\n      }\n\n      newStr = newStr.slice(0, charIndex) + String.fromCharCode(charCode - 1);\n      while (newStr.length < MAX_STR_LEN) newStr = newStr + UPPER_CHAR;\n      return newStr;\n    };\n\n    /**\n     * To generate next string in lexicographical order\n     */\n    const getNextStr = (str: string): string | null => {\n      if (!validStr(str)) return null;\n      let newStr = str;\n\n      if (newStr.length < MAX_STR_LEN) {\n        newStr = newStr + LOWER_CHAR;\n        return newStr;\n      }\n\n      for (let charIndex = newStr.length - 1; charIndex >= 0; charIndex = charIndex - 1) {\n        const charCode = newStr.charCodeAt(charIndex);\n        if (charCode !== UPPER_CHAR.charCodeAt(0)) {\n          newStr = newStr.slice(0, charIndex) + String.fromCharCode(charCode + 1);\n          return newStr;\n        }\n        newStr = newStr.slice(0, charIndex);\n      }\n      return null;\n    };\n\n    return {\n      getMidStr,\n      validStr,\n      getPrevStr,\n      getNextStr,\n    };\n  }, []);\n}\n","import { Session, StateEvent } from \"@thirdroom/hydrogen-view-sdk\";\n\nexport function useOrderMove(\n  session: Session,\n  roomId: string,\n  orderedEvents: StateEvent[],\n  order: {\n    validStr: (str: string) => boolean;\n    getMidStr: () => string;\n    getNextStr: (str: string) => string | null;\n  }\n) {\n  const handleMoveUp = async (targetIndex: number) => {\n    if (targetIndex < 1) return false;\n    let orderString: string | null = order.getMidStr();\n    let startIndex = 0;\n\n    for (let selectIndex = targetIndex - 1; selectIndex >= 0; selectIndex = selectIndex - 1) {\n      const selectEvent = orderedEvents[selectIndex];\n      const selectOrder = selectEvent.content.order;\n      if (order.validStr(selectOrder)) {\n        orderString = order.getNextStr(selectOrder);\n        startIndex = selectIndex + 1;\n        break;\n      }\n    }\n\n    for (let selectIndex = startIndex; selectIndex <= targetIndex; selectIndex = selectIndex + 1) {\n      if (selectIndex === targetIndex) {\n        const prevEvent = orderedEvents[selectIndex - 1];\n        const targetEvent = orderedEvents[selectIndex];\n\n        session.hsApi.sendState(roomId, prevEvent.type, prevEvent.state_key, {\n          ...prevEvent.content,\n          order: targetEvent.content.order,\n        });\n        session.hsApi.sendState(roomId, targetEvent.type, targetEvent.state_key, {\n          ...targetEvent.content,\n          order: prevEvent.content.order,\n        });\n        return true;\n      }\n      if (selectIndex + 1 === targetIndex) {\n        const selectEvent = orderedEvents[selectIndex];\n        const targetEvent = orderedEvents[selectIndex + 1];\n        session.hsApi.sendState(roomId, selectEvent.type, selectEvent.state_key, {\n          ...selectEvent.content,\n          order: targetEvent.content.order,\n        });\n        session.hsApi.sendState(roomId, targetEvent.type, targetEvent.state_key, {\n          ...targetEvent.content,\n          order: orderString,\n        });\n        return true;\n      }\n\n      if (!orderString) return false;\n      const selectEvent = orderedEvents[selectIndex];\n      session.hsApi.sendState(roomId, selectEvent.type, selectEvent.state_key, {\n        ...selectEvent.content,\n        order: orderString,\n      });\n      orderString = order.getNextStr(orderString);\n    }\n    return true;\n  };\n\n  return handleMoveUp;\n}\n","import { Room, makeTxnId } from \"@thirdroom/hydrogen-view-sdk\";\nimport { FormEvent, ReactNode, useRef } from \"react\";\n\nimport { Avatar } from \"../../../atoms/avatar/Avatar\";\nimport { Button } from \"../../../atoms/button/Button\";\nimport { IconButton } from \"../../../atoms/button/IconButton\";\nimport { Content } from \"../../../atoms/content/Content\";\nimport { DropdownMenu } from \"../../../atoms/menu/DropdownMenu\";\nimport { DropdownMenuItem } from \"../../../atoms/menu/DropdownMenuItem\";\nimport { Scroll } from \"../../../atoms/scroll/Scroll\";\nimport { Label } from \"../../../atoms/text/Label\";\nimport { Text } from \"../../../atoms/text/Text\";\nimport { useAsyncCallback } from \"../../../hooks/useAsyncCallback\";\nimport { useHydrogen } from \"../../../hooks/useHydrogen\";\nimport { RoomTypes, useRoomsOfType } from \"../../../hooks/useRoomsOfType\";\nimport { getAvatarHttpUrl, getIdentifierColorNumber } from \"../../../utils/avatar\";\nimport { useFeaturedRooms } from \"../../components/FeaturedRoomsProvider\";\nimport { RoomSummaryProvider } from \"../../components/RoomSummaryProvider\";\nimport { SettingTile } from \"../../components/setting-tile/SettingTile\";\nimport ChevronBottomIC from \".././../.././../../res/ic/chevron-bottom.svg\";\nimport ChevronTopIC from \".././../.././../../res/ic/chevron-top.svg\";\nimport BinIC from \".././../.././../../res/ic/bin.svg\";\nimport \"./DiscoverAdmin.css\";\nimport { RepositoryEvents } from \"./DiscoverView\";\nimport { SceneData, sceneDataToScene, SceneSubmission } from \"./SceneSubmission\";\nimport { useFeaturedWorlds } from \"../../components/FeaturedWorldsProvider\";\nimport { useFeaturedScenes } from \"../../components/FeaturedScenesProvider\";\nimport { Input } from \"../../../atoms/input/Input\";\nimport { eventByOrderKey, isValidRoomId } from \"../../../utils/matrixUtils\";\nimport { getRoomSummary } from \"../../../hooks/useRoomSummary\";\nimport { useOrderString } from \"../../../hooks/useOrderString\";\nimport { useOrderMove } from \"../../../hooks/useOrderMove\";\n\ninterface FeaturedItemProps {\n  before?: ReactNode;\n  children?: ReactNode;\n  after?: ReactNode;\n}\nfunction FeaturedItem({ before, children, after }: FeaturedItemProps) {\n  return (\n    <div className=\"FeaturedItem flex items-center gap-md\">\n      {before && <div>{before}</div>}\n      <div className=\"grow\">{children}</div>\n      {after && <div>{after}</div>}\n    </div>\n  );\n}\n\nfunction FeatureRoom({ room }: { room: Room }) {\n  const { session, platform } = useHydrogen(true);\n  const featuredRooms = useFeaturedRooms(room);\n  const [allRooms] = useRoomsOfType(session, RoomTypes.Room);\n  const unFeaturedRoom = allRooms.filter(\n    (room) => !featuredRooms.find((stateEvent) => stateEvent.state_key === room.id)\n  );\n  const formRef = useRef<HTMLFormElement>(null);\n  const orderedRooms = featuredRooms.sort(eventByOrderKey);\n  const order = useOrderString();\n  const handleMoveUp = useOrderMove(session, room.id, orderedRooms, order);\n\n  const {\n    callback: featureRoom,\n    loading,\n    error,\n  } = useAsyncCallback(\n    async (roomId: string) => {\n      if (!isValidRoomId(roomId)) throw Error(\"Invalid roomId\");\n      const response = await getRoomSummary(session, roomId);\n      const summaryData = await response.json();\n      if (!summaryData.room_id) throw Error(\"Can not feature room. Either room is private or does not exist.\");\n      const firstEvent = orderedRooms[0];\n      const firstOrder = firstEvent?.content?.order;\n      const prevOrder = order.getPrevStr(typeof firstOrder === \"string\" ? firstOrder : order.getMidStr());\n      await session.hsApi.sendState(room.id, RepositoryEvents.FeaturedRoom, roomId, {\n        suggested: false,\n        via: [],\n        order: prevOrder ?? undefined,\n      });\n    },\n    [session, order]\n  );\n\n  const removeFeatured = (roomId: string) => {\n    if (window.confirm(\"Are you sure?\")) {\n      session.hsApi.sendState(room.id, RepositoryEvents.FeaturedRoom, roomId, {});\n    }\n  };\n\n  const handleSelect = (room: Room) => {\n    const form = formRef.current;\n    if (form) {\n      form.roomIdInput.value = room.id;\n    }\n  };\n\n  const handleSubmit = (evt: FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n    const { roomIdInput } = evt.target as typeof evt.target & {\n      roomIdInput: HTMLInputElement;\n    };\n    const roomId = roomIdInput.value.trim();\n    roomIdInput.value = \"\";\n    if (roomId) featureRoom(roomId);\n  };\n\n  return (\n    <div className=\"flex flex-column gap-sm\">\n      <SettingTile label={<Label>Feature Public Room</Label>}>\n        <div className=\"flex flex-column gap-xxs\">\n          <form ref={formRef} onSubmit={handleSubmit} className=\"flex gap-sm\">\n            <Input\n              required\n              name=\"roomIdInput\"\n              placeholder=\"Room Id\"\n              after={\n                <DropdownMenu\n                  content={\n                    <Scroll style={{ maxHeight: \"200px\", padding: \"var(--sp-xs) 0\" }}>\n                      {unFeaturedRoom.length === 0 ? (\n                        <div style={{ padding: \"0 var(--sp-md)\" }}>\n                          <Text variant=\"b2\" weight=\"medium\">\n                            No Rooms\n                          </Text>\n                        </div>\n                      ) : (\n                        unFeaturedRoom.map((room) => (\n                          <DropdownMenuItem\n                            className=\"flex items-center gap-xs\"\n                            key={room.id}\n                            onSelect={() => handleSelect(room)}\n                          >\n                            <Avatar\n                              imageSrc={\n                                room.avatarUrl &&\n                                getAvatarHttpUrl(room.avatarUrl, 60, platform, session.mediaRepository)\n                              }\n                              shape=\"rounded\"\n                              size=\"xxs\"\n                              bgColor={`var(--usercolor${getIdentifierColorNumber(room.id)})`}\n                              name={room.name ?? \"Unknown room\"}\n                            />\n                            <Text variant=\"b2\" weight=\"medium\">\n                              {room.name}\n                            </Text>\n                          </DropdownMenuItem>\n                        ))\n                      )}\n                    </Scroll>\n                  }\n                >\n                  <IconButton iconSrc={ChevronBottomIC} label=\"View all\" />\n                </DropdownMenu>\n              }\n            />\n            <Button type=\"submit\" disabled={loading}>\n              Feature\n            </Button>\n          </form>\n          {error && (\n            <Text color=\"danger\" variant=\"b3\">\n              {error.message}\n            </Text>\n          )}\n        </div>\n      </SettingTile>\n      {orderedRooms.length === 0 ? null : (\n        <div>\n          {orderedRooms.map((stateEvent, index) => (\n            <RoomSummaryProvider\n              key={stateEvent.state_key}\n              roomIdOrAlias={stateEvent.state_key}\n              fallback={() => <FeaturedItem />}\n            >\n              {(summaryData) => (\n                <FeaturedItem\n                  before={\n                    <Avatar\n                      imageSrc={\n                        summaryData.avatarUrl &&\n                        getAvatarHttpUrl(summaryData.avatarUrl, 60, platform, session.mediaRepository)\n                      }\n                      shape=\"rounded\"\n                      size=\"lg\"\n                      bgColor={`var(--usercolor${getIdentifierColorNumber(summaryData.roomId)})`}\n                      name={summaryData.name}\n                    />\n                  }\n                  after={\n                    <div className=\"flex gap-xs\">\n                      <IconButton\n                        size=\"sm\"\n                        label=\"Remove Featured\"\n                        iconSrc={BinIC}\n                        onClick={() => removeFeatured(stateEvent.state_key)}\n                      />\n                      <div className=\"flex flex-column\">\n                        {index > 0 && (\n                          <IconButton\n                            size=\"sm\"\n                            label=\"Move Up\"\n                            iconSrc={ChevronTopIC}\n                            onClick={() => handleMoveUp(index)}\n                          />\n                        )}\n                        {index < orderedRooms.length - 1 && (\n                          <IconButton\n                            size=\"sm\"\n                            label=\"Move Down\"\n                            iconSrc={ChevronBottomIC}\n                            onClick={() => handleMoveUp(index + 1)}\n                          />\n                        )}\n                      </div>\n                    </div>\n                  }\n                >\n                  <Text className=\"truncate\">{summaryData.name}</Text>\n                  <Text variant=\"b3\" className=\"truncate\">\n                    {summaryData.topic}\n                  </Text>\n                </FeaturedItem>\n              )}\n            </RoomSummaryProvider>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction FeatureWorld({ room }: { room: Room }) {\n  const { session, platform } = useHydrogen(true);\n  const featuredWorlds = useFeaturedWorlds(room);\n  const [allWorlds] = useRoomsOfType(session, RoomTypes.World);\n  const unFeaturedWorlds = allWorlds.filter(\n    (room) => !featuredWorlds.find((stateEvent) => stateEvent.state_key === room.id)\n  );\n  const formRef = useRef<HTMLFormElement>(null);\n  const orderedWorlds = featuredWorlds.sort(eventByOrderKey);\n  const order = useOrderString();\n  const handleMoveUp = useOrderMove(session, room.id, orderedWorlds, order);\n\n  const {\n    callback: featureWorld,\n    loading,\n    error,\n  } = useAsyncCallback(\n    async (roomId: string) => {\n      if (!isValidRoomId(roomId)) throw Error(\"Invalid roomId\");\n      const response = await getRoomSummary(session, roomId);\n      const summaryData = await response.json();\n      if (!summaryData.room_id) throw Error(\"Can not feature world. Either world is private or does not exist.\");\n      const firstEvent = orderedWorlds[0];\n      const firstOrder = firstEvent?.content?.order;\n      const prevOrder = order.getPrevStr(typeof firstOrder === \"string\" ? firstOrder : order.getMidStr());\n      await session.hsApi.sendState(room.id, RepositoryEvents.FeaturedWorld, roomId, {\n        suggested: false,\n        via: [],\n        order: prevOrder ?? undefined,\n      });\n    },\n    [session]\n  );\n\n  const removeFeatured = (roomId: string) => {\n    if (window.confirm(\"Are you sure?\")) {\n      session.hsApi.sendState(room.id, RepositoryEvents.FeaturedWorld, roomId, {});\n    }\n  };\n\n  const handleSelect = (room: Room) => {\n    const form = formRef.current;\n    if (form) {\n      form.roomIdInput.value = room.id;\n    }\n  };\n\n  const handleSubmit = (evt: FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n    const { roomIdInput } = evt.target as typeof evt.target & {\n      roomIdInput: HTMLInputElement;\n    };\n    const roomId = roomIdInput.value.trim();\n    roomIdInput.value = \"\";\n    if (roomId) featureWorld(roomId);\n  };\n\n  return (\n    <div className=\"flex flex-column gap-sm\">\n      <SettingTile label={<Label>Feature Public World</Label>}>\n        <div className=\"flex flex-column gap-xxs\">\n          <form ref={formRef} onSubmit={handleSubmit} className=\"flex gap-sm\">\n            <Input\n              required\n              name=\"roomIdInput\"\n              placeholder=\"Room Id\"\n              after={\n                <DropdownMenu\n                  content={\n                    <Scroll style={{ maxHeight: \"200px\", padding: \"var(--sp-xs) 0\" }}>\n                      {unFeaturedWorlds.length === 0 ? (\n                        <div style={{ padding: \"0 var(--sp-md)\" }}>\n                          <Text variant=\"b2\" weight=\"medium\">\n                            No Worlds\n                          </Text>\n                        </div>\n                      ) : (\n                        unFeaturedWorlds.map((room) => (\n                          <DropdownMenuItem\n                            className=\"flex items-center gap-xs\"\n                            key={room.id}\n                            onSelect={() => handleSelect(room)}\n                          >\n                            <Avatar\n                              imageSrc={\n                                room.avatarUrl &&\n                                getAvatarHttpUrl(room.avatarUrl, 60, platform, session.mediaRepository)\n                              }\n                              shape=\"rounded\"\n                              size=\"xxs\"\n                              bgColor={`var(--usercolor${getIdentifierColorNumber(room.id)})`}\n                              name={room.name ?? \"Unknown world\"}\n                            />\n                            <Text variant=\"b2\" weight=\"medium\">\n                              {room.name}\n                            </Text>\n                          </DropdownMenuItem>\n                        ))\n                      )}\n                    </Scroll>\n                  }\n                >\n                  <IconButton iconSrc={ChevronBottomIC} label=\"View all\" />\n                </DropdownMenu>\n              }\n            />\n            <Button type=\"submit\" disabled={loading}>\n              Feature\n            </Button>\n          </form>\n          {error && (\n            <Text color=\"danger\" variant=\"b3\">\n              {error.message}\n            </Text>\n          )}\n        </div>\n      </SettingTile>\n      {orderedWorlds.length === 0 ? null : (\n        <div>\n          {orderedWorlds.map((stateEvent, index) => (\n            <RoomSummaryProvider\n              key={stateEvent.state_key}\n              roomIdOrAlias={stateEvent.state_key}\n              fallback={() => <FeaturedItem />}\n            >\n              {(summaryData) => (\n                <FeaturedItem\n                  before={\n                    <Avatar\n                      imageSrc={\n                        summaryData.avatarUrl &&\n                        getAvatarHttpUrl(summaryData.avatarUrl, 60, platform, session.mediaRepository)\n                      }\n                      shape=\"circle\"\n                      size=\"lg\"\n                      bgColor={`var(--usercolor${getIdentifierColorNumber(summaryData.roomId)})`}\n                      name={summaryData.name}\n                    />\n                  }\n                  after={\n                    <div className=\"flex gap-xs\">\n                      <IconButton\n                        size=\"sm\"\n                        label=\"Remove Featured\"\n                        iconSrc={BinIC}\n                        onClick={() => removeFeatured(stateEvent.state_key)}\n                      />\n\n                      <div className=\"flex flex-column\">\n                        {index > 0 && (\n                          <IconButton\n                            size=\"sm\"\n                            label=\"Move Up\"\n                            iconSrc={ChevronTopIC}\n                            onClick={() => handleMoveUp(index)}\n                          />\n                        )}\n                        {index < orderedWorlds.length - 1 && (\n                          <IconButton\n                            size=\"sm\"\n                            label=\"Move Down\"\n                            iconSrc={ChevronBottomIC}\n                            onClick={() => handleMoveUp(index + 1)}\n                          />\n                        )}\n                      </div>\n                    </div>\n                  }\n                >\n                  <Text className=\"truncate\">{summaryData.name}</Text>\n                  <Text variant=\"b3\" className=\"truncate\">\n                    {summaryData.topic}\n                  </Text>\n                </FeaturedItem>\n              )}\n            </RoomSummaryProvider>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction FeatureScene({ room }: { room: Room }) {\n  const { session, platform } = useHydrogen(true);\n\n  const featuredScenes = useFeaturedScenes(room);\n  const orderedScenes = featuredScenes.sort(eventByOrderKey);\n  const order = useOrderString();\n  const handleMoveUp = useOrderMove(session, room.id, orderedScenes, order);\n\n  const handleSave = async (data: SceneData) => {\n    const scene = sceneDataToScene(data);\n\n    try {\n      const result = await session.hsApi\n        .send(room.id, RepositoryEvents.Scene, makeTxnId(), {\n          scene,\n        })\n        .response();\n\n      const eventId = result.event_id;\n      if (!eventId) return;\n\n      const firstEvent = orderedScenes[0];\n      const firstOrder = firstEvent.content.order;\n      const prevOrder = order.getPrevStr(firstOrder);\n      session.hsApi.sendState(room.id, RepositoryEvents.FeaturedScene, eventId, {\n        scene,\n        order: prevOrder ?? undefined,\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  const removeFeatured = (roomId: string) => {\n    if (window.confirm(\"Are you sure?\")) {\n      session.hsApi.sendState(room.id, RepositoryEvents.FeaturedScene, roomId, {});\n    }\n  };\n\n  return (\n    <div className=\"flex flex-column gap-sm\">\n      <SceneSubmission\n        onSave={handleSave}\n        renderTrigger={(openModal) => (\n          <SettingTile label={<Label>Feature Scene</Label>}>\n            <Button onClick={openModal}>Submit Scene</Button>\n          </SettingTile>\n        )}\n      />\n\n      {orderedScenes.length === 0 ? null : (\n        <div>\n          {orderedScenes.sort(eventByOrderKey).map((stateEvent, index) => (\n            <FeaturedItem\n              key={stateEvent.state_key}\n              before={\n                <Avatar\n                  imageSrc={\n                    stateEvent.content.scene.preview_url &&\n                    getAvatarHttpUrl(stateEvent.content.scene.preview_url, 60, platform, session.mediaRepository)\n                  }\n                  shape=\"circle\"\n                  size=\"lg\"\n                  bgColor={`var(--usercolor${getIdentifierColorNumber(stateEvent.state_key)})`}\n                  name={stateEvent.content.scene.name}\n                />\n              }\n              after={\n                <div className=\"flex gap-xs\">\n                  <IconButton\n                    size=\"sm\"\n                    label=\"Remove Featured\"\n                    iconSrc={BinIC}\n                    onClick={() => removeFeatured(stateEvent.state_key)}\n                  />\n\n                  <div className=\"flex flex-column\">\n                    {index > 0 && (\n                      <IconButton\n                        size=\"sm\"\n                        label=\"Move Up\"\n                        iconSrc={ChevronTopIC}\n                        onClick={() => handleMoveUp(index)}\n                      />\n                    )}\n                    {index < orderedScenes.length - 1 && (\n                      <IconButton\n                        size=\"sm\"\n                        label=\"Move Down\"\n                        iconSrc={ChevronBottomIC}\n                        onClick={() => handleMoveUp(index + 1)}\n                      />\n                    )}\n                  </div>\n                </div>\n              }\n            >\n              <Text className=\"truncate\">{stateEvent.content.scene.name}</Text>\n              <Text variant=\"b3\" className=\"truncate\">\n                {stateEvent.content.scene.descripton}\n              </Text>\n            </FeaturedItem>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\ninterface DiscoverAdminProps {\n  room: Room;\n  permissions: {\n    canFeatureRooms: boolean;\n    canFeatureWorlds: boolean;\n    canFeatureScenes: boolean;\n  };\n}\n\nexport function DiscoverAdmin({ room, permissions }: DiscoverAdminProps) {\n  return (\n    <Scroll>\n      <Content className=\"DiscoverAdmin__content\">\n        <div className=\"flex flex-column gap-lg\">\n          {permissions.canFeatureRooms && <FeatureRoom room={room} />}\n          {permissions.canFeatureWorlds && <FeatureWorld room={room} />}\n          {permissions.canFeatureScenes && <FeatureScene room={room} />}\n        </div>\n      </Content>\n    </Scroll>\n  );\n}\n","import { Room } from \"@thirdroom/hydrogen-view-sdk\";\n\nimport { Content } from \"../../../atoms/content/Content\";\nimport { Scroll } from \"../../../atoms/scroll/Scroll\";\nimport { useHydrogen } from \"../../../hooks/useHydrogen\";\nimport { DiscoverGroupGrid } from \"../../components/discover-group/DiscoverGroup\";\nimport { RepositoryEvents } from \"./DiscoverView\";\nimport \"./DiscoverAll.css\";\nimport { FeaturedRoomsProvider } from \"../../components/FeaturedRoomsProvider\";\nimport { FeaturedWorldsProvider } from \"../../components/FeaturedWorldsProvider\";\nimport { FeaturedRoomCard } from \"./FeaturedRoomCard\";\nimport { FeaturedWorldCard } from \"./FeaturedWorldCard\";\nimport { FeaturedScenesProvider } from \"../../components/FeaturedScenesProvider\";\nimport { FeaturedSceneCard } from \"./FeaturedSceneCard\";\nimport { eventByOrderKey } from \"../../../utils/matrixUtils\";\n\nexport function DiscoverAll({ eventType, room }: { eventType: RepositoryEvents; room: Room }) {\n  const { session, platform } = useHydrogen(true);\n\n  return (\n    <Scroll>\n      <Content className=\"DiscoverAll__content\">\n        {eventType == RepositoryEvents.FeaturedRoom && (\n          <DiscoverGroupGrid>\n            <FeaturedRoomsProvider room={room}>\n              {(featuredRooms) =>\n                featuredRooms.length === 0 ? null : (\n                  <>\n                    {featuredRooms.sort(eventByOrderKey).map((stateEvent) => (\n                      <FeaturedRoomCard\n                        key={stateEvent.state_key}\n                        session={session}\n                        platform={platform}\n                        roomId={stateEvent.state_key}\n                      />\n                    ))}\n                  </>\n                )\n              }\n            </FeaturedRoomsProvider>\n          </DiscoverGroupGrid>\n        )}\n        {eventType == RepositoryEvents.FeaturedWorld && (\n          <DiscoverGroupGrid>\n            <FeaturedWorldsProvider room={room}>\n              {(featuredWorlds) =>\n                featuredWorlds.length === 0 ? null : (\n                  <>\n                    {featuredWorlds.sort(eventByOrderKey).map((stateEvent) => (\n                      <FeaturedWorldCard\n                        key={stateEvent.state_key}\n                        session={session}\n                        platform={platform}\n                        roomId={stateEvent.state_key}\n                      />\n                    ))}\n                  </>\n                )\n              }\n            </FeaturedWorldsProvider>\n          </DiscoverGroupGrid>\n        )}\n        {eventType === RepositoryEvents.FeaturedScene && (\n          <DiscoverGroupGrid>\n            <FeaturedScenesProvider room={room}>\n              {(featuredScenes) =>\n                featuredScenes.length === 0 ? null : (\n                  <DiscoverGroupGrid itemMinWidth={300} gap=\"md\">\n                    {featuredScenes.sort(eventByOrderKey).map((stateEvent) => (\n                      <FeaturedSceneCard\n                        key={stateEvent.state_key}\n                        session={session}\n                        roomId={room.id}\n                        stateEvent={stateEvent}\n                      />\n                    ))}\n                  </DiscoverGroupGrid>\n                )\n              }\n            </FeaturedScenesProvider>\n          </DiscoverGroupGrid>\n        )}\n      </Content>\n    </Scroll>\n  );\n}\n","import { ReactNode } from \"react\";\nimport \"./ThumbnailBadgeWrapper.css\";\n\ninterface ThumbnailBadgeWrapperProps {\n  badge?: ReactNode;\n  children: ReactNode;\n}\n\nexport function ThumbnailBadgeWrapper({ badge, children }: ThumbnailBadgeWrapperProps) {\n  return (\n    <div className=\"ThumbnailBadgeWrapper\">\n      {children}\n      {badge && <div className=\"ThumbnailBadgeWrapper__item\">{badge}</div>}\n    </div>\n  );\n}\n","import { Session, Room, TimelineEvent, makeTxnId } from \"@thirdroom/hydrogen-view-sdk\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\n\nimport { IconButton } from \"../../../atoms/button/IconButton\";\nimport { Content } from \"../../../atoms/content/Content\";\nimport { Dots } from \"../../../atoms/loading/Dots\";\nimport { Scroll } from \"../../../atoms/scroll/Scroll\";\nimport { Label } from \"../../../atoms/text/Label\";\nimport { Text } from \"../../../atoms/text/Text\";\nimport { Thumbnail } from \"../../../atoms/thumbnail/Thumbnail\";\nimport { ThumbnailImg } from \"../../../atoms/thumbnail/ThumbnailImg\";\nimport { useHydrogen } from \"../../../hooks/useHydrogen\";\nimport { getHttpUrl } from \"../../../utils/avatar\";\nimport { DiscoverGroup, DiscoverGroupGrid } from \"../../components/discover-group/DiscoverGroup\";\nimport { ScenePreviewCard, ScenePreviewCardContent } from \"../../components/scene-preview-card/ScenePreviewCard\";\nimport MoreHorizontalIC from \".././../.././../../res/ic/more-horizontal.svg\";\nimport AddIC from \".././../.././../../res/ic/add.svg\";\nimport \"./DiscoverCreator.css\";\nimport { Icon } from \"../../../atoms/icon/Icon\";\nimport { SceneData, sceneDataToScene, SceneSubmission } from \"./SceneSubmission\";\nimport { RepositoryEvents } from \"./DiscoverView\";\nimport { useIsMounted } from \"../../../hooks/useIsMounted\";\nimport { Button } from \"../../../atoms/button/Button\";\nimport { useFeaturedScenes } from \"../../components/FeaturedScenesProvider\";\nimport { ThumbnailBadgeWrapper } from \"../../../atoms/thumbnail/ThumbnailBadgeWrapper\";\nimport { NotificationBadge } from \"../../../atoms/badge/NotificationBadge\";\nimport { DropdownMenu } from \"../../../atoms/menu/DropdownMenu\";\nimport { DropdownMenuItem } from \"../../../atoms/menu/DropdownMenuItem\";\nimport { eventByOrderKey } from \"../../../utils/matrixUtils\";\nimport { useOrderString } from \"../../../hooks/useOrderString\";\n\nconst getScenes = async (\n  session: Session,\n  roomId: string,\n  options?: {\n    from?: string;\n    limit?: number;\n    sender?: string[];\n    dir?: \"b\" | \"f\";\n  }\n) => {\n  return session.hsApi\n    .messages(roomId, {\n      dir: options?.dir ?? \"b\",\n      from: options?.from,\n      limit: options?.limit ?? 20,\n      filter: {\n        types: [RepositoryEvents.Scene],\n        senders: options?.sender,\n      },\n    })\n    .response();\n};\n\nfunction useScenes(room: Room, sender?: string) {\n  const { session } = useHydrogen(true);\n  const [scenes, setScenes] = useState<TimelineEvent[]>([]);\n  const endPointsRef = useRef<{ start?: string; end?: string }>({});\n  const isMounted = useIsMounted();\n  const [loading, setLoading] = useState(false);\n\n  const loadScenes = useCallback(\n    async (reset: boolean, backward: boolean) => {\n      setLoading(true);\n      if (reset) endPointsRef.current = {};\n      const data = await getScenes(session, room.id, {\n        sender: sender ? [sender] : undefined,\n        from: backward ? endPointsRef.current.end : endPointsRef.current.start,\n        dir: backward ? \"b\" : \"f\",\n        limit: 10,\n      });\n\n      if (!isMounted() || !Array.isArray(data.chunk)) return;\n\n      if (reset) {\n        endPointsRef.current = { start: data.start, end: data.end };\n        setScenes(data.chunk);\n      } else {\n        if (backward) endPointsRef.current.end = data.end;\n        else endPointsRef.current.start = data.end;\n        setScenes((state) => (backward ? [...state, ...data.chunk] : [...data.chunk, ...state]));\n      }\n      setLoading(false);\n    },\n    [session, room, sender, isMounted]\n  );\n\n  useEffect(() => {\n    endPointsRef.current = {};\n    loadScenes(true, true);\n  }, [loadScenes]);\n\n  const deleteScene = (sceneEvent: TimelineEvent) => {\n    setScenes((state) => state.filter((event) => event.event_id !== sceneEvent.event_id));\n    session.hsApi.redact(room.id, sceneEvent.event_id, makeTxnId(), {});\n  };\n\n  const canLoadBack = typeof endPointsRef.current.end === \"string\";\n  return { scenes, loading, loadScenes, canLoadBack, deleteScene };\n}\n\ninterface DiscoverCreatorProps {\n  room: Room;\n  permissions: {\n    canFeatureScenes: boolean;\n    canRedact: boolean;\n  };\n}\nexport function DiscoverCreator({ room, permissions }: DiscoverCreatorProps) {\n  const { session } = useHydrogen(true);\n\n  const [showAll, setShowAll] = useState(false);\n  const order = useOrderString();\n  const featuredScenes = useFeaturedScenes(room);\n  const isFeatured = (eventId: string) => featuredScenes.find((stateEvent) => stateEvent.state_key === eventId);\n  const { scenes, loading, loadScenes, canLoadBack, deleteScene } = useScenes(\n    room,\n    showAll ? undefined : session.userId\n  );\n\n  const isValidScene = (sceneEvent: TimelineEvent) => {\n    const scene = sceneEvent?.content?.scene;\n    if (typeof scene !== \"object\") return false;\n    if (scene.url && scene.preview_url && scene.name && scene.author_name) {\n      return true;\n    }\n    return false;\n  };\n\n  const featureScene = (sceneEvent: TimelineEvent) => {\n    if (!isValidScene(sceneEvent)) return;\n\n    featuredScenes.sort(eventByOrderKey);\n\n    let prevOrder;\n\n    if (featuredScenes.length > 0) {\n      const firstEvent = featuredScenes[0];\n      const firstOrder = firstEvent.content.order;\n      prevOrder = order.getPrevStr(firstOrder);\n    }\n\n    session.hsApi.sendState(room.id, RepositoryEvents.FeaturedScene, sceneEvent.event_id, {\n      scene: sceneEvent.content.scene,\n      order: prevOrder ?? undefined,\n    });\n  };\n\n  const unFeatureScene = (sceneEvent: TimelineEvent) => {\n    session.hsApi.sendState(room.id, RepositoryEvents.FeaturedScene, sceneEvent.event_id, {});\n  };\n\n  const previewScene = (sceneEvent: TimelineEvent) => {\n    if (!isValidScene(sceneEvent)) return;\n    window.open(`/scene-preview?url=${sceneEvent.content.scene.url}`, \"__blank\");\n  };\n\n  const uploadScene = async (data: SceneData) => {\n    const scene = sceneDataToScene(data);\n    await session.hsApi.send(room.id, RepositoryEvents.Scene, makeTxnId(), { scene }).response();\n  };\n\n  return (\n    <Scroll>\n      <Content className=\"DiscoverCreator__content\">\n        <DiscoverGroup\n          label={\n            <div className=\"flex items-center gap-md\">\n              <Label className=\"grow\">Scenes</Label>\n              <div className=\"flex items-center gap-sm\">\n                <button\n                  disabled={loading}\n                  className=\"DiscoverCreator__textBtn\"\n                  onClick={async () => loadScenes(false, false)}\n                >\n                  <Text variant=\"b3\" weight=\"bold\" type=\"span\">\n                    Refresh\n                  </Text>\n                </button>\n                {permissions.canFeatureScenes && (\n                  <button className=\"DiscoverCreator__textBtn\" onClick={() => setShowAll((state) => !state)}>\n                    <Text variant=\"b3\" weight=\"bold\" type=\"span\">\n                      {showAll ? \"From: Everyone\" : \"From: Me\"}\n                    </Text>\n                  </button>\n                )}\n              </div>\n            </div>\n          }\n          content={\n            <div className=\"flex flex-column gap-md\">\n              <DiscoverGroupGrid itemMinWidth={400} gap=\"md\">\n                <a\n                  target=\"_blank\"\n                  href=\"/docs/guides/unity/\"\n                  className=\"DiscoverCreator__unityButton flex flex-column items-center justify-center\"\n                >\n                  <Text color=\"primary\" type=\"span\" variant=\"b1\" weight=\"semi-bold\">\n                    Third Room Unity Exporter\n                  </Text>\n                  <Text color=\"primary\" type=\"span\" variant=\"b3\">\n                    Read docs to create and export your own custom scenes\n                  </Text>\n                </a>\n                <SceneSubmission\n                  onSave={async (data) => {\n                    await uploadScene(data);\n                    loadScenes(false, false);\n                  }}\n                  renderTrigger={(openModal) => (\n                    <button\n                      onClick={openModal}\n                      className=\"DiscoverCreator__sceneButton flex flex-column items-center justify-center\"\n                    >\n                      <Icon size=\"xl\" src={AddIC} />\n                      <Text type=\"span\" variant=\"b3\" weight=\"semi-bold\">\n                        Upload Scene\n                      </Text>\n                    </button>\n                  )}\n                />\n                {scenes.map(\n                  (sceneEvent) =>\n                    isValidScene(sceneEvent) && (\n                      <ScenePreviewCard\n                        key={sceneEvent.event_id}\n                        thumbnail={\n                          <ThumbnailBadgeWrapper\n                            badge={isFeatured(sceneEvent.event_id) && <NotificationBadge content=\"Featured\" />}\n                          >\n                            <Thumbnail size=\"lg\" wide>\n                              <ThumbnailImg\n                                src={getHttpUrl(session, sceneEvent.content.scene.preview_url) ?? \"\"}\n                                alt={sceneEvent.content.scene.name}\n                              />\n                            </Thumbnail>\n                          </ThumbnailBadgeWrapper>\n                        }\n                      >\n                        <ScenePreviewCardContent>\n                          <div className=\"grow\">\n                            <Text className=\"truncate\" variant=\"b3\">\n                              {sceneEvent.content.scene.author_name}\n                            </Text>\n                            <Text className=\"truncate\">{sceneEvent.content.scene.name}</Text>\n                          </div>\n                          <div className=\"flex items-center gap-xs\">\n                            {(permissions.canFeatureScenes ||\n                              permissions.canRedact ||\n                              session.userId === sceneEvent.sender) && (\n                              <DropdownMenu\n                                content={\n                                  <div style={{ padding: \"var(--sp-xxs) 0\" }}>\n                                    <DropdownMenuItem onSelect={() => previewScene(sceneEvent)}>\n                                      Preview\n                                    </DropdownMenuItem>\n                                    {permissions.canFeatureScenes && (\n                                      <>\n                                        {isFeatured(sceneEvent.event_id) ? (\n                                          <DropdownMenuItem onSelect={() => unFeatureScene(sceneEvent)}>\n                                            Un-Feature\n                                          </DropdownMenuItem>\n                                        ) : (\n                                          <DropdownMenuItem onSelect={() => featureScene(sceneEvent)}>\n                                            Feature\n                                          </DropdownMenuItem>\n                                        )}\n                                      </>\n                                    )}\n                                    {/* {session.userId === scene.sender && <DropdownMenuItem>Edit</DropdownMenuItem>} */}\n                                    {(permissions.canRedact || session.userId === sceneEvent.sender) && (\n                                      <DropdownMenuItem\n                                        onSelect={() => {\n                                          if (window.confirm(\"Are you sure?\")) deleteScene(sceneEvent);\n                                        }}\n                                      >\n                                        Delete\n                                      </DropdownMenuItem>\n                                    )}\n                                  </div>\n                                }\n                              >\n                                <IconButton iconSrc={MoreHorizontalIC} label=\"Delete Scene\" />\n                              </DropdownMenu>\n                            )}\n                          </div>\n                        </ScenePreviewCardContent>\n                      </ScenePreviewCard>\n                    )\n                )}\n              </DiscoverGroupGrid>\n              {loading ? (\n                <div className=\"flex justify-center items-center gap-sm\">\n                  <Dots />\n                  <Text>Loading</Text>\n                </div>\n              ) : (\n                canLoadBack && (\n                  <div className=\"flex justify-center items-center\">\n                    <Button className=\"DiscoverCreator__loadMore\" onClick={() => loadScenes(false, true)}>\n                      Load More\n                    </Button>\n                  </div>\n                )\n              )}\n            </div>\n          }\n        />\n      </Content>\n    </Scroll>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { Room } from \"@thirdroom/hydrogen-view-sdk\";\n\nimport { Content } from \"../../../atoms/content/Content\";\nimport { Header } from \"../../../atoms/header/Header\";\nimport { HeaderTitle } from \"../../../atoms/header/HeaderTitle\";\nimport ExploreIC from \"../../../../../res/ic/explore.svg\";\nimport ChevronRightIC from \"../../../../../res/ic/chevron-right.svg\";\nimport { Icon } from \"../../../atoms/icon/Icon\";\nimport { Window } from \"../../components/window/Window\";\nimport { DiscoverHome } from \"./DiscoverHome\";\nimport { SegmentControl } from \"../../../atoms/segment-control/SegmentControl\";\nimport { SegmentControlItem } from \"../../../atoms/segment-control/SegmentControlItem\";\nimport { usePowerLevels } from \"../../../hooks/usePowerLevels\";\nimport { useHydrogen } from \"../../../hooks/useHydrogen\";\nimport { DiscoverAdmin } from \"./DiscoverAdmin\";\nimport { DiscoverAll } from \"./DiscoverAll\";\nimport { DiscoverCreator } from \"./DiscoverCreator\";\nimport { getRoomSummary } from \"../../../hooks/useRoomSummary\";\nimport \"./DiscoverView.css\";\n\nexport enum RepositoryEvents {\n  FeaturedWorld = \"msc3948.repository_room.featured_world\",\n  FeaturedRoom = \"msc3948.repository_room.featured_room\",\n  FeaturedScene = \"msc3948.repository_room.featured_scene\",\n  Scene = \"msc3948.repository_room.scene\",\n}\n\nenum DiscoverTab {\n  Home = \"Home\",\n  Admin = \"Admin\",\n  Creator = \"Creator\",\n}\n\nexport function DiscoverView({ room }: { room: Room }) {\n  const { session } = useHydrogen(true);\n\n  const { getPowerLevel, canDoAction, canSendStateEvent } = usePowerLevels(room);\n  const [discoverTab, setDiscoverTab] = useState<DiscoverTab>(DiscoverTab.Home);\n  const [loadEvent, setLoadEvent] = useState<RepositoryEvents>();\n  const [supportRoomSummary, setSupportRoomSummary] = useState(true);\n\n  const userPowerLevel = getPowerLevel(session.userId);\n  const canFeatureRooms = canSendStateEvent(RepositoryEvents.FeaturedRoom, userPowerLevel);\n  const canFeatureWorlds = canSendStateEvent(RepositoryEvents.FeaturedWorld, userPowerLevel);\n  const canFeatureScenes = canSendStateEvent(RepositoryEvents.FeaturedScene, userPowerLevel);\n  const isAdmin = canFeatureRooms || canFeatureWorlds;\n  if (!isAdmin && discoverTab === DiscoverTab.Admin) {\n    setDiscoverTab(DiscoverTab.Home);\n  }\n\n  useEffect(() => {\n    // Do a room summary api support check\n    let controller: AbortController | undefined;\n    let mounted = true;\n    const run = async () => {\n      controller = new AbortController();\n      const response = await getRoomSummary(session, room.id, controller.signal);\n      const data = await response.json();\n      if (data.errcode === \"M_UNRECOGNIZED\" && mounted) {\n        setSupportRoomSummary(false);\n      }\n    };\n    run();\n    return () => {\n      mounted = false;\n      controller?.abort();\n    };\n  }, [room.id, session]);\n\n  return (\n    <Window className=\"DiscoverView\">\n      <Content\n        top={\n          <Header\n            left={\n              <div className=\"flex items-center gap-xxs\">\n                <button style={{ cursor: \"pointer\" }} onClick={() => setLoadEvent(undefined)}>\n                  <HeaderTitle icon={<Icon color=\"surface\" className=\"shrink-0\" src={ExploreIC} />}>\n                    Discover\n                  </HeaderTitle>\n                </button>\n                {loadEvent ? (\n                  <>\n                    <Icon src={ChevronRightIC} />\n                    <HeaderTitle>{`All Public ${(() => {\n                      if (loadEvent === RepositoryEvents.FeaturedRoom) return \"Rooms\";\n                      if (loadEvent === RepositoryEvents.FeaturedWorld) return \"Worlds\";\n                      if (loadEvent === RepositoryEvents.FeaturedScene) return \"Scenes\";\n                    })()}`}</HeaderTitle>\n                  </>\n                ) : null}\n              </div>\n            }\n            center={\n              loadEvent ? null : (\n                <SegmentControl>\n                  <SegmentControlItem\n                    value={DiscoverTab.Home}\n                    isSelected={DiscoverTab.Home === discoverTab}\n                    onSelect={setDiscoverTab}\n                  >\n                    Home\n                  </SegmentControlItem>\n                  <SegmentControlItem\n                    value={DiscoverTab.Creator}\n                    isSelected={DiscoverTab.Creator === discoverTab}\n                    onSelect={setDiscoverTab}\n                  >\n                    Creator\n                  </SegmentControlItem>\n                  {isAdmin && (\n                    <SegmentControlItem\n                      value={DiscoverTab.Admin}\n                      isSelected={DiscoverTab.Admin === discoverTab}\n                      onSelect={setDiscoverTab}\n                    >\n                      Admin\n                    </SegmentControlItem>\n                  )}\n                </SegmentControl>\n              )\n            }\n          />\n        }\n      >\n        {loadEvent ? (\n          <DiscoverAll eventType={loadEvent} room={room} />\n        ) : (\n          <>\n            {discoverTab === DiscoverTab.Home && room && (\n              <DiscoverHome supportRoomSummary={supportRoomSummary} room={room} onLoadEvent={setLoadEvent} />\n            )}\n            {discoverTab === DiscoverTab.Creator && room && (\n              <DiscoverCreator\n                room={room}\n                permissions={{\n                  canFeatureScenes,\n                  canRedact: canDoAction(\"redact\", userPowerLevel),\n                }}\n              />\n            )}\n            {discoverTab === DiscoverTab.Admin && room && (\n              <DiscoverAdmin\n                room={room}\n                permissions={{\n                  canFeatureRooms: canFeatureRooms && supportRoomSummary,\n                  canFeatureWorlds: canFeatureWorlds && supportRoomSummary,\n                  canFeatureScenes,\n                }}\n              />\n            )}\n          </>\n        )}\n      </Content>\n    </Window>\n  );\n}\n","import { Room, Session } from \"@thirdroom/hydrogen-view-sdk\";\n\nimport { RepositoryEvents } from \"../views/session/discover/DiscoverView\";\nimport { usePowerLevels } from \"./usePowerLevels\";\n\nexport function useUpdateScene(session: Session, room: Room) {\n  const { getPowerLevel, canSendStateEvent } = usePowerLevels(room);\n\n  const checkForUpdate = async (): Promise<boolean> => {\n    const canUpdateScene = canSendStateEvent(\"org.matrix.msc3815.world\", getPowerLevel(session.userId));\n    if (!canUpdateScene) return false;\n\n    try {\n      const stateEvent = await room?.getStateEvent(\"org.matrix.msc3815.world\");\n      const content = stateEvent?.event?.content;\n      if (!content) return false;\n      const sceneStateKey = content.scene_from?.state_key;\n      const sceneRoomId = content.scene_from?.room_id;\n      const sceneVersion = content.scene?.version ?? 1;\n\n      if (sceneStateKey && sceneRoomId) {\n        const sceneContent = await session.hsApi\n          .state(sceneRoomId, RepositoryEvents.FeaturedScene, sceneStateKey)\n          .response();\n\n        const updateVersion = sceneContent?.scene.version;\n        if (typeof updateVersion === \"number\" && updateVersion > sceneVersion) {\n          return true;\n        }\n      }\n    } catch (err) {\n      console.warn(err);\n    }\n    return false;\n  };\n\n  const updateScene = async () => {\n    const stateEvent = await room?.getStateEvent(\"org.matrix.msc3815.world\");\n    const content = stateEvent?.event?.content;\n    if (!content) return false;\n    const sceneStateKey = content.scene_from?.state_key;\n    const sceneRoomId = content.scene_from?.room_id;\n\n    if (sceneStateKey && sceneRoomId) {\n      const sceneContent = await session.hsApi\n        .state(sceneRoomId, RepositoryEvents.FeaturedScene, sceneStateKey)\n        .response();\n\n      await session.hsApi.sendState(room.id, \"org.matrix.msc3815.world\", \"\", {\n        ...(stateEvent?.event?.content ?? {}),\n        scene_url: sceneContent.scene.url,\n        scene_preview_url: sceneContent.scene.preview_url,\n        scene: sceneContent.scene,\n        from: sceneContent.scene.from,\n      });\n    }\n  };\n\n  return {\n    checkForUpdate,\n    updateScene,\n  };\n}\n","import { useState } from \"react\";\nimport { Room, RoomStatus, Session } from \"@thirdroom/hydrogen-view-sdk\";\nimport { useAtomValue, useSetAtom } from \"jotai\";\n\nimport \"./WorldPreview.css\";\nimport { Button } from \"../../../atoms/button/Button\";\nimport { WorldPreviewCard } from \"../../components/world-preview-card/WorldPreviewCard\";\nimport { useRoom } from \"../../../hooks/useRoom\";\nimport { useHydrogen } from \"../../../hooks/useHydrogen\";\nimport { useRoomStatus } from \"../../../hooks/useRoomStatus\";\nimport { Dots } from \"../../../atoms/loading/Dots\";\nimport { useInviteControl } from \"../../../hooks/useInviteControl\";\nimport { MemberListDialog } from \"../dialogs/MemberListDialog\";\nimport { Dialog } from \"../../../atoms/dialog/Dialog\";\nimport { usePermissionState } from \"../../../hooks/usePermissionState\";\nimport { exceptionToString, useStreamRequest, RequestException } from \"../../../hooks/useStreamRequest\";\nimport { AlertDialog } from \"../dialogs/AlertDialog\";\nimport { Text } from \"../../../atoms/text/Text\";\nimport { useUnknownWorldPath } from \"../../../hooks/useWorld\";\nimport { useAsyncCallback } from \"../../../hooks/useAsyncCallback\";\nimport { useUpdateScene } from \"../../../hooks/useUpdateScene\";\nimport { overlayWorldAtom } from \"../../../state/overlayWorld\";\nimport { worldAtom } from \"../../../state/world\";\nimport { useWorldNavigator } from \"../../../hooks/useWorldNavigator\";\nimport { useWorldLoader } from \"../../../hooks/useWorldLoader\";\n\ninterface InviteWorldPreviewProps {\n  session: Session;\n  roomId: string;\n}\n\nfunction InviteWorldPreview({ session, roomId }: InviteWorldPreviewProps) {\n  const { invite, accept, reject } = useInviteControl(session, roomId);\n\n  if (invite === undefined) return <WorldPreviewCard title=\"Failed to load Invite\" />;\n\n  return (\n    <WorldPreviewCard\n      title={invite.name}\n      desc={`${invite.inviter.name} invites you`}\n      options={\n        <div className=\"flex gap-xs\">\n          {!(invite.accepting || invite.accepted) && (\n            <Button fill=\"outline\" onClick={reject} disabled={invite.rejecting}>\n              {invite.rejecting ? <Dots color=\"primary\" /> : \"Reject\"}\n            </Button>\n          )}\n          {!(invite.rejecting || invite.rejected) && (\n            <Button onClick={accept} disabled={invite.accepting}>\n              {invite.accepting ? <Dots color=\"on-primary\" /> : \"Accept\"}\n            </Button>\n          )}\n        </div>\n      }\n    />\n  );\n}\n\nfunction JoinWorldCard({ worldIdOrAlias }: { worldIdOrAlias: string }) {\n  const selectWorld = useSetAtom(overlayWorldAtom);\n  const { session } = useHydrogen(true);\n\n  const {\n    loading,\n    error,\n    callback: joinRoomCallback,\n  } = useAsyncCallback<(roomIdOrAlias: string) => Promise<string>, string>(async (roomIdOrAlias) => {\n    const roomId = await session.joinRoom(roomIdOrAlias);\n    return roomId;\n  }, []);\n\n  const handleJoinWorld = async (roomIdOrAlias: string) => {\n    const roomId = await joinRoomCallback(roomIdOrAlias);\n    if (roomId) {\n      selectWorld(roomId);\n    }\n  };\n\n  return (\n    <WorldPreviewCard\n      title={worldIdOrAlias.startsWith(\"#\") ? worldIdOrAlias : \"Unknown world\"}\n      desc={error && error.message}\n      options={(() => {\n        if (loading) {\n          // TODO: this doesn't work because the parent component's state changes when joining\n          return (\n            <Button variant=\"secondary\" disabled>\n              Joining...\n            </Button>\n          );\n        }\n        if (error) return null;\n        return (\n          <Button variant=\"secondary\" onClick={() => handleJoinWorld(worldIdOrAlias)}>\n            Join World\n          </Button>\n        );\n      })()}\n    />\n  );\n}\n\nfunction EnterWorldButton({ room }: { room: Room }) {\n  const { session, platform } = useHydrogen(true);\n  const micPermission = usePermissionState(\"microphone\");\n  const requestStream = useStreamRequest(platform, micPermission);\n  const [micException, setMicException] = useState<RequestException>();\n  const [needsUpdate, setNeedsUpdate] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const { navigateEnterWorld } = useWorldNavigator(session);\n  const { exitWorld } = useWorldLoader();\n\n  const { checkForUpdate, updateScene } = useUpdateScene(session, room);\n\n  const handleLoadWorld = async () => {\n    exitWorld();\n    navigateEnterWorld(room);\n  };\n\n  const handleEnterWorld = async (checkUpdate = false) => {\n    setNeedsUpdate(false);\n    setMicException(undefined);\n    setLoading(true);\n\n    if (checkUpdate && (await checkForUpdate())) {\n      setNeedsUpdate(true);\n      setLoading(false);\n      return;\n    }\n    if (micPermission === \"granted\") {\n      setLoading(false);\n      handleLoadWorld();\n      return;\n    }\n    const [stream, exception] = await requestStream(true, false);\n    if (stream) {\n      stream.getAudioTracks().forEach((track) => track.stop());\n      setLoading(false);\n      handleLoadWorld();\n    }\n    if (exception) {\n      setMicException(exception);\n      setLoading(false);\n    }\n  };\n\n  const handleUpdateScene = async () => {\n    setLoading(true);\n    setNeedsUpdate(false);\n    await updateScene();\n    handleEnterWorld();\n  };\n\n  return (\n    <>\n      {micException && (\n        <AlertDialog\n          open={!!micException}\n          title=\"Microphone\"\n          content={\n            <div className=\"flex flex-column gap-xs\">\n              <Text variant=\"b2\">{exceptionToString(micException)}</Text>\n              <Text variant=\"b2\">\n                Connecting to other users may be unreliable without microphone access. We intend to fix this in the near\n                future.\n              </Text>\n            </div>\n          }\n          buttons={\n            <Button fill=\"outline\" onClick={handleLoadWorld}>\n              Enter without Microphone\n            </Button>\n          }\n          requestClose={() => setMicException(undefined)}\n        />\n      )}\n      {needsUpdate && (\n        <AlertDialog\n          open={!!needsUpdate}\n          requestClose={() => setNeedsUpdate(false)}\n          title=\"Update Scene\"\n          content={\n            <div className=\"flex flex-column gap-xs\">\n              <Text variant=\"b2\">New version of your world scene is available.</Text>\n            </div>\n          }\n          buttons={\n            <div className=\"flex flex-column gap-xs\">\n              <Button onClick={handleUpdateScene}>Update</Button>\n              <Button fill=\"outline\" onClick={() => handleEnterWorld()}>\n                Enter without Update\n              </Button>\n            </div>\n          }\n        />\n      )}\n      <Button size=\"lg\" variant=\"primary\" disabled={loading} onClick={() => handleEnterWorld(true)}>\n        {loading ? \"Entering...\" : \"Enter World\"}\n      </Button>\n    </>\n  );\n}\n\nexport function WorldPreview() {\n  const { session } = useHydrogen(true);\n\n  const worldId = useAtomValue(worldAtom).worldId;\n  const selectedWorldId = useAtomValue(overlayWorldAtom);\n  const [unknownWorldId, unknownWorldAlias] = useUnknownWorldPath();\n\n  const previewWorldId = selectedWorldId || worldId;\n\n  const room = useRoom(session, previewWorldId);\n\n  const [isMemberDialog, setIsMemberDialog] = useState(false);\n\n  const {\n    loading: roomStatusLoading,\n    error: roomStatusError,\n    value: roomStatus,\n  } = useRoomStatus(session, previewWorldId);\n\n  return (\n    <div className=\"WorldPreview grow flex flex-column justify-end items-center\">\n      {room && (\n        <Dialog open={isMemberDialog} onOpenChange={setIsMemberDialog}>\n          <MemberListDialog room={room} requestClose={() => setIsMemberDialog(false)} />\n        </Dialog>\n      )}\n      {(() => {\n        const unknownIdOrAlias = unknownWorldAlias ?? unknownWorldId;\n        if (!previewWorldId && unknownIdOrAlias) {\n          return <JoinWorldCard worldIdOrAlias={unknownIdOrAlias} />;\n        }\n        if (roomStatus === undefined) {\n          if (roomStatusLoading) {\n            return <WorldPreviewCard title=\"Loading Room...\" />;\n          } else if (room === undefined) {\n            return null;\n          } else {\n            return (\n              <WorldPreviewCard\n                title=\"Loading Failed\"\n                desc={roomStatusError ? `Error loading world: ${roomStatusError}` : \"Unknown error occured\"}\n              />\n            );\n          }\n        } else if (roomStatus & RoomStatus.Replaced) {\n          return null;\n        } else if (roomStatus & RoomStatus.BeingCreated) {\n          return <WorldPreviewCard title=\"Creating Room...\" />;\n        } else if (roomStatus & RoomStatus.Invited) {\n          if (!previewWorldId) {\n            return <WorldPreviewCard title=\"Loading Room...\" />;\n          }\n\n          return <InviteWorldPreview session={session} roomId={previewWorldId} />;\n        } else if (roomStatus & RoomStatus.Archived) {\n          return <WorldPreviewCard title=\"Room Archived\" />;\n        } else if (roomStatus & RoomStatus.Joined) {\n          return (\n            room && (\n              <WorldPreviewCard\n                title={room?.name || \"Unnamed Room\"}\n                memberCount={room?.joinedMemberCount || 0}\n                onMembersClick={() => setIsMemberDialog(true)}\n                options={<EnterWorldButton room={room} />}\n              />\n            )\n          );\n        }\n\n        // TODO: this default case may not only be the loading state\n        return <WorldPreviewCard title=\"Joining World...\" />;\n      })()}\n    </div>\n  );\n}\n","import { ReactNode } from \"react\";\nimport classNames from \"classnames\";\n\nimport \"./WindowContent.css\";\n\ninterface WindowContentProps {\n  className?: string;\n  children: ReactNode;\n  aside?: ReactNode;\n}\n\nexport function WindowContent({ className, children, aside }: WindowContentProps) {\n  const contentClass = classNames(\"WindowContent flex\", className);\n\n  return (\n    <div className={contentClass}>\n      <div className=\"WindowContent__main grow flex\">{children}</div>\n      {aside && <aside className=\"WindowContent__aside\">{aside}</aside>}\n    </div>\n  );\n}\n","import { ReactNode } from \"react\";\nimport classNames from \"classnames\";\n\nimport \"./WindowAside.css\";\n\ninterface WindowAsideProps {\n  className?: string;\n  children: ReactNode;\n}\n\nexport function WindowAside({ className, children }: WindowAsideProps) {\n  const asideClass = classNames(\"WindowAside\", className);\n\n  return <div className={asideClass}>{children}</div>;\n}\n","import { useState } from \"react\";\nimport { useSetAtom } from \"jotai\";\n\nimport { Text } from \"../../../atoms/text/Text\";\nimport { Icon } from \"../../../atoms/icon/Icon\";\nimport { IconButton } from \"../../../atoms/button/IconButton\";\nimport { Window } from \"../../components/window/Window\";\nimport { Header } from \"../../../atoms/header/Header\";\nimport { HeaderTitle } from \"../../../atoms/header/HeaderTitle\";\nimport { WindowContent } from \"../../components/window/WindowContent\";\nimport { WindowAside } from \"../../components/window/WindowAside\";\nimport LanguageIC from \"../../../../../res/ic/language.svg\";\nimport { useHydrogen } from \"../../../hooks/useHydrogen\";\nimport { Content } from \"../../../atoms/content/Content\";\nimport CrossIC from \"../../../../../res/ic/cross.svg\";\nimport { ScenePreview } from \"../../components/scene-preview/ScenePreview\";\nimport { getHttpUrl } from \"../../../utils/avatar\";\nimport { CreateWorldForm } from \"./CreateWorldForm\";\nimport { overlayWorldAtom } from \"../../../state/overlayWorld\";\nimport { OverlayWindow, overlayWindowAtom } from \"../../../state/overlayWindow\";\n\nexport function CreateWorld() {\n  const { session } = useHydrogen(true);\n  const setOverlayWindow = useSetAtom(overlayWindowAtom);\n\n  const selectWorld = useSetAtom(overlayWorldAtom);\n  const [scenePreviewUrl, setScenePreviewUrl] = useState<string>();\n\n  const handleOnCreate = (roomId: string) => {\n    selectWorld(roomId);\n    setOverlayWindow({ type: OverlayWindow.None });\n  };\n\n  return (\n    <Window onRequestClose={() => setOverlayWindow({ type: OverlayWindow.None })}>\n      <Content\n        top={\n          <Header\n            left={\n              <HeaderTitle icon={<Icon className=\"shrink-0\" src={LanguageIC} color=\"surface\" />}>\n                Create World\n              </HeaderTitle>\n            }\n            right={\n              <IconButton\n                onClick={() => setOverlayWindow({ type: OverlayWindow.None })}\n                iconSrc={CrossIC}\n                label=\"Close\"\n              />\n            }\n          />\n        }\n      >\n        <WindowContent\n          children={\n            <CreateWorldForm\n              onSceneChange={(sceneUrl, previewUrl) => setScenePreviewUrl(previewUrl)}\n              onCreate={handleOnCreate}\n              onClose={() => setOverlayWindow({ type: OverlayWindow.None })}\n            />\n          }\n          aside={\n            <WindowAside className=\"flex\">\n              <ScenePreview\n                className=\"grow\"\n                src={getHttpUrl(session, scenePreviewUrl)}\n                fallback={\n                  <Text variant=\"b3\" color=\"surface-low\" weight=\"medium\">\n                    Your scene preview will appear here.\n                  </Text>\n                }\n              />\n            </WindowAside>\n          }\n        />\n      </Content>\n    </Window>\n  );\n}\n","import { ReactNode } from \"react\";\nimport classNames from \"classnames\";\n\nimport \"./ScenePreviewOverlay.css\";\n\ninterface ScenePreviewOverlayProps {\n  className?: string;\n  overlay?: ReactNode;\n  children: ReactNode;\n}\n\nexport function ScenePreviewOverlay({ className, overlay, children }: ScenePreviewOverlayProps) {\n  return (\n    <div className={classNames(\"ScenePreviewOverlay\", className)}>\n      {children}\n      {overlay && <div className=\"ScenePreviewOverlay__overlay flex flex-column\">{overlay}</div>}\n    </div>\n  );\n}\n","import { useCallback, useState } from \"react\";\nimport { Room, StateEvent } from \"@thirdroom/hydrogen-view-sdk\";\n\nimport { useStateEventKeyCallback } from \"./useStateEventKeyCallback\";\n\nexport function use3DAvatar(profileRoom: Room) {\n  const [avatarUrl, setAvatarUrl] = useState();\n  const [avatarPreviewUrl, setAvatarPreviewUrl] = useState();\n\n  const callback = useCallback((stateEvent?: StateEvent) => {\n    if (stateEvent) {\n      const { content } = stateEvent;\n      setAvatarUrl(content.avatar_url);\n      setAvatarPreviewUrl(content.avatar_preview_url);\n    } else {\n      setAvatarUrl(undefined);\n      setAvatarPreviewUrl(undefined);\n    }\n  }, []);\n\n  useStateEventKeyCallback(profileRoom, \"org.matrix.msc3815.world.profile\", \"\", callback);\n\n  return [avatarUrl, avatarPreviewUrl];\n}\n","import { useState, ChangeEvent, FormEvent, useMemo } from \"react\";\nimport { useAtomValue, useSetAtom } from \"jotai\";\n\nimport { Content } from \"../../../atoms/content/Content\";\nimport { WindowContent } from \"../../components/window/WindowContent\";\nimport { useHydrogen } from \"../../../hooks/useHydrogen\";\nimport { Scroll } from \"../../../atoms/scroll/Scroll\";\nimport { SettingTile } from \"../../components/setting-tile/SettingTile\";\nimport { Input } from \"../../../atoms/input/Input\";\nimport { Label } from \"../../../atoms/text/Label\";\nimport { ScenePreview } from \"../../components/scene-preview/ScenePreview\";\nimport { ScenePreviewOverlay } from \"../../components/scene-preview/ScenePreviewOverlay\";\nimport { Text } from \"../../../atoms/text/Text\";\nimport { WindowAside } from \"../../components/window/WindowAside\";\nimport { getAvatarHttpUrl, getHttpUrl } from \"../../../utils/avatar\";\nimport { Footer } from \"../../../atoms/footer/Footer\";\nimport { Button } from \"../../../atoms/button/Button\";\nimport { useDebounce } from \"../../../hooks/useDebounce\";\nimport { use3DAvatar } from \"../../../hooks/use3DAvatar\";\nimport { Edit3DAvatar } from \"./Edit3DAvatar\";\nimport \"./UserProfileOverview.css\";\nimport { AvatarPicker } from \"../../components/avatar-picker/AvatarPicker\";\nimport { useFilePicker } from \"../../../hooks/useFilePicker\";\nimport { uploadAttachment } from \"../../../utils/matrixUtils\";\nimport { Switch } from \"../../../atoms/button/Switch\";\nimport { useLocalStorage } from \"../../../hooks/useLocalStorage\";\nimport { SelectInput } from \"../../components/property-panel/SelectInput\";\nimport {\n  LOCAL_STORAGE_RENDER_QUALITY,\n  RenderQualityOptions,\n  RenderQualitySetting,\n  RenderQualityToSetting,\n} from \"../../../../engine/renderer/renderer.common\";\nimport { useMainThreadContext } from \"../../../hooks/useMainThread\";\nimport { OverlayWindow, overlayWindowAtom } from \"../../../state/overlayWindow\";\nimport { userProfileAtom } from \"../../../state/userProfile\";\n\nexport function UserProfileOverview() {\n  const { session, platform, profileRoom } = useHydrogen(true);\n  const { displayName, avatarUrl } = useAtomValue(userProfileAtom);\n  const setOverlayWindow = useSetAtom(overlayWindowAtom);\n\n  const [newDisplayName, setNewDisplayName] = useState(displayName);\n  const [immersiveAR, setImmersiveAR] = useLocalStorage(\"feature_immersiveAR\", false);\n  const [renderQuality, setRenderQuality] = useLocalStorage(LOCAL_STORAGE_RENDER_QUALITY, RenderQualitySetting.Auto);\n  const [sceneEditor, setSceneEditor] = useLocalStorage(\"feature_sceneEditor\", false);\n\n  const mainThread = useMainThreadContext();\n\n  const renderQualityOptions = useMemo(() => {\n    const currentQuality = RenderQualityOptions.find(\n      (option) => option.value === RenderQualityToSetting[mainThread.quality]\n    );\n    return [{ value: RenderQualitySetting.Auto, label: `Auto (${currentQuality?.label})` }, ...RenderQualityOptions];\n  }, [mainThread.quality]);\n\n  const [, tDAvatarPreviewUrl] = use3DAvatar(profileRoom);\n\n  let httpAvatarUrl = avatarUrl\n    ? getAvatarHttpUrl(avatarUrl, 150, platform, session.mediaRepository) ?? undefined\n    : undefined;\n\n  const {\n    fileData: avatarData,\n    pickFile: pickAvatar,\n    dropFile: dropAvatar,\n    resetUses: resetAvatarUses,\n  } = useFilePicker(platform, \"image/*\");\n  const isAvatarChanged = avatarData.dropUsed > 0 || avatarData.pickUsed > 0;\n  httpAvatarUrl = isAvatarChanged ? avatarData.url : httpAvatarUrl;\n\n  const debounceDisplayNameChange = useDebounce(setNewDisplayName, { wait: 200 });\n  const onDisplayNameChange = (evt: ChangeEvent<HTMLInputElement>) => {\n    const name = evt.currentTarget.value.trim();\n    debounceDisplayNameChange(name);\n  };\n\n  const handleSubmit = async (evt: FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n    setOverlayWindow({ type: OverlayWindow.None });\n    const name = evt.currentTarget.displayName.value.trim() as string;\n    if (name !== displayName && name !== \"\") {\n      session.hsApi.setProfileDisplayName(session.userId, name);\n    }\n    if (isAvatarChanged) {\n      let mxc = \"\";\n      if (typeof avatarData.blob === \"object\") {\n        mxc = (await uploadAttachment(session.hsApi, avatarData.blob)) ?? \"\";\n      }\n      session.hsApi.setProfileAvatarUrl(session.userId, mxc);\n    }\n  };\n  const handleReset = () => {\n    setNewDisplayName(displayName);\n    resetAvatarUses();\n    setOverlayWindow({ type: OverlayWindow.None });\n  };\n\n  return (\n    <WindowContent\n      children={\n        <Content\n          onSubmit={handleSubmit}\n          onReset={handleReset}\n          children={\n            <Scroll>\n              <div className=\"UserProfileOverview__content\">\n                <SettingTile label={<Label>Profile Picture</Label>}>\n                  <AvatarPicker url={httpAvatarUrl} onAvatarPick={pickAvatar} onAvatarDrop={dropAvatar} />\n                </SettingTile>\n                <div className=\"flex gap-lg\">\n                  <SettingTile className=\"grow basis-0\" label={<Label>Default Display Name</Label>}>\n                    <Input name=\"displayName\" onChange={onDisplayNameChange} defaultValue={displayName} required />\n                  </SettingTile>\n                  <span className=\"grow basis-0\" />\n                </div>\n                <div className=\"flex gap-lg\">\n                  <SettingTile className=\"grow basis-0\" label={<Label>Graphics Quality (REQUIRES REFRESH)</Label>}>\n                    <SelectInput options={renderQualityOptions} value={renderQuality} onChange={setRenderQuality} />\n                  </SettingTile>\n                  <span className=\"grow basis-0\" />\n                </div>\n                <div className=\"flex gap-lg\">\n                  <SettingTile\n                    className=\"grow basis-0\"\n                    label={<Label>Immersive AR (EXPERIMENTAL, REQUIRES REFRESH)</Label>}\n                  >\n                    <Switch checked={immersiveAR} onCheckedChange={setImmersiveAR} />\n                  </SettingTile>\n                  <span className=\"grow basis-0\" />\n                </div>\n                <div className=\"flex gap-lg\">\n                  <SettingTile\n                    className=\"grow basis-0\"\n                    label={<Label>Scene Editor (EXPERIMENTAL, REQUIRES REFRESH)</Label>}\n                  >\n                    <Switch checked={sceneEditor} onCheckedChange={setSceneEditor} />\n                  </SettingTile>\n                  <span className=\"grow basis-0\" />\n                </div>\n              </div>\n            </Scroll>\n          }\n          bottom={\n            (displayName !== newDisplayName || isAvatarChanged) && (\n              <Footer\n                left={\n                  <Button fill=\"outline\" type=\"reset\">\n                    Cancel\n                  </Button>\n                }\n                right={<Button type=\"submit\">Save</Button>}\n              />\n            )\n          }\n        />\n      }\n      aside={\n        <WindowAside className=\"flex\">\n          <ScenePreviewOverlay\n            className=\"grow flex\"\n            overlay={\n              /* DISABLED FEATURE */\n              false && (\n                <Content\n                  className=\"grow\"\n                  children=\" \"\n                  bottom={\n                    <Footer\n                      center={\n                        <Edit3DAvatar\n                          renderTrigger={(openModal) => (\n                            <Button onClick={openModal}>\n                              {tDAvatarPreviewUrl ? \"Edit 3D Avatar\" : \"Upload 3D Avatar\"}\n                            </Button>\n                          )}\n                        />\n                      }\n                    />\n                  }\n                />\n              )\n            }\n          >\n            <ScenePreview\n              className=\"grow\"\n              src={getHttpUrl(session, tDAvatarPreviewUrl)}\n              alt=\"3D Avatar preview\"\n              fallback={\n                /* DISABLED FEATURE */\n                false && (\n                  <Text variant=\"b3\" color=\"surface-low\" weight=\"medium\">\n                    Your 3D avatar preview will appear here.\n                  </Text>\n                )\n              }\n            />\n          </ScenePreviewOverlay>\n        </WindowAside>\n      }\n    />\n  );\n}\n","import { Text } from \"../../../atoms/text/Text\";\nimport { Content } from \"../../../atoms/content/Content\";\nimport { Scroll } from \"../../../atoms/scroll/Scroll\";\nimport { WindowContent } from \"../../components/window/WindowContent\";\nimport { WindowAside } from \"../../components/window/WindowAside\";\nimport { ScenePreview } from \"../../components/scene-preview/ScenePreview\";\n\nimport \"./UserProfileInventory.css\";\n\nexport function UserProfileInventory() {\n  return (\n    <WindowContent\n      children={\n        <Content\n          children={\n            <Scroll>\n              <div className=\"UserProfileInventory__content\" />\n            </Scroll>\n          }\n        />\n      }\n      aside={\n        <WindowAside className=\"flex\">\n          <ScenePreview\n            className=\"grow\"\n            fallback={\n              <Text variant=\"b3\" color=\"surface-low\" weight=\"medium\">\n                Your default avatar preview will appear here.\n              </Text>\n            }\n          />\n        </WindowAside>\n      }\n    />\n  );\n}\n","import { useState } from \"react\";\nimport { useAtomValue, useSetAtom } from \"jotai\";\n\nimport { Avatar } from \"../../../atoms/avatar/Avatar\";\nimport { IconButton } from \"../../../atoms/button/IconButton\";\nimport { Window } from \"../../components/window/Window\";\nimport { Header } from \"../../../atoms/header/Header\";\nimport { HeaderTitle } from \"../../../atoms/header/HeaderTitle\";\nimport { getAvatarHttpUrl, getIdentifierColorNumber } from \"../../../utils/avatar\";\nimport { UserProfileOverview } from \"./UserProfileOverview\";\nimport { UserProfileInventory } from \"./UserProfileInventory\";\nimport CrossIC from \"../../../../../res/ic/cross.svg\";\nimport { useHydrogen } from \"../../../hooks/useHydrogen\";\nimport { OverlayWindow, overlayWindowAtom } from \"../../../state/overlayWindow\";\nimport { userProfileAtom } from \"../../../state/userProfile\";\n\nenum UserProfileSegment {\n  Overview = \"Overview\",\n  Inventory = \"Inventory\",\n}\n\nexport function UserProfile() {\n  const { session, platform } = useHydrogen(true);\n  const setOverlayWindow = useSetAtom(overlayWindowAtom);\n  const { userId, displayName, avatarUrl } = useAtomValue(userProfileAtom);\n  const [selectedSegment] = useState(UserProfileSegment.Overview);\n\n  return (\n    <Window onRequestClose={() => setOverlayWindow({ type: OverlayWindow.None })}>\n      <Header\n        left={\n          <HeaderTitle\n            icon={\n              <Avatar\n                name={displayName}\n                bgColor={`var(--usercolor${getIdentifierColorNumber(userId)})`}\n                imageSrc={avatarUrl ? getAvatarHttpUrl(avatarUrl, 20, platform, session.mediaRepository) : undefined}\n                shape=\"circle\"\n                size=\"xxs\"\n              />\n            }\n          >\n            User Settings\n          </HeaderTitle>\n        }\n        right={\n          <IconButton onClick={() => setOverlayWindow({ type: OverlayWindow.None })} iconSrc={CrossIC} label=\"Close\" />\n        }\n      />\n      {selectedSegment === UserProfileSegment.Overview && <UserProfileOverview />}\n      {selectedSegment === UserProfileSegment.Inventory && <UserProfileInventory />}\n    </Window>\n  );\n}\n","import { ReactNode } from \"react\";\n\nimport \"./AvatarOutline.css\";\n\ninterface IAvatarOutline {\n  children: ReactNode;\n}\n\nexport function AvatarOutline({ children }: IAvatarOutline) {\n  return <div className=\"AvatarOutline\">{children}</div>;\n}\n","import { ReactNode, MouseEvent } from \"react\";\nimport classNames from \"classnames\";\nimport \"./RoomTile.css\";\n\ninterface IRoomTile {\n  avatar: ReactNode;\n  content: ReactNode;\n  options?: ReactNode;\n  isActive?: boolean;\n  isFocused?: boolean;\n  onClick: (event: MouseEvent<HTMLButtonElement>) => void;\n}\n\nexport function RoomTile({ avatar, content, options, isActive = false, isFocused = false, onClick }: IRoomTile) {\n  const roomTileClass = classNames(\n    \"RoomTile\",\n    { \"RoomTile--active\": isActive },\n    { \"RoomTile--focused\": isFocused },\n    \"flex items-center\"\n  );\n\n  return (\n    <div className={roomTileClass}>\n      <button onClick={onClick} className=\"grow flex items-center gap-sm\">\n        <div className=\"RoomTile__avatar shrink-0 flex\">{avatar}</div>\n        <div className=\"RoomTile__content grow\">{content}</div>\n      </button>\n      {options && <div className=\"RoomTile__options shrink-0\">{options}</div>}\n    </div>\n  );\n}\n","import classNames from \"classnames\";\n\nimport { Text } from \"../../../atoms/text/Text\";\n\ninterface IRoomTileTitle {\n  className?: string;\n  children: string;\n}\n\nexport function RoomTileTitle({ className, children }: IRoomTileTitle) {\n  return (\n    <Text className={classNames(\"truncate\", className)} weight=\"medium\">\n      {children}\n    </Text>\n  );\n}\n","import { ReactNode } from \"react\";\n\nimport \"./AvatarPile.css\";\n\ninterface IAvatarPile {\n  children: ReactNode;\n}\n\nexport function AvatarPile({ children }: IAvatarPile) {\n  return <div className=\"AvatarPile\">{children}</div>;\n}\n","import { GroupCall, Member, Platform, Session } from \"@thirdroom/hydrogen-view-sdk\";\n\nimport { Avatar } from \"../../../atoms/avatar/Avatar\";\nimport { AvatarPile } from \"../../../atoms/avatar/AvatarPile\";\nimport { Text } from \"../../../atoms/text/Text\";\nimport { Tooltip } from \"../../../atoms/tooltip/Tooltip\";\nimport { useObservableMap } from \"../../../hooks/useObservableMap\";\nimport { getIdentifierColorNumber } from \"../../../utils/avatar\";\nimport { getAvatarHttpUrl } from \"../../../utils/avatar\";\nimport { getMxIdUsername } from \"../../../utils/matrixUtils\";\n\ninterface WorldTileMembersProps {\n  session: Session;\n  platform: Platform;\n  groupCall: GroupCall;\n}\n\nconst maxAvatars = 5;\n\nexport function WorldTileMembers({ session, platform, groupCall }: WorldTileMembersProps) {\n  const allMembers = useObservableMap(() => groupCall.members, [groupCall]);\n  const members = [...allMembers.values()].reduce((filtered, member) => {\n    if (!filtered.has(member.userId)) filtered.set(member.userId, member);\n    return filtered;\n  }, new Map<string, Member>());\n\n  if (members.size === 0) return null;\n\n  return (\n    <AvatarPile>\n      {Array.from(members.values())\n        .slice(0, maxAvatars)\n        .map(({ member }, index) => (\n          <Tooltip content={member.name} side=\"top\" key={member.userId}>\n            <Avatar\n              style={index > 0 ? { marginLeft: \"calc(-1 * var(--av-xxs) / 4)\" } : {}}\n              name={member.displayName || getMxIdUsername(member.userId)}\n              bgColor={`var(--usercolor${getIdentifierColorNumber(member.userId)})`}\n              imageSrc={\n                member.avatarUrl ? getAvatarHttpUrl(member.avatarUrl, 20, platform, session.mediaRepository) : undefined\n              }\n              shape=\"circle\"\n              size=\"xxs\"\n            />\n          </Tooltip>\n        ))}\n      {members.size > maxAvatars ? <Text variant=\"b3\" type=\"span\">{`+${members.size - maxAvatars}`}</Text> : undefined}\n    </AvatarPile>\n  );\n}\n","import { useState } from \"react\";\nimport { Room, GroupCall, Platform, Session } from \"@thirdroom/hydrogen-view-sdk\";\nimport { useSetAtom } from \"jotai\";\n\nimport { Avatar } from \"../../../../atoms/avatar/Avatar\";\nimport { AvatarOutline } from \"../../../../atoms/avatar/AvatarOutline\";\nimport { IconButton } from \"../../../../atoms/button/IconButton\";\nimport { getAvatarHttpUrl, getIdentifierColorNumber } from \"../../../../utils/avatar\";\nimport { RoomTile } from \"../../../components/room-tile/RoomTile\";\nimport { RoomTileTitle } from \"../../../components/room-tile/RoomTileTitle\";\nimport { InviteDialog } from \"../../dialogs/InviteDialog\";\nimport { WorldTileMembers } from \"../WorldTileMembers\";\nimport MoreHorizontalIC from \"../../../../../../res/ic/more-horizontal.svg\";\nimport { DropdownMenu } from \"../../../../atoms/menu/DropdownMenu\";\nimport { DropdownMenuItem } from \"../../../../atoms/menu/DropdownMenuItem\";\nimport { Dialog } from \"../../../../atoms/dialog/Dialog\";\nimport { MemberListDialog } from \"../../dialogs/MemberListDialog\";\nimport { useDialog } from \"../../../../hooks/useDialog\";\nimport { OverlayWindow, overlayWindowAtom } from \"../../../../state/overlayWindow\";\nimport { activeChatsAtom } from \"../../../../state/overlayChat\";\nimport { usePowerLevels } from \"../../../../hooks/usePowerLevels\";\n\ninterface WorldSelectorProps {\n  isSelected: boolean;\n  onSelect: (roomId: string) => void;\n  room: Room;\n  groupCall?: GroupCall;\n  session: Session;\n  platform: Platform;\n}\n\nexport function WorldSelector({ isSelected, onSelect, room, groupCall, platform, session }: WorldSelectorProps) {\n  const { getPowerLevel, canSendStateEvent } = usePowerLevels(room);\n  const setOverlayWindow = useSetAtom(overlayWindowAtom);\n  const setActiveChat = useSetAtom(activeChatsAtom);\n  const [focused, setFocused] = useState(false);\n  const {\n    open: openMember,\n    setOpen: setMemberOpen,\n    openDialog: openMemberDialog,\n    closeDialog: closeMemberDialog,\n  } = useDialog(false);\n  const {\n    open: openInvite,\n    setOpen: setInviteOpen,\n    openDialog: openInviteDialog,\n    closeDialog: closeInviteDialog,\n  } = useDialog(false);\n\n  return (\n    <RoomTile\n      key={room.id}\n      isActive={isSelected}\n      isFocused={focused}\n      avatar={((room: Room) => {\n        const avatar = (\n          <Avatar\n            name={room.name || \"Empty room\"}\n            size=\"xl\"\n            shape=\"circle\"\n            className=\"shrink-0\"\n            bgColor={`var(--usercolor${getIdentifierColorNumber(room.id)})`}\n            imageSrc={room.avatarUrl ? getAvatarHttpUrl(room.avatarUrl, 50, platform, room.mediaRepository) : undefined}\n          />\n        );\n        if (isSelected) return <AvatarOutline>{avatar}</AvatarOutline>;\n        return avatar;\n      })(room)}\n      onClick={() => onSelect(room.id)}\n      content={\n        <>\n          <RoomTileTitle>{room.name || \"Empty room\"}</RoomTileTitle>\n          {groupCall && <WorldTileMembers session={session} platform={platform} groupCall={groupCall} />}\n        </>\n      }\n      options={\n        <>\n          <Dialog open={openMember} onOpenChange={setMemberOpen}>\n            <MemberListDialog room={room} requestClose={closeMemberDialog} />\n          </Dialog>\n          <Dialog open={openInvite} onOpenChange={setInviteOpen}>\n            <InviteDialog roomId={room.id} requestClose={closeInviteDialog} />\n          </Dialog>\n          <DropdownMenu\n            side=\"right\"\n            onOpenChange={setFocused}\n            content={\n              <>\n                <DropdownMenuItem onSelect={() => setActiveChat({ type: \"OPEN\", roomId: room.id })}>\n                  Chat\n                </DropdownMenuItem>\n                <DropdownMenuItem onSelect={openInviteDialog}>Invite</DropdownMenuItem>\n                <DropdownMenuItem onSelect={openMemberDialog}>Members</DropdownMenuItem>\n                {canSendStateEvent(undefined, getPowerLevel(session.userId)) && (\n                  <DropdownMenuItem\n                    onSelect={() =>\n                      setOverlayWindow({\n                        type: OverlayWindow.WorldSettings,\n                        roomId: room.id,\n                      })\n                    }\n                  >\n                    Settings\n                  </DropdownMenuItem>\n                )}\n                <DropdownMenuItem\n                  variant=\"danger\"\n                  onSelect={() => {\n                    if (confirm(\"Are you sure?\")) room.leave();\n                  }}\n                >\n                  Leave\n                </DropdownMenuItem>\n              </>\n            }\n          >\n            <IconButton label=\"Options\" iconSrc={MoreHorizontalIC} />\n          </DropdownMenu>\n        </>\n      }\n    />\n  );\n}\n","import { Platform, Room } from \"@thirdroom/hydrogen-view-sdk\";\nimport { useState } from \"react\";\n\nimport { Avatar } from \"../../../../atoms/avatar/Avatar\";\nimport { AvatarOutline } from \"../../../../atoms/avatar/AvatarOutline\";\nimport { IconButton } from \"../../../../atoms/button/IconButton\";\nimport { DropdownMenu } from \"../../../../atoms/menu/DropdownMenu\";\nimport { DropdownMenuItem } from \"../../../../atoms/menu/DropdownMenuItem\";\nimport { getAvatarHttpUrl, getIdentifierColorNumber } from \"../../../../utils/avatar\";\nimport { RoomTile } from \"../../../components/room-tile/RoomTile\";\nimport { RoomTileTitle } from \"../../../components/room-tile/RoomTileTitle\";\nimport { InviteDialog } from \"../../dialogs/InviteDialog\";\nimport MoreHorizontalIC from \"../../../../../../res/ic/more-horizontal.svg\";\nimport { Dialog } from \"../../../../atoms/dialog/Dialog\";\nimport { MemberListDialog } from \"../../dialogs/MemberListDialog\";\nimport { useDialog } from \"../../../../hooks/useDialog\";\nimport { NotificationBadge } from \"../../../../atoms/badge/NotificationBadge\";\nimport { useRecentMessage } from \"../../../../hooks/useRecentMessage\";\nimport { Text } from \"../../../../atoms/text/Text\";\n\ninterface RoomSelectorProps {\n  isSelected: boolean;\n  onSelect: (roomId: string) => void;\n  room: Room;\n  platform: Platform;\n}\n\nexport function RoomSelector({ isSelected, onSelect, room, platform }: RoomSelectorProps) {\n  const [focused, setFocused] = useState(false);\n  const eventEntry = useRecentMessage(room);\n\n  const {\n    open: openMember,\n    setOpen: setMemberOpen,\n    openDialog: openMemberDialog,\n    closeDialog: closeMemberDialog,\n  } = useDialog(false);\n  const {\n    open: openInvite,\n    setOpen: setInviteOpen,\n    openDialog: openInviteDialog,\n    closeDialog: closeInviteDialog,\n  } = useDialog(false);\n\n  return (\n    <RoomTile\n      key={room.id}\n      isActive={isSelected}\n      isFocused={focused}\n      avatar={((room: Room) => {\n        const avatar = (\n          <Avatar\n            name={room.name || \"Empty room\"}\n            size=\"lg\"\n            shape={room.isDirectMessage ? \"circle\" : \"rounded\"}\n            className=\"shrink-0\"\n            bgColor={`var(--usercolor${getIdentifierColorNumber(room.id)})`}\n            imageSrc={room.avatarUrl ? getAvatarHttpUrl(room.avatarUrl, 50, platform, room.mediaRepository) : undefined}\n          />\n        );\n        if (isSelected) return <AvatarOutline>{avatar}</AvatarOutline>;\n        return avatar;\n      })(room)}\n      onClick={() => onSelect(room.id)}\n      content={\n        <>\n          <div className=\"flex items-center gap-xxs\">\n            <RoomTileTitle className=\"grow\">{room.name || \"Empty room\"}</RoomTileTitle>\n            {(room.isUnread || room.notificationCount > 0) && (\n              <NotificationBadge content={room.notificationCount > 0 ? room.notificationCount : undefined} />\n            )}\n          </div>\n          {eventEntry?.content?.body && (\n            <Text variant=\"b3\" className=\"truncate\">\n              {`${eventEntry.displayName || eventEntry.sender}: ${eventEntry.content.body}`}\n            </Text>\n          )}\n        </>\n      }\n      options={\n        <>\n          <Dialog open={openMember} onOpenChange={setMemberOpen}>\n            <MemberListDialog room={room} requestClose={closeMemberDialog} />\n          </Dialog>\n          <Dialog open={openInvite} onOpenChange={setInviteOpen}>\n            <InviteDialog roomId={room.id} requestClose={closeInviteDialog} />\n          </Dialog>\n          <DropdownMenu\n            side=\"right\"\n            onOpenChange={setFocused}\n            content={\n              <>\n                <DropdownMenuItem onSelect={openInviteDialog}>Invite</DropdownMenuItem>\n                <DropdownMenuItem onSelect={openMemberDialog}>Members</DropdownMenuItem>\n                <DropdownMenuItem\n                  variant=\"danger\"\n                  onSelect={() => {\n                    if (confirm(\"Are you sure?\")) room.leave();\n                  }}\n                >\n                  Leave\n                </DropdownMenuItem>\n              </>\n            }\n          >\n            <IconButton label=\"Options\" iconSrc={MoreHorizontalIC} />\n          </DropdownMenu>\n        </>\n      }\n    />\n  );\n}\n","import { CSSProperties, ReactNode } from \"react\";\nimport classNames from \"classnames\";\n\nimport { Text } from \"../../../atoms/text/Text\";\nimport \"./EmptyState.css\";\n\ninterface EmptyStateProps {\n  className?: string;\n  style?: CSSProperties;\n  heading: string | ReactNode;\n  text: string | ReactNode;\n  actions?: ReactNode;\n}\n\nexport function EmptyState({ className, style, heading, text, actions }: EmptyStateProps) {\n  return (\n    <div\n      style={style}\n      className={classNames(\"EmptyState text-center flex flex-column justify-center items-center gap-md\", className)}\n    >\n      <div className=\"flex flex-column gap-xs\">\n        <Text weight=\"semi-bold\">{heading}</Text>\n        <Text variant=\"b3\">{text}</Text>\n      </div>\n      {actions && <div className=\"flex gap-xs\">{actions}</div>}\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport { GroupCall } from \"@thirdroom/hydrogen-view-sdk\";\nimport { useAtom, useAtomValue, useSetAtom } from \"jotai\";\n\nimport { useHydrogen } from \"../../../hooks/useHydrogen\";\nimport { Category } from \"../../components/category/Category\";\nimport { CategoryHeader } from \"../../components/category/CategoryHeader\";\nimport { useRoomsOfType, RoomTypes } from \"../../../hooks/useRoomsOfType\";\nimport { WorldSelector } from \"./selector/WorldSelector\";\nimport { RoomSelector } from \"./selector/RoomSelector\";\nimport { Icon } from \"../../../atoms/icon/Icon\";\nimport ChevronRightIC from \"../../../../../res/ic/chevron-right.svg\";\nimport ChevronBottomIC from \"../../../../../res/ic/chevron-bottom.svg\";\nimport { EmptyState } from \"../../components/empty-state/EmptyState\";\nimport { Button } from \"../../../atoms/button/Button\";\nimport { activeChatsAtom, openedChatAtom } from \"../../../state/overlayChat\";\nimport { overlayWorldAtom } from \"../../../state/overlayWorld\";\nimport { OverlayWindow, overlayWindowAtom } from \"../../../state/overlayWindow\";\n\ninterface RoomListHomeProps {\n  groupCalls: Map<string, GroupCall>;\n}\n\nexport function RoomListHome({ groupCalls }: RoomListHomeProps) {\n  const { session, platform } = useHydrogen(true);\n\n  const [worlds] = useRoomsOfType(session, RoomTypes.World);\n  const [rooms] = useRoomsOfType(session, RoomTypes.Room);\n\n  const [worldCat, setWorldCat] = useState(true);\n  const [roomCat, setRoomCat] = useState(true);\n\n  const openedChatId = useAtomValue(openedChatAtom);\n  const setActiveChat = useSetAtom(activeChatsAtom);\n  const [selectedWorldId, selectWorld] = useAtom(overlayWorldAtom);\n  const setOverlayWindow = useSetAtom(overlayWindowAtom);\n\n  if (worlds.length === 0 && rooms.length === 0) {\n    return (\n      <EmptyState\n        style={{ minHeight: \"400px\" }}\n        heading=\"No Worlds\"\n        text=\"You haven’t joined any worlds yet.\"\n        actions={<Button onClick={() => setOverlayWindow({ type: OverlayWindow.CreateWorld })}>Create World</Button>}\n      />\n    );\n  }\n\n  return (\n    <>\n      {worlds.length > 0 && (\n        <Category\n          header={\n            <CategoryHeader\n              title=\"Worlds\"\n              after={<Icon src={worldCat ? ChevronBottomIC : ChevronRightIC} size=\"sm\" color=\"surface\" />}\n              onClick={() => setWorldCat(!worldCat)}\n            />\n          }\n        >\n          {worldCat &&\n            worlds.map((room) => {\n              const groupCall = groupCalls.get(room.id);\n              return (\n                <WorldSelector\n                  key={room.id}\n                  isSelected={selectedWorldId === room.id}\n                  onSelect={selectWorld}\n                  room={room}\n                  groupCall={groupCall}\n                  session={session}\n                  platform={platform}\n                />\n              );\n            })}\n        </Category>\n      )}\n      {rooms.length > 0 && (\n        <Category\n          header={\n            <CategoryHeader\n              title=\"Rooms\"\n              after={<Icon src={roomCat ? ChevronBottomIC : ChevronRightIC} size=\"sm\" color=\"surface\" />}\n              onClick={() => setRoomCat(!roomCat)}\n            />\n          }\n        >\n          {roomCat &&\n            rooms.map((room) => (\n              <RoomSelector\n                key={room.id}\n                isSelected={room.id === openedChatId}\n                onSelect={(roomId) => setActiveChat({ type: \"OPEN\", roomId })}\n                room={room}\n                platform={platform}\n              />\n            ))}\n        </Category>\n      )}\n    </>\n  );\n}\n","import { useAtomValue, useSetAtom } from \"jotai\";\n\nimport { Button } from \"../../../atoms/button/Button\";\nimport { useHydrogen } from \"../../../hooks/useHydrogen\";\nimport { useRoomsOfType, RoomTypes } from \"../../../hooks/useRoomsOfType\";\nimport { EmptyState } from \"../../components/empty-state/EmptyState\";\nimport { DmDialog } from \"../dialogs/DmDialog\";\nimport { Dialog } from \"../../../atoms/dialog/Dialog\";\nimport { RoomSelector } from \"./selector/RoomSelector\";\nimport { useDialog } from \"../../../hooks/useDialog\";\nimport { activeChatsAtom, openedChatAtom } from \"../../../state/overlayChat\";\n\nexport function RoomListFriends() {\n  const { session, platform } = useHydrogen(true);\n\n  const [rooms] = useRoomsOfType(session, RoomTypes.Direct);\n  const { open, setOpen, openDialog, closeDialog } = useDialog(false);\n  const openedChatId = useAtomValue(openedChatAtom);\n  const setActiveChat = useSetAtom(activeChatsAtom);\n\n  if (rooms.length === 0) {\n    return (\n      <EmptyState\n        style={{ minHeight: \"400px\" }}\n        heading=\"No Friends\"\n        text=\"You don't have any friends yet.\"\n        actions={\n          <>\n            <Dialog open={open} onOpenChange={setOpen}>\n              <DmDialog requestClose={closeDialog} />\n            </Dialog>\n            <Button onClick={openDialog}>Direct Message</Button>\n          </>\n        }\n      />\n    );\n  }\n\n  return (\n    <div>\n      {rooms.map((room) => (\n        <RoomSelector\n          key={room.id}\n          isSelected={room.id === openedChatId}\n          onSelect={(roomId) => setActiveChat({ type: \"OPEN\", roomId })}\n          room={room}\n          platform={platform}\n        />\n      ))}\n    </div>\n  );\n}\n","import { ChangeEvent, FormEvent, useEffect, useState, useRef } from \"react\";\nimport { Room } from \"@thirdroom/hydrogen-view-sdk\";\nimport { useSetAtom } from \"jotai\";\n\nimport { IconButton } from \"../../../atoms/button/IconButton\";\nimport { Content } from \"../../../atoms/content/Content\";\nimport { Header } from \"../../../atoms/header/Header\";\nimport { HeaderTitle } from \"../../../atoms/header/HeaderTitle\";\nimport { Window } from \"../../components/window/Window\";\nimport CrossIC from \"../../../../../res/ic/cross.svg\";\nimport { WindowContent } from \"../../components/window/WindowContent\";\nimport { WindowAside } from \"../../components/window/WindowAside\";\nimport { ScenePreview } from \"../../components/scene-preview/ScenePreview\";\nimport { Scroll } from \"../../../atoms/scroll/Scroll\";\nimport { Footer } from \"../../../atoms/footer/Footer\";\nimport { Button } from \"../../../atoms/button/Button\";\nimport { Text } from \"../../../atoms/text/Text\";\nimport { SettingTile } from \"../../components/setting-tile/SettingTile\";\nimport { Label } from \"../../../atoms/text/Label\";\nimport { AvatarPicker } from \"../../components/avatar-picker/AvatarPicker\";\nimport { useFilePicker } from \"../../../hooks/useFilePicker\";\nimport { useHydrogen } from \"../../../hooks/useHydrogen\";\nimport \"./WorldSettings.css\";\nimport { getAvatarHttpUrl, getHttpUrl } from \"../../../utils/avatar\";\nimport { Input } from \"../../../atoms/input/Input\";\nimport { Switch } from \"../../../atoms/button/Switch\";\nimport UploadIC from \"../../../../../res/ic/upload.svg\";\nimport { Icon } from \"../../../atoms/icon/Icon\";\nimport { AutoFileUpload, AutoUploadInfo } from \"../../components/AutoFileUpload\";\nimport { useIsMounted } from \"../../../hooks/useIsMounted\";\nimport { uploadAttachment } from \"../../../utils/matrixUtils\";\nimport { MAX_OBJECT_CAP } from \"../../../../engine/config.common\";\nimport { OverlayWindow, overlayWindowAtom } from \"../../../state/overlayWindow\";\nimport { usePowerLevels } from \"../../../hooks/usePowerLevels\";\nimport { EmptyState } from \"../../components/empty-state/EmptyState\";\n\ninterface WorldSettingsProps {\n  room: Room;\n}\n\nexport function WorldSettings({ room }: WorldSettingsProps) {\n  const { session, platform } = useHydrogen(true);\n\n  const setOverlayWindow = useSetAtom(overlayWindowAtom);\n  const { getPowerLevel, canSendStateEvent } = usePowerLevels(room);\n  const myPowerLevel = getPowerLevel(session.userId);\n  const isMounted = useIsMounted();\n\n  let httpAvatarUrl = room?.avatarUrl\n    ? getAvatarHttpUrl(room.avatarUrl, 150, platform, session.mediaRepository) ?? undefined\n    : undefined;\n  const { fileData: avatarData, pickFile: pickAvatar, dropFile: dropAvatar } = useFilePicker(platform, \"image/*\");\n  const isAvatarChanged = (httpAvatarUrl || avatarData.blob) && (avatarData.dropUsed > 0 || avatarData.pickUsed > 0);\n  httpAvatarUrl = isAvatarChanged ? avatarData.url : httpAvatarUrl;\n\n  const roomName = room?.name ?? \"Empty Name\";\n  const [newName, setNewName] = useState(roomName);\n\n  const isPrivateRef = useRef(true);\n  const [isPrivate, setIsPrivate] = useState(true);\n\n  const [worldInfo, setWorldInfo] = useState<{ sceneUrl?: string; previewUrl?: string; maxObjectCap?: number }>({});\n\n  const [sceneInfo, setSceneInfo] = useState<AutoUploadInfo>({});\n  const [previewInfo, setPreviewInfo] = useState<AutoUploadInfo>({});\n  const [scriptInfo, setScriptInfo] = useState<AutoUploadInfo>({});\n\n  useEffect(() => {\n    if (room) {\n      room.getStateEvent(\"m.room.join_rules\").then((event) => {\n        if (!isMounted()) return;\n        isPrivateRef.current = event?.event?.content.join_rule !== \"public\";\n        setIsPrivate(event?.event?.content.join_rule !== \"public\");\n      });\n      Promise.all([room.getStateEvent(\"m.world\"), room.getStateEvent(\"org.matrix.msc3815.world\")])\n        .then(([oldEvent, event]) => {\n          if (!isMounted()) return;\n          const oldContent = oldEvent?.event?.content;\n          const content = event?.event?.content;\n          setWorldInfo({\n            sceneUrl: content?.scene_url || oldContent?.scene_url,\n            previewUrl: content?.scene_preview_url || oldContent?.scene_preview_url,\n          });\n          const fetchedMaxObjectCap = content?.max_member_object_cap ?? MAX_OBJECT_CAP;\n          maxObjectCapRef.current = fetchedMaxObjectCap;\n          setMaxObjectCap(fetchedMaxObjectCap);\n        })\n        .catch(console.error);\n    }\n  }, [room, isMounted]);\n\n  const handleNameChange = (evt: ChangeEvent<HTMLInputElement>) => setNewName(evt.target.value.trim());\n\n  const maxObjectCapRef = useRef(MAX_OBJECT_CAP);\n  const [maxObjectCap, setMaxObjectCap] = useState(MAX_OBJECT_CAP);\n  const handleMaxObjectCapChange = (evt: ChangeEvent<HTMLInputElement>) =>\n    setMaxObjectCap(parseInt(evt.target.value) || 0);\n\n  const handleSubmit = (evt: FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n    if (!room) return;\n    if (isAvatarChanged) {\n      (async () => {\n        let mxc = \"\";\n        if (avatarData.blob) {\n          mxc = (await uploadAttachment(session.hsApi, avatarData.blob)) ?? \"\";\n        }\n        session.hsApi.sendState(room.id, \"m.room.avatar\", \"\", {\n          url: mxc,\n        });\n      })();\n    }\n    if (isPrivateRef.current !== isPrivate) {\n      session.hsApi.sendState(room.id, \"m.room.join_rules\", \"\", {\n        join_rule: isPrivate ? \"invite\" : \"public\",\n      });\n    }\n    if (roomName !== newName && newName.trim() !== \"\") {\n      session.hsApi.sendState(room.id, \"m.room.name\", \"\", {\n        name: newName,\n      });\n    }\n\n    if (sceneInfo.mxc || previewInfo.mxc || maxObjectCap !== maxObjectCapRef.current || scriptInfo.mxc) {\n      Promise.all([room.getStateEvent(\"m.world\"), room.getStateEvent(\"org.matrix.msc3815.world\")]).then(\n        ([oldEvent, event]) => {\n          const oldContent = oldEvent?.event?.content;\n          const content = event?.event?.content;\n          const existingScriptUrl = event?.event.content.script_url;\n          session.hsApi.sendState(room.id, \"org.matrix.msc3815.world\", \"\", {\n            max_member_object_cap: maxObjectCap,\n            scene_url: sceneInfo.mxc ?? (content?.scene_url || oldContent?.scene_url),\n            scene_preview_url: previewInfo.mxc ?? (content?.scene_preview_url || oldContent?.scene_preview_url),\n            script_url: scriptInfo.mxc || existingScriptUrl,\n          });\n        }\n      );\n    }\n\n    setOverlayWindow({ type: OverlayWindow.None });\n  };\n\n  return (\n    <Window onRequestClose={() => setOverlayWindow({ type: OverlayWindow.None })}>\n      <Content\n        onSubmit={handleSubmit}\n        top={\n          <Header\n            left={<HeaderTitle>World Settings</HeaderTitle>}\n            right={\n              <IconButton\n                onClick={() => setOverlayWindow({ type: OverlayWindow.None })}\n                label=\"Close\"\n                iconSrc={CrossIC}\n              />\n            }\n          />\n        }\n      >\n        <WindowContent\n          children={\n            <Content\n              children={\n                <Scroll>\n                  <div className=\"WorldSettings__content\">\n                    {canSendStateEvent(\"m.room.avatar\", myPowerLevel) && (\n                      <div className=\"flex gap-lg\">\n                        <SettingTile label={<Label>World Avatar</Label>}>\n                          <AvatarPicker url={httpAvatarUrl} onAvatarPick={pickAvatar} onAvatarDrop={dropAvatar} />\n                        </SettingTile>\n                      </div>\n                    )}\n                    {(canSendStateEvent(\"m.room.name\", myPowerLevel) ||\n                      canSendStateEvent(\"m.room.join_rules\", myPowerLevel)) && (\n                      <div className=\"flex gap-lg\">\n                        {canSendStateEvent(\"m.room.name\", myPowerLevel) && (\n                          <SettingTile className=\"grow basis-0\" label={<Label>World Name *</Label>}>\n                            <Input onChange={handleNameChange} defaultValue={roomName} required />\n                          </SettingTile>\n                        )}\n                        {canSendStateEvent(\"m.room.join_rules\", myPowerLevel) && (\n                          <SettingTile className=\"grow basis-0\" label={<Label>Private</Label>}>\n                            <Switch checked={isPrivate} onCheckedChange={setIsPrivate} />\n                          </SettingTile>\n                        )}\n                      </div>\n                    )}\n                    {canSendStateEvent(\"org.matrix.msc3815.world\", myPowerLevel) && (\n                      <div className=\"flex gap-lg\">\n                        <SettingTile className=\"grow basis-0\" label={<Label>Scene</Label>}>\n                          <AutoFileUpload\n                            mimeType=\".glb\"\n                            onUploadInfo={setSceneInfo}\n                            renderButton={(pickFile) => (\n                              <Button fill=\"outline\" onClick={pickFile}>\n                                <Icon src={UploadIC} color=\"primary\" />\n                                Change Scene\n                              </Button>\n                            )}\n                          />\n                        </SettingTile>\n                        <SettingTile className=\"grow basis-0\" label={<Label>Scene Preview</Label>}>\n                          <AutoFileUpload\n                            mimeType=\"image/*\"\n                            onUploadInfo={setPreviewInfo}\n                            renderButton={(pickFile) => (\n                              <Button fill=\"outline\" onClick={pickFile}>\n                                <Icon src={UploadIC} color=\"primary\" />\n                                Change Preview\n                              </Button>\n                            )}\n                          />\n                        </SettingTile>\n                      </div>\n                    )}\n                    {canSendStateEvent(\"org.matrix.msc3815.world\", myPowerLevel) && (\n                      <div className=\"flex gap-lg\">\n                        <SettingTile className=\"grow basis-0\" label={<Label>Max Spawned Objects Per User</Label>}>\n                          <Input type=\"number\" value={maxObjectCap} onChange={handleMaxObjectCapChange} required />\n                        </SettingTile>\n                      </div>\n                    )}\n                    {canSendStateEvent(\"org.matrix.msc3815.world\", myPowerLevel) && (\n                      <div className=\"flex gap-lg\">\n                        <SettingTile className=\"grow basis-0\" label={<Label>Script (EXPERIMENTAL)</Label>}>\n                          <AutoFileUpload\n                            mimeType=\".js,.wasm\"\n                            onUploadInfo={setScriptInfo}\n                            renderButton={(pickFile) => (\n                              <Button fill=\"outline\" onClick={pickFile}>\n                                <Icon src={UploadIC} color=\"primary\" />\n                                Change Script\n                              </Button>\n                            )}\n                          />\n                        </SettingTile>\n                      </div>\n                    )}\n                    <EmptyState\n                      className=\"WorldSettings__empty-state\"\n                      heading=\"Permission Required\"\n                      text=\"You do not have sufficient permissions to change any of the settings.\"\n                    />\n                  </div>\n                </Scroll>\n              }\n              bottom={\n                <Footer\n                  left={\n                    <Button size=\"lg\" fill=\"outline\" onClick={() => setOverlayWindow({ type: OverlayWindow.None })}>\n                      Cancel\n                    </Button>\n                  }\n                  right={\n                    <Button\n                      size=\"lg\"\n                      type=\"submit\"\n                      disabled={\n                        !isAvatarChanged &&\n                        isPrivateRef.current === isPrivate &&\n                        roomName === newName &&\n                        !sceneInfo.mxc &&\n                        !previewInfo.mxc &&\n                        maxObjectCap === maxObjectCapRef.current &&\n                        !scriptInfo.mxc\n                      }\n                    >\n                      Save\n                    </Button>\n                  }\n                />\n              }\n            />\n          }\n          aside={\n            <WindowAside className=\"flex\">\n              <ScenePreview\n                className=\"grow\"\n                src={previewInfo.url ?? getHttpUrl(session, worldInfo.previewUrl)}\n                alt=\"Scene Preview\"\n                fallback={\n                  <Text variant=\"b3\" color=\"surface-low\" weight=\"medium\">\n                    Your uploaded scene preview will appear here.\n                  </Text>\n                }\n              />\n            </WindowAside>\n          }\n        />\n      </Content>\n    </Window>\n  );\n}\n","import { useState } from \"react\";\nimport { Invite, Session } from \"@thirdroom/hydrogen-view-sdk\";\n\nimport { useObservableList } from \"./useObservableList\";\nimport { roomTypeFilter, RoomTypes } from \"./useRoomsOfType\";\n\nfunction roomListComparator(a: Invite, b: Invite) {\n  return b.timestamp - a.timestamp;\n}\n\nexport function useInvitesOfType(session: Session, initialType: RoomTypes): [Invite[], (type: RoomTypes) => void] {\n  const [type, setType] = useState(initialType);\n\n  return [\n    useObservableList(() => {\n      return session.invites.filterValues((invite) => roomTypeFilter(invite, type)).sortValues(roomListComparator);\n    }, [session.invites, type]),\n    setType,\n  ];\n}\n","import { Invite, Room } from \"@thirdroom/hydrogen-view-sdk\";\nimport { useAtom, useAtomValue, useSetAtom } from \"jotai\";\n\nimport { useHydrogen } from \"../../../hooks/useHydrogen\";\nimport { getIdentifierColorNumber, getAvatarHttpUrl } from \"../../../utils/avatar\";\nimport { Avatar } from \"../../../atoms/avatar/Avatar\";\nimport { AvatarOutline } from \"../../../atoms/avatar/AvatarOutline\";\nimport { RoomTile } from \"../../components/room-tile/RoomTile\";\nimport { RoomTileTitle } from \"../../components/room-tile/RoomTileTitle\";\nimport { Category } from \"../../components/category/Category\";\nimport { CategoryHeader } from \"../../components/category/CategoryHeader\";\nimport { RoomTypes } from \"../../../hooks/useRoomsOfType\";\nimport { useInvitesOfType } from \"../../../hooks/useInvitesOfType\";\nimport { EmptyState } from \"../../components/empty-state/EmptyState\";\nimport { activeChatsAtom, openedChatAtom } from \"../../../state/overlayChat\";\nimport { overlayWorldAtom } from \"../../../state/overlayWorld\";\n\nexport function RoomListNotifications() {\n  const { session, platform } = useHydrogen(true);\n  const [worldInvites] = useInvitesOfType(session, RoomTypes.World);\n  const [roomInvites] = useInvitesOfType(session, RoomTypes.Room);\n  const [dmInvites] = useInvitesOfType(session, RoomTypes.Direct);\n\n  const openedChatId = useAtomValue(openedChatAtom);\n  const setActiveChat = useSetAtom(activeChatsAtom);\n  const [selectedWorldId, selectWorld] = useAtom(overlayWorldAtom);\n\n  const renderAvatar = (room: Room | Invite, isWorld: boolean) => {\n    const avatar = (\n      <Avatar\n        name={room.name || \"Empty room\"}\n        size={isWorld ? \"xl\" : \"lg\"}\n        shape={isWorld || room.isDirectMessage ? \"circle\" : \"rounded\"}\n        className=\"shrink-0\"\n        bgColor={`var(--usercolor${getIdentifierColorNumber(room.id)})`}\n        imageSrc={room.avatarUrl ? getAvatarHttpUrl(room.avatarUrl, 50, platform, room.mediaRepository) : undefined}\n      />\n    );\n    if (openedChatId === room.id || selectedWorldId === room.id) return <AvatarOutline>{avatar}</AvatarOutline>;\n    return avatar;\n  };\n\n  if (worldInvites.length === 0 && roomInvites.length === 0 && dmInvites.length === 0) {\n    return (\n      <EmptyState\n        style={{ minHeight: \"400px\" }}\n        heading=\"No Notification\"\n        text=\"You don't have any notifications yet.\"\n      />\n    );\n  }\n\n  return (\n    <>\n      {worldInvites.length > 0 && (\n        <Category header={<CategoryHeader title=\"Invites - Worlds\" />}>\n          {worldInvites.map((invite) => (\n            <RoomTile\n              key={invite.id}\n              avatar={renderAvatar(invite, true)}\n              content={<RoomTileTitle>{invite.name || \"Empty room\"}</RoomTileTitle>}\n              onClick={() => selectWorld(invite.id)}\n            />\n          ))}\n        </Category>\n      )}\n      {roomInvites.length > 0 && (\n        <Category header={<CategoryHeader title=\"Invites - Rooms\" />}>\n          {roomInvites.map((invite) => (\n            <RoomTile\n              key={invite.id}\n              avatar={renderAvatar(invite, false)}\n              content={<RoomTileTitle>{invite.name || \"Empty room\"}</RoomTileTitle>}\n              onClick={() => setActiveChat({ type: \"OPEN\", roomId: invite.id })}\n            />\n          ))}\n        </Category>\n      )}\n      {dmInvites.length > 0 && (\n        <Category header={<CategoryHeader title=\"Invites - Direct Messages\" />}>\n          {dmInvites.map((invite) => (\n            <RoomTile\n              key={invite.id}\n              avatar={renderAvatar(invite, false)}\n              content={<RoomTileTitle>{invite.name || \"Empty room\"}</RoomTileTitle>}\n              onClick={() => setActiveChat({ type: \"OPEN\", roomId: invite.id })}\n            />\n          ))}\n        </Category>\n      )}\n    </>\n  );\n}\n","import { ReactNode } from \"react\";\nimport \"./NowPlaying.css\";\n\ninterface INowPlaying {\n  avatar: ReactNode;\n  content: ReactNode;\n  options?: ReactNode;\n  leftControls: ReactNode;\n  rightControls?: ReactNode;\n}\n\nexport function NowPlaying({ avatar, content, options, leftControls, rightControls }: INowPlaying) {\n  return (\n    <div className=\"NowPlaying\">\n      <div className=\"NowPlaying__main flex items-center\">\n        <div className=\"shrink-0\">{avatar}</div>\n        <div className=\"grow\">{content}</div>\n        {options && <div className=\"shrink-0\">{options}</div>}\n      </div>\n      <div className=\"NowPlaying__controls flex\">\n        <div className=\"grow flex\">{leftControls}</div>\n        {rightControls && <div className=\"flex\">{rightControls}</div>}\n      </div>\n    </div>\n  );\n}\n","export default \"__VITE_ASSET__91f5d871__\"","import { Text } from \"../../../atoms/text/Text\";\nimport { Icon } from \"../../../atoms/icon/Icon\";\nimport NetworkIC from \"../../../../../res/ic/network.svg\";\n\ninterface INowPlayingStatus {\n  status: \"connected\" | \"connecting\" | \"disconnected\";\n  children: string;\n}\n\nexport function NowPlayingStatus({ status, children }: INowPlayingStatus) {\n  const color = status === \"connected\" ? \"secondary\" : \"danger\";\n\n  return (\n    <div className=\"NowPlayingStatus flex items-baseline\" style={{ gap: \"var(--sp-xxs)\" }}>\n      <Icon color={color} size=\"xs\" src={NetworkIC} />\n      <Text color={color} className=\"truncate\" variant=\"b3\" weight=\"bold\">\n        {children}\n      </Text>\n    </div>\n  );\n}\n","import { Text } from \"../../../atoms/text/Text\";\n\ninterface INowPlayingTitle {\n  children: string;\n}\n\nexport function NowPlayingTitle({ children }: INowPlayingTitle) {\n  return <Text className=\"truncate\">{children}</Text>;\n}\n","import { MouseEventHandler, useState } from \"react\";\nimport { GroupCall, Platform, Room } from \"@thirdroom/hydrogen-view-sdk\";\nimport { useAtomValue, useSetAtom } from \"jotai\";\n\nimport { Avatar } from \"../../../atoms/avatar/Avatar\";\nimport { AvatarOutline } from \"../../../atoms/avatar/AvatarOutline\";\nimport { IconButton } from \"../../../atoms/button/IconButton\";\nimport { Dialog } from \"../../../atoms/dialog/Dialog\";\nimport { DropdownMenu } from \"../../../atoms/menu/DropdownMenu\";\nimport { DropdownMenuItem } from \"../../../atoms/menu/DropdownMenuItem\";\nimport { Tooltip } from \"../../../atoms/tooltip/Tooltip\";\nimport { getAvatarHttpUrl, getIdentifierColorNumber } from \"../../../utils/avatar\";\nimport { NowPlaying } from \"../../components/now-playing/NowPlaying\";\nimport { NowPlayingStatus } from \"../../components/now-playing/NowPlayingStatus\";\nimport { NowPlayingTitle } from \"../../components/now-playing/NowPlayingTitle\";\nimport { MemberListDialog } from \"../dialogs/MemberListDialog\";\nimport MicIC from \"../../../../../res/ic/mic.svg\";\nimport MicOffIC from \"../../../../../res/ic/mic-off.svg\";\nimport CallCrossIC from \"../../../../../res/ic/call-cross.svg\";\nimport MoreHorizontalIC from \"../../../../../res/ic/more-horizontal.svg\";\nimport MessageIC from \"../../../../../res/ic/message.svg\";\nimport { InviteDialog } from \"../dialogs/InviteDialog\";\nimport { activeChatsAtom, openedChatAtom } from \"../../../state/overlayChat\";\nimport { manageMuteRequest, MicExceptionDialog, useMuteButton } from \"../../components/MuteButtonProvider\";\nimport { OverlayWindow, overlayWindowAtom } from \"../../../state/overlayWindow\";\nimport { usePowerLevels } from \"../../../hooks/usePowerLevels\";\nimport { useHydrogen } from \"../../../hooks/useHydrogen\";\n\ninterface NowPlayingWorldProps {\n  world: Room;\n  activeCall: GroupCall;\n  onExitWorld: MouseEventHandler<HTMLButtonElement>;\n  platform: Platform;\n}\n\nexport function NowPlayingWorld({ world, activeCall, onExitWorld, platform }: NowPlayingWorldProps) {\n  const { session } = useHydrogen(true);\n  const setActiveChat = useSetAtom(activeChatsAtom);\n  const openedChatId = useAtomValue(openedChatAtom);\n  const setOverlayWindow = useSetAtom(overlayWindowAtom);\n  const { getPowerLevel, canSendStateEvent } = usePowerLevels(world);\n\n  const [isMemberDialog, setIsMemberDialog] = useState(false);\n  const [inviteDialog, setInviteDialog] = useState(false);\n  const { mute, requestStream, handleMute, micException, setMicException } = useMuteButton(activeCall);\n\n  return (\n    <NowPlaying\n      avatar={\n        <AvatarOutline>\n          <Avatar\n            shape=\"circle\"\n            size=\"lg\"\n            name={world.name || \"Unnamed World\"}\n            bgColor={`var(--usercolor${getIdentifierColorNumber(world.id)})`}\n            imageSrc={world.avatarUrl && getAvatarHttpUrl(world.avatarUrl, 70, platform, world.mediaRepository)}\n          />\n        </AvatarOutline>\n      }\n      content={\n        <>\n          <NowPlayingStatus status=\"connected\">Connected</NowPlayingStatus>\n          <NowPlayingTitle>{world.name || \"Unnamed World\"}</NowPlayingTitle>\n        </>\n      }\n      options={\n        <Tooltip side=\"top\" content={openedChatId === world.id ? \"Minimize Chat\" : \"Open Chat\"}>\n          <IconButton\n            onClick={() => setActiveChat({ type: openedChatId === world.id ? \"MINIMIZE\" : \"OPEN\", roomId: world.id })}\n            variant=\"surface-low\"\n            label=\"Options\"\n            iconSrc={MessageIC}\n          />\n        </Tooltip>\n      }\n      leftControls={\n        <>\n          <MicExceptionDialog micException={micException} setMicException={setMicException} />\n          <Tooltip content={mute ? \"Unmute\" : \"Mute\"}>\n            <IconButton\n              variant=\"surface-low\"\n              label=\"Mic\"\n              iconSrc={mute ? MicOffIC : MicIC}\n              onClick={() => {\n                handleMute(async () => manageMuteRequest(requestStream, setMicException));\n              }}\n            />\n          </Tooltip>\n          <Tooltip content=\"Disconnect\">\n            <IconButton variant=\"danger\" label=\"Disconnect\" iconSrc={CallCrossIC} onClick={onExitWorld} />\n          </Tooltip>\n        </>\n      }\n      rightControls={\n        <>\n          <Dialog open={isMemberDialog} onOpenChange={setIsMemberDialog}>\n            <MemberListDialog room={world} requestClose={() => setIsMemberDialog(false)} />\n          </Dialog>\n\n          <Dialog open={inviteDialog} onOpenChange={setInviteDialog}>\n            <InviteDialog roomId={world.id} requestClose={() => setInviteDialog(false)} />\n          </Dialog>\n          <DropdownMenu\n            content={\n              <>\n                <DropdownMenuItem onSelect={() => setInviteDialog(true)}>Invite</DropdownMenuItem>\n                <DropdownMenuItem onSelect={() => setIsMemberDialog(true)}>Members</DropdownMenuItem>\n                {canSendStateEvent(undefined, getPowerLevel(session.userId)) && (\n                  <DropdownMenuItem\n                    onSelect={() =>\n                      setOverlayWindow({\n                        type: OverlayWindow.WorldSettings,\n                        roomId: world.id,\n                      })\n                    }\n                  >\n                    Settings\n                  </DropdownMenuItem>\n                )}\n              </>\n            }\n          >\n            <IconButton variant=\"surface-low\" label=\"Options\" iconSrc={MoreHorizontalIC} />\n          </DropdownMenu>\n        </>\n      }\n    />\n  );\n}\n","import { useState } from \"react\";\n\nimport { IconButton } from \"../../../atoms/button/IconButton\";\nimport { Tooltip } from \"../../../atoms/tooltip/Tooltip\";\nimport MicIC from \"../../../../../res/ic/mic.svg\";\nimport MicOffIC from \"../../../../../res/ic/mic-off.svg\";\nimport \"./NowPlayingControls.css\";\nimport { usePermissionState } from \"../../../hooks/usePermissionState\";\nimport { useMicrophoneState } from \"../../../hooks/useMicrophoneState\";\nimport { useHydrogen } from \"../../../hooks/useHydrogen\";\nimport { exceptionToString, RequestException, useStreamRequest } from \"../../../hooks/useStreamRequest\";\nimport { AlertDialog } from \"../dialogs/AlertDialog\";\nimport { Text } from \"../../../atoms/text/Text\";\n\nexport function NowPlayingControls() {\n  const { platform } = useHydrogen(true);\n  const micPermission = usePermissionState(\"microphone\");\n  const requestStream = useStreamRequest(platform, micPermission);\n  const [micException, setMicException] = useState<RequestException>();\n  const [microphone, setMicrophone] = useMicrophoneState();\n\n  return (\n    <div className=\"NowPlayingControls shrink-0 flex items-center\">\n      {micException && (\n        <AlertDialog\n          open={!!micException}\n          title=\"Microphone\"\n          content={<Text variant=\"b2\">{exceptionToString(micException)}</Text>}\n          requestClose={() => setMicException(undefined)}\n        />\n      )}\n      <Tooltip content={microphone ? \"Mute\" : \"Unmute\"}>\n        <IconButton\n          variant=\"surface-low\"\n          label=\"Mic\"\n          iconSrc={microphone ? MicIC : MicOffIC}\n          onClick={async () => {\n            if (micPermission == \"granted\") {\n              setMicrophone(!microphone);\n            } else if (microphone) {\n              setMicrophone(false);\n            } else {\n              const [stream, exception] = await requestStream(true, false);\n              if (exception) setMicException(exception);\n              else {\n                setMicrophone(!!stream);\n                stream?.getAudioTracks().forEach((track) => {\n                  track.stop();\n                });\n              }\n            }\n          }}\n        />\n      </Tooltip>\n    </div>\n  );\n}\n","import classNames from \"classnames\";\nimport { GroupCall } from \"@thirdroom/hydrogen-view-sdk\";\nimport { useAtom, useAtomValue } from \"jotai\";\n\nimport \"./Overlay.css\";\nimport { getAvatarHttpUrl, getIdentifierColorNumber } from \"../../../utils/avatar\";\nimport { useHydrogen } from \"../../../hooks/useHydrogen\";\nimport { Avatar } from \"../../../atoms/avatar/Avatar\";\nimport { SidebarView } from \"../sidebar/SidebarView\";\nimport { SpacesView } from \"../sidebar/SpacesView\";\nimport { RoomListView } from \"../sidebar/RoomListView\";\nimport { RoomListHeader } from \"../sidebar/RoomListHeader\";\nimport { RoomListContent } from \"../sidebar/RoomListContent\";\nimport { ActiveChats } from \"./ActiveChats\";\nimport { ActiveChatTile } from \"../../components/active-chat-tile/ActiveChatTile\";\nimport { ChatView } from \"../chat/ChatView\";\nimport { ChatViewHeader } from \"../chat/ChatViewHeader\";\nimport { ChatViewContent } from \"../chat/ChatViewContent\";\nimport { ChatViewInvite } from \"../chat/ChatViewInvite\";\nimport { WorldPreview } from \"./WorldPreview\";\nimport { CreateWorld } from \"../create-world/CreateWorld\";\nimport { UserProfile } from \"../user-profile/UserProfile\";\nimport { useRoom } from \"../../../hooks/useRoom\";\nimport { RoomListHome } from \"../sidebar/RoomListHome\";\nimport { RoomListFriends } from \"../sidebar/RoomListFriends\";\nimport { useInvite } from \"../../../hooks/useInvite\";\nimport { WorldSettings } from \"../world-settings/WorldSettings\";\nimport { RoomListNotifications } from \"../sidebar/RoomListNotifications\";\nimport { NowPlayingWorld } from \"./NowPlayingWorld\";\nimport { NowPlayingControls } from \"./NowPlayingControls\";\nimport { useCalls } from \"../../../hooks/useCalls\";\nimport { useRoomCall } from \"../../../hooks/useRoomCall\";\nimport { DiscoverView } from \"../discover/DiscoverView\";\nimport config from \"../../../../../config.json\";\nimport { activeChatsAtom, openedChatAtom } from \"../../../state/overlayChat\";\nimport { overlayWorldAtom } from \"../../../state/overlayWorld\";\nimport { SidebarTab, sidebarTabAtom } from \"../../../state/sidebarTab\";\nimport { OverlayWindow, overlayWindowAtom } from \"../../../state/overlayWindow\";\nimport { worldAtom } from \"../../../state/world\";\nimport { useDisableInput } from \"../../../hooks/useDisableInput\";\nimport { useWorldNavigator } from \"../../../hooks/useWorldNavigator\";\n\nexport function Overlay() {\n  const { session, platform } = useHydrogen(true);\n  const calls = useCalls(session);\n\n  const openedChatId = useAtomValue(openedChatAtom);\n  const [activeChats, setActiveChat] = useAtom(activeChatsAtom);\n  const selectedWorldId = useAtomValue(overlayWorldAtom);\n  const sidebarTab = useAtomValue(sidebarTabAtom);\n\n  const { worldId, entered: isWorldEntered } = useAtomValue(worldAtom);\n\n  const repositoryRoom = useRoom(session, config.repositoryRoomIdOrAlias);\n\n  const activeCall = useRoomCall(calls, worldId);\n  const { navigateExitWorld } = useWorldNavigator(session);\n  const world = useRoom(session, isWorldEntered ? worldId : undefined);\n  const selectedChat = useRoom(session, openedChatId);\n  const selectedChatInvite = useInvite(session, openedChatId);\n  const overlayWindow = useAtomValue(overlayWindowAtom);\n  const groupCalls = new Map<string, GroupCall>();\n  Array.from(calls).flatMap(([, groupCall]) => groupCalls.set(groupCall.roomId, groupCall));\n\n  const worldSettingRoom = useRoom(\n    session,\n    overlayWindow.type === OverlayWindow.WorldSettings ? overlayWindow.roomId : undefined\n  );\n\n  useDisableInput();\n\n  const isChatOpen = selectedChat || selectedChatInvite;\n  return (\n    <div className={classNames(\"Overlay\", { \"Overlay--no-bg\": !isWorldEntered }, \"flex items-end\")}>\n      <SidebarView\n        spaces={<SpacesView />}\n        roomList={\n          overlayWindow.type === OverlayWindow.None && (\n            <RoomListView\n              header={<RoomListHeader />}\n              content={\n                <RoomListContent>\n                  {sidebarTab === SidebarTab.Home && <RoomListHome groupCalls={groupCalls} />}\n                  {sidebarTab === SidebarTab.Friends && <RoomListFriends />}\n                  {sidebarTab === SidebarTab.Notifications && <RoomListNotifications />}\n                </RoomListContent>\n              }\n              footer={\n                world && activeCall ? (\n                  <NowPlayingWorld\n                    world={world}\n                    activeCall={activeCall}\n                    onExitWorld={navigateExitWorld}\n                    platform={platform}\n                  />\n                ) : (\n                  <NowPlayingControls />\n                )\n              }\n            />\n          )\n        }\n      />\n      {overlayWindow.type !== OverlayWindow.None ? (\n        <div className=\"Overlay__window grow flex\">\n          {overlayWindow.type === OverlayWindow.CreateWorld && <CreateWorld />}\n          {overlayWindow.type === OverlayWindow.UserProfile && <UserProfile />}\n          {overlayWindow.type === OverlayWindow.WorldSettings && worldSettingRoom && (\n            <WorldSettings room={worldSettingRoom} />\n          )}\n          {overlayWindow.type === OverlayWindow.Discover && repositoryRoom && <DiscoverView room={repositoryRoom} />}\n        </div>\n      ) : (\n        <div className=\"Overlay__content grow\">\n          {(worldId && worldId === selectedWorldId) || isChatOpen ? undefined : <WorldPreview />}\n          {activeChats.size === 0 ? undefined : (\n            <ActiveChats\n              chat={\n                isChatOpen && (\n                  <ChatView>\n                    <ChatViewHeader\n                      platform={platform}\n                      session={session}\n                      room={selectedChat || selectedChatInvite!}\n                      onMinimize={(roomId) => setActiveChat({ type: \"MINIMIZE\", roomId })}\n                      onClose={(roomId) => setActiveChat({ type: \"CLOSE\", roomId })}\n                    />\n                    {selectedChat && <ChatViewContent room={selectedChat} />}\n                    {selectedChatInvite && <ChatViewInvite session={session} roomId={selectedChatInvite.id} />}\n                  </ChatView>\n                )\n              }\n              tiles={[...activeChats].map((rId) => {\n                const room = session.rooms.get(rId) ?? session.invites.get(rId);\n                if (!room) return null;\n                const isActive = rId === openedChatId;\n\n                const roomName = room.name || \"Empty room\";\n                return (\n                  <ActiveChatTile\n                    key={rId}\n                    isActive={isActive}\n                    roomId={rId}\n                    avatar={\n                      <Avatar\n                        size=\"sm\"\n                        imageSrc={\n                          room.avatarUrl\n                            ? getAvatarHttpUrl(room.avatarUrl, 50, platform, session.mediaRepository)\n                            : undefined\n                        }\n                        name={roomName}\n                        bgColor={`var(--usercolor${getIdentifierColorNumber(room.id)})`}\n                      />\n                    }\n                    title={roomName}\n                    onClick={(roomId) => setActiveChat({ type: isActive ? \"MINIMIZE\" : \"OPEN\", roomId })}\n                    onClose={(roomId) => setActiveChat({ type: \"CLOSE\", roomId })}\n                  />\n                );\n              })}\n            />\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n","import { Room, Session } from \"@thirdroom/hydrogen-view-sdk\";\n\nimport { useObservableList } from \"./useObservableList\";\n\nfunction roomListComparator(a: Room, b: Room) {\n  return b.lastMessageTimestamp - a.lastMessageTimestamp;\n}\n\nexport function useRoomList(session: Session): Room[] {\n  return useObservableList(() => session.rooms.sortValues(roomListComparator), [session.rooms]);\n}\n","import { atom } from \"jotai\";\n\nexport const whatsNewAtom = atom<boolean>(false);\n\nexport const whatsNewDialogAtom = atom<boolean | undefined>(undefined);\nexport const webSGTutDialogAtom = atom<boolean>(false);\n","import { useEffect } from \"react\";\nimport { useAtom } from \"jotai\";\n\nimport { useHydrogen } from \"./useHydrogen\";\nimport { whatsNewAtom } from \"../state/whatsNew\";\n\nconst WHATS_NEW_KEY = \"io.thirdroom.whats_new\";\n\nexport function useWhatsNew() {\n  const { session, platform } = useHydrogen(true);\n  const [whatsNew, setWhatsNew] = useAtom(whatsNewAtom);\n\n  useEffect(() => {\n    async function run() {\n      const whatsNewData = await session.getAccountData(WHATS_NEW_KEY);\n      const { whatsNewVersion } = platform.config;\n      const lastWhatsNewVersion = whatsNewData?.version;\n\n      if (typeof lastWhatsNewVersion !== \"number\" || lastWhatsNewVersion < whatsNewVersion) {\n        setWhatsNew(true);\n      }\n    }\n\n    run().catch(console.error);\n  }, [session, platform.config, setWhatsNew]);\n\n  const finishWhatsNew = () => {\n    setWhatsNew(false);\n    session.setAccountData(WHATS_NEW_KEY, {\n      version: platform.config.whatsNewVersion,\n    });\n  };\n\n  return { whatsNew, finishWhatsNew };\n}\n","import { useAtom, useAtomValue } from \"jotai\";\n\nimport { useWhatsNew } from \"../../../hooks/useWhatsNew\";\nimport { webSGTutDialogAtom, whatsNewDialogAtom } from \"../../../state/whatsNew\";\nimport CrossIC from \"../../../../../res/ic/cross.svg\";\nimport { IconButton } from \"../../../atoms/button/IconButton\";\nimport { Text } from \"../../../atoms/text/Text\";\n\nexport function WhatsNewNotification() {\n  const { whatsNew, finishWhatsNew } = useWhatsNew();\n\n  const [whatsNewDialog, setWhatsNewDialog] = useAtom(whatsNewDialogAtom);\n  const webSGTutDialog = useAtomValue(webSGTutDialogAtom);\n\n  if (!whatsNew || whatsNewDialog || webSGTutDialog) {\n    return null;\n  }\n  return (\n    <div\n      className=\"flex items-center gap-xxs\"\n      style={{\n        padding: \"var(--sp-xxs) var(--sp-xs)\",\n        background: \"var(--bg-primary)\",\n        borderRadius: \"var(--br-xs)\",\n      }}\n    >\n      <div className=\"shrink-0 flex\">\n        <IconButton\n          variant=\"on-primary\"\n          size=\"sm\"\n          iconSrc={CrossIC}\n          label=\"Close\"\n          onClick={() => {\n            if (window.confirm(\"This action is permanent. Are you sure?\")) finishWhatsNew();\n          }}\n        />\n      </div>\n      <button\n        className=\"grow flex items-center\"\n        style={{ cursor: \"pointer\" }}\n        type=\"button\"\n        onClick={() => setWhatsNewDialog(true)}\n      >\n        <Text variant=\"b3\" className=\"truncate\" type=\"span\" color=\"on-primary\" weight=\"medium\">\n          The Creator Update is out! 🎉\n        </Text>\n      </button>\n    </div>\n  );\n}\n","import { CSSProperties, ReactNode, useReducer, useRef } from \"react\";\nimport { useMatch } from \"react-router-dom\";\nimport { Session } from \"@thirdroom/hydrogen-view-sdk\";\nimport { useAtom, useSetAtom } from \"jotai\";\n\nimport { Text } from \"../../../atoms/text/Text\";\nimport { useHydrogen } from \"../../../hooks/useHydrogen\";\nimport \"./StatusBar.css\";\nimport { useRecentMessage } from \"../../../hooks/useRecentMessage\";\nimport { Avatar } from \"../../../atoms/avatar/Avatar\";\nimport { getAvatarHttpUrl, getIdentifierColorNumber } from \"../../../utils/avatar\";\nimport { useRoomList } from \"../../../hooks/useRoomList\";\nimport { useWorldPath } from \"../../../hooks/useWorld\";\nimport { activeChatsAtom } from \"../../../state/overlayChat\";\nimport { worldChatVisibilityAtom } from \"../../../state/worldChatVisibility\";\nimport { overlayVisibilityAtom } from \"../../../state/overlayVisibility\";\nimport { sidebarTabAtom, SidebarTab } from \"../../../state/sidebarTab\";\nimport { WhatsNewNotification } from \"../whats-new/WhatsNewNotification\";\n\nfunction OverlayButton({\n  style,\n  children,\n  onClick,\n}: {\n  style?: CSSProperties;\n  children: ReactNode;\n  onClick: () => void;\n}) {\n  return (\n    <button className=\"OverlayButton\" style={style} onClick={onClick} type=\"button\">\n      {children}\n    </button>\n  );\n}\n\nfunction useNotifications(session: Session) {\n  const [, forceUpdate] = useReducer((state) => state + 1, 0);\n  const prevDataRef = useRef<{ count: number | undefined; eventEntry: any }>({\n    count: undefined,\n    eventEntry: undefined,\n  });\n\n  const rooms = useRoomList(session).filter((room) => !room.type);\n  const notifCount = rooms.reduce((total, room) => total + room.notificationCount, 0);\n  const eventEntry = useRecentMessage(rooms[0]);\n\n  if (prevDataRef.current.count !== notifCount) {\n    prevDataRef.current.eventEntry = eventEntry;\n    setTimeout(() => {\n      if (eventEntry === prevDataRef.current.eventEntry) {\n        prevDataRef.current.eventEntry = undefined;\n        prevDataRef.current.count = notifCount;\n        forceUpdate();\n      }\n    }, 5000);\n  }\n\n  const prevCount = prevDataRef.current.count;\n  return {\n    notifCount: notifCount,\n    eventEntry: prevCount !== undefined && notifCount > prevCount ? prevDataRef.current.eventEntry : undefined,\n    roomId: rooms[0]?.id,\n  };\n}\nexport function NotificationButton({ onClick }: { onClick: () => void }) {\n  const { session, platform } = useHydrogen(true);\n  const { notifCount, eventEntry, roomId } = useNotifications(session);\n  const selectChat = useSetAtom(activeChatsAtom);\n\n  const handleNotificationClick = () => {\n    onClick();\n    if (eventEntry) selectChat({ type: \"OPEN\", roomId });\n  };\n\n  return (\n    <OverlayButton onClick={handleNotificationClick}>\n      {eventEntry ? (\n        <>\n          <Avatar\n            className=\"shrink-0\"\n            shape=\"circle\"\n            size=\"xxs\"\n            imageSrc={\n              eventEntry.avatarUrl\n                ? getAvatarHttpUrl(eventEntry.avatarUrl, 20, platform, session.mediaRepository)\n                : undefined\n            }\n            bgColor={`var(--usercolor${getIdentifierColorNumber(eventEntry.sender)})`}\n            name={eventEntry.displayName}\n          />\n          <Text variant=\"b3\" className=\"truncate\" color=\"world\">\n            {`${eventEntry.displayName}: ${eventEntry.content.body}`}\n          </Text>\n        </>\n      ) : (\n        <Text variant=\"b3\" color=\"world\">\n          {`${notifCount} Notifications`}\n        </Text>\n      )}\n    </OverlayButton>\n  );\n}\n\nexport function StatusBar() {\n  const { session } = useHydrogen(true);\n  const [overlayVisible, setOverlayVisibility] = useAtom(overlayVisibilityAtom);\n  const setWorldChatVisibility = useSetAtom(worldChatVisibilityAtom);\n  const setSidebarTab = useSetAtom(sidebarTabAtom);\n\n  const homeMatch = useMatch({ path: \"/\", end: true });\n  const isHome = homeMatch !== null;\n  const [knownWorldId] = useWorldPath();\n  const world = knownWorldId ? session.rooms.get(knownWorldId) : undefined;\n\n  const openOverlay = () => {\n    if (overlayVisible) {\n      setOverlayVisibility(false);\n    } else {\n      document.exitPointerLock();\n      setWorldChatVisibility(false);\n      setOverlayVisibility(true);\n    }\n  };\n\n  const openNotifications = () => {\n    if (overlayVisible) {\n      setOverlayVisibility(false);\n    } else {\n      document.exitPointerLock();\n      setWorldChatVisibility(false);\n      setOverlayVisibility(true);\n      setSidebarTab(SidebarTab.Notifications);\n    }\n  };\n\n  return (\n    <div className=\"StatusBar shrink-0 flex items-center\">\n      <div className=\"StatusBar__left grow basis-0 flex\">\n        {knownWorldId && (\n          <OverlayButton style={{ paddingLeft: \"var(--sp-xxs)\" }} onClick={openOverlay}>\n            <Text\n              color=\"world\"\n              weight=\"medium\"\n              variant=\"b3\"\n              style={{\n                padding: \"0 3px\",\n                borderRadius: \"var(--br-xxs)\",\n                border: \"1px solid var(--bg-world-border)\",\n              }}\n            >\n              ESC\n            </Text>\n            <Text className=\"flex items-center\" color=\"world\" variant=\"b3\">\n              {overlayVisible ? \"Close Overlay\" : \"Open Overlay\"}\n            </Text>\n          </OverlayButton>\n        )}\n      </div>\n      <div className=\"StatusBar__center\">\n        <Text color=\"world\" weight=\"semi-bold\">\n          {isHome ? \"Home\" : world?.name ?? world?.canonicalAlias ?? \"Unknown\"}\n        </Text>\n      </div>\n      <div className=\"StatusBar__right grow basis-0 flex justify-end gap-xxs\">\n        <WhatsNewNotification />\n        {knownWorldId && <NotificationButton onClick={openNotifications} />}\n      </div>\n    </div>\n  );\n}\n","import { RoomType, RoomVisibility, Session } from \"@thirdroom/hydrogen-view-sdk\";\nimport { useEffect, useState } from \"react\";\n\nimport defaultWorlds from \"../../../res/defaultWorlds.json\";\nimport { waitToCreateRoom } from \"../utils/matrixUtils\";\nimport { useHydrogen } from \"./useHydrogen\";\n\nasync function createHomeWorld(session: Session) {\n  return await session.createRoom({\n    type: RoomType.World,\n    visibility: RoomVisibility.Private,\n    avatar: defaultWorlds.home.defaultAvatar,\n    name: \"Home World\",\n    isEncrypted: false,\n    isFederationDisabled: false,\n    powerLevelContentOverride: {\n      invite: 100,\n      kick: 100,\n      ban: 100,\n      redact: 100,\n      state_default: 100,\n      events_default: 100,\n      users_default: 0,\n      events: {\n        \"m.room.power_levels\": 100,\n        \"m.room.history_visibility\": 100,\n        \"m.room.tombstone\": 100,\n        \"m.room.encryption\": 100,\n        \"m.room.name\": 100,\n        \"m.room.message\": 0,\n        \"m.room.encrypted\": 100,\n        \"m.sticker\": 0,\n        \"org.matrix.msc3401.call.member\": 0,\n        \"org.matrix.msc3815.member.world\": 0,\n      },\n      users: {\n        [session.userId]: 100,\n      },\n    },\n    initialState: [\n      {\n        type: \"org.matrix.msc3815.world\",\n        content: {\n          version: defaultWorlds.home.version,\n          scene_url: defaultWorlds.home.sceneUrl,\n          scene_preview_url: defaultWorlds.home.scenePreviewUrl,\n          home: true,\n        },\n      },\n    ],\n  });\n}\n\ninterface HomeWorldAccountData {\n  version?: number;\n  room_id: string;\n}\n\nasync function updateHomeWorld(session: Session, accountData: HomeWorldAccountData) {\n  const room = session.rooms.get(accountData.room_id);\n\n  if (!room) {\n    throw new Error(\"Home world not found\");\n  }\n\n  await session.hsApi\n    .sendState(room.id, \"org.matrix.msc3815.world\", \"\", {\n      scene_url: defaultWorlds.home.sceneUrl,\n      scene_preview_url: defaultWorlds.home.scenePreviewUrl,\n    })\n    .response();\n}\n\nexport function useHomeWorld() {\n  const { session } = useHydrogen(true);\n  const [homeWorldId, setHomeWorldId] = useState<string>();\n\n  useEffect(() => {\n    async function run() {\n      const homeAccountData = await session.getAccountData(\"org.matrix.msc3815.world.home\");\n\n      if (\n        homeAccountData &&\n        homeAccountData.version &&\n        homeAccountData.version >= 4 &&\n        session.rooms.get(homeAccountData.room_id)\n      ) {\n        if (homeAccountData.version < defaultWorlds.home.version) {\n          await updateHomeWorld(session, homeAccountData);\n\n          await session.setAccountData(\"org.matrix.msc3815.world.home\", {\n            version: defaultWorlds.home.version,\n            room_id: homeAccountData.room_id,\n          });\n        }\n\n        setHomeWorldId(homeAccountData.room_id);\n      } else {\n        if (homeAccountData && homeAccountData.version && homeAccountData.version <= 3) {\n          await session.rooms.get(homeAccountData.room_id)?.leave();\n        }\n\n        const roomBeingCreated = await createHomeWorld(session);\n        const homeWorld = await waitToCreateRoom(session, roomBeingCreated);\n        setHomeWorldId(homeWorld!.id);\n\n        await session.setAccountData(\"org.matrix.msc3815.world.home\", {\n          version: defaultWorlds.home.version,\n          room_id: homeWorld!.id,\n        });\n      }\n    }\n\n    run().catch(console.error);\n  }, [session]);\n\n  return homeWorldId;\n}\n","import { Session } from \"@thirdroom/hydrogen-view-sdk\";\nimport { useEffect } from \"react\";\n\nimport { useRoom } from \"./useRoom\";\n\nexport function useAutoJoinRoom(session: Session, roomIdOrAlias: string) {\n  const room = useRoom(session, roomIdOrAlias);\n\n  useEffect(() => {\n    if (room === undefined) {\n      session.joinRoom(roomIdOrAlias);\n    }\n  }, [session, roomIdOrAlias, room]);\n\n  return room;\n}\n","import classNames from \"classnames\";\nimport { KBarResults, useMatches } from \"kbar\";\nimport { forwardRef } from \"react\";\n\nimport \"./SearchResults.css\";\nimport { Text } from \"../../../atoms/text/Text\";\nimport { Label } from \"../../../atoms/text/Label\";\nimport { Kbd } from \"../../../atoms/keyboard/Kbd\";\n\nconst SearchResultCategory = forwardRef<HTMLDivElement, { children: string }>(({ children }, ref) => {\n  return (\n    <div ref={ref} className=\"SearchResultCategory flex items-center gap-sm\">\n      <Label className=\"grow\">{children}</Label>\n    </div>\n  );\n});\n\nconst SearchResultItem = forwardRef<\n  HTMLDivElement,\n  { active?: boolean; subtitle?: string; shortcuts?: string[]; children: string }\n>(({ active, subtitle, shortcuts, children }, ref) => {\n  return (\n    <div\n      ref={ref}\n      className={classNames(\"SearchResultItem flex items-center gap-sm\", { \"SearchResultItem--active\": active })}\n    >\n      <div className=\"grow\">\n        <Text variant=\"b2\" weight=\"medium\">\n          {children}\n        </Text>\n        {subtitle && <Text variant=\"b3\">{subtitle}</Text>}\n      </div>\n      {shortcuts && shortcuts.length > 0 && (\n        <div className=\"flex items-center gap-xxs\">\n          {shortcuts.map((shortcut, index) => (\n            <Kbd key={shortcut} size=\"xs\">\n              {shortcut}\n            </Kbd>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n});\n\nexport function SearchResults() {\n  const { results } = useMatches();\n\n  return (\n    <KBarResults\n      items={results}\n      onRender={({ item, active }) => {\n        return typeof item === \"string\" ? (\n          <SearchResultCategory>{item}</SearchResultCategory>\n        ) : (\n          <SearchResultItem active={active} shortcuts={item.shortcut} subtitle={item.subtitle}>\n            {item.name}\n          </SearchResultItem>\n        );\n      }}\n    />\n  );\n}\n","import { KBarAnimator, KBarPortal, KBarPositioner, KBarSearch } from \"kbar\";\n\nimport \"./CmdPanel.css\";\nimport { SearchResults } from \"./SearchResults\";\n\nexport const defaultActions = [];\n\nexport function CmdPanel() {\n  return (\n    <KBarPortal>\n      <KBarPositioner className=\"CmdPanel__positioner\">\n        <KBarAnimator>\n          <div className=\"CmdPanel\">\n            <KBarSearch className=\"CmdPanel__search-input\" size={1} />\n            <SearchResults />\n          </div>\n        </KBarAnimator>\n      </KBarPositioner>\n    </KBarPortal>\n  );\n}\n","import { ReactNode } from \"react\";\n\nimport { Text } from \"../../../atoms/text/Text\";\nimport \"./WhatsNewCard.css\";\n\ninterface WhatsNewCardProps {\n  thumbnail: ReactNode;\n  title: string | ReactNode;\n  description: string | ReactNode;\n}\nexport function WhatsNewCard({ thumbnail, title, description }: WhatsNewCardProps) {\n  return (\n    <div className=\"WhatsNewCard flex items-start gap-md\">\n      <div>{thumbnail}</div>\n      <div className=\"WhatsNewCard__content flex flex-column gap-xxs\">\n        <Text className=\"truncate\" weight=\"medium\">\n          {title}\n        </Text>\n        <Text variant=\"b3\">{description}</Text>\n      </div>\n    </div>\n  );\n}\n","import \"./WhatsNewModal.css\";\nimport { Button } from \"../../../atoms/button/Button\";\nimport { Text } from \"../../../atoms/text/Text\";\nimport { Content } from \"../../../atoms/content/Content\";\nimport { Footer } from \"../../../atoms/footer/Footer\";\nimport { Scroll } from \"../../../atoms/scroll/Scroll\";\nimport { Modal } from \"../../../atoms/modal/Modal\";\nimport { Category } from \"../../components/category/Category\";\nimport { CategoryHeader } from \"../../components/category/CategoryHeader\";\nimport { Thumbnail } from \"../../../atoms/thumbnail/Thumbnail\";\nimport { ThumbnailImg } from \"../../../atoms/thumbnail/ThumbnailImg\";\nimport { WhatsNewCard } from \"./WhatsNewCard\";\n\ninterface WhatsNewModalProps {\n  open: boolean;\n  requestClose: () => void;\n  createSpecialWorld: () => void;\n}\n\nexport function WhatsNewModal({ open, requestClose, createSpecialWorld }: WhatsNewModalProps) {\n  return (\n    <Modal open={open} className=\"WhatsNewModal\" size=\"sm\">\n      <Content\n        children={\n          <div className=\"WhatsNewModal__content\">\n            <Scroll type=\"hover\">\n              <div className=\"WhatsNewModal__hero flex flex-column justify-center items-center gap-sm text-center\">\n                <Text variant=\"h2\" weight=\"bold\">\n                  Welcome to the Third Room\n                </Text>\n                <Text variant=\"s2\" weight=\"semi-bold\">\n                  Creator Update\n                </Text>\n              </div>\n              <Category header={<CategoryHeader title={\"What's New\"} />}>\n                <WhatsNewCard\n                  thumbnail={\n                    <Thumbnail size=\"sm\" bgColor=\"var(--bg-surface-low)\">\n                      <ThumbnailImg src=\"/creator-update/WebSGThumbnail.jpg\" />\n                    </Thumbnail>\n                  }\n                  title=\"Web Scene Graph API\"\n                  description=\"Add behaviors to your worlds using the new Web Scene Graph API. Create portable interactive worlds with JavaScript and WebAssembly.\"\n                />\n                <WhatsNewCard\n                  thumbnail={\n                    <Thumbnail size=\"sm\" bgColor=\"var(--bg-surface-low)\">\n                      <ThumbnailImg src=\"/creator-update/WebXRThumbnail.jpg\" />\n                    </Thumbnail>\n                  }\n                  title=\"WebXR\"\n                  description=\"Third Room now has WebXR support! You can now use your AR or VR headset to explore 3D worlds and interact with other users.\"\n                />\n                <WhatsNewCard\n                  thumbnail={\n                    <Thumbnail size=\"sm\" bgColor=\"var(--bg-surface-low)\">\n                      <ThumbnailImg src=\"/creator-update/DiscoverPageThumbnail.jpg\" />\n                    </Thumbnail>\n                  }\n                  title=\"Discover Page\"\n                  description=\"Find and share scenes, worlds, and Matrix rooms created by the Third Room Community in the new Discover Page.\"\n                />\n                <WhatsNewCard\n                  thumbnail={\n                    <Thumbnail size=\"sm\" bgColor=\"var(--bg-surface-low)\">\n                      <ThumbnailImg src=\"/creator-update/InspectorThumbnail.jpg\" />\n                    </Thumbnail>\n                  }\n                  title=\"In-World Inspector\"\n                  description=\"Inspect and adjust properties and scripts in your worlds using the new in-world inspector. Press the ` key to open the inspector in any world you have edit access to.\"\n                />\n              </Category>\n            </Scroll>\n          </div>\n        }\n        bottom={\n          <Footer\n            center={\n              <div className=\"flex flex-column gap-xxs\" style={{ padding: \"var(--sp-xs)\" }}>\n                <Button onClick={createSpecialWorld}>Try the Script Editor</Button>\n                <Button onClick={requestClose} fill=\"none\" size=\"sm\">\n                  Maybe later\n                </Button>\n              </div>\n            }\n          />\n        }\n      />\n    </Modal>\n  );\n}\n","import { Button } from \"../../../../atoms/button/Button\";\nimport { Dialog } from \"../../../../atoms/dialog/Dialog\";\nimport { Text } from \"../../../../atoms/text/Text\";\n\ninterface WebSceneGraphDialogProps {\n  open: boolean;\n  requestClose: () => void;\n}\n\nexport function WebSceneGraphDialog({ open, requestClose }: WebSceneGraphDialogProps) {\n  return (\n    <Dialog open={open}>\n      <div className=\"flex flex-column gap-lg\" style={{ padding: \"var(--sp-xl) var(--sp-md) var(--sp-lg)\" }}>\n        <div className=\"flex flex-column item-center gap-md text-center\">\n          <Text variant=\"h2\" weight=\"bold\">\n            Web Scene Graph\n          </Text>\n          <Text variant=\"b3\">\n            Welcome to the Web Scene Graph tutorial! This tutorial will walk you through the basics of the Web Scene\n            Graph API and how to use it to build your own 3D experiences.\n          </Text>\n        </div>\n        <div style={{ maxWidth: 225, margin: \"auto\" }} className=\"flex flex-column items-center gap-sm text-center\">\n          <Button style={{ minWidth: 175 }} onClick={requestClose}>\n            Open Tutorial\n          </Button>\n          <Text variant=\"b3\">Instructions for the next step are on the next page 👀</Text>\n        </div>\n      </div>\n    </Dialog>\n  );\n}\n","import { useAtom, useAtomValue, useSetAtom } from \"jotai\";\nimport { useEffect } from \"react\";\nimport { RoomVisibility } from \"@thirdroom/hydrogen-view-sdk\";\n\nimport { useWhatsNew } from \"../../../hooks/useWhatsNew\";\nimport { WhatsNewModal } from \"./WhatsNewModal\";\nimport { webSGTutDialogAtom, whatsNewDialogAtom } from \"../../../state/whatsNew\";\nimport { WebSceneGraphDialog } from \"./special/WebSceneGraphDialog\";\nimport { useHydrogen } from \"../../../hooks/useHydrogen\";\nimport { CreateWorldOptions, createWorld } from \"../create-world/CreateWorldForm\";\nimport { waitToCreateRoom } from \"../../../utils/matrixUtils\";\nimport { MAX_OBJECT_CAP } from \"../../../../engine/config.common\";\nimport { overlayWorldAtom } from \"../../../state/overlayWorld\";\nimport { worldAtom } from \"../../../state/world\";\nimport { useWorldNavigator } from \"../../../hooks/useWorldNavigator\";\nimport { useLocalStorage } from \"../../../hooks/useLocalStorage\";\nimport { useRoom } from \"../../../hooks/useRoom\";\n\nconst WEBSG_ROOM_ID = \"WebSG_roomId\";\n\nconst SCRIPTING_WORLD: CreateWorldOptions = {\n  name: \"Scripting World\",\n  visibility: RoomVisibility.Private,\n  content: {\n    // FIXME: update mxc before merge\n    scene_url: \"mxc://thirdroom.io/aTPpICQMDRnWddrfYWhdbYxd\",\n    scene_preview_url: \"mxc://thirdroom.io/eexkLRWjvBNZbAFHyZifnUyL\",\n    max_member_object_cap: MAX_OBJECT_CAP,\n  },\n};\n\nexport function WhatsNew() {\n  const { whatsNew, finishWhatsNew } = useWhatsNew();\n  const [whatsNewDialog, setWhatsNewDialog] = useAtom(whatsNewDialogAtom);\n  const [webSGTutDialog, setWebSGTutDialog] = useAtom(webSGTutDialogAtom);\n  const { session } = useHydrogen(true);\n  const setSelectedWorld = useSetAtom(overlayWorldAtom);\n  const { navigateEnterWorld } = useWorldNavigator(session);\n  const { worldId, entered } = useAtomValue(worldAtom);\n  const [webSGRoomId, storeWebSGRoomId] = useLocalStorage<string | undefined>(WEBSG_ROOM_ID, undefined);\n  const webSGRoom = useRoom(session, webSGRoomId);\n\n  useEffect(() => {\n    // Open whats new dialog initially\n    if (whatsNewDialog === undefined && whatsNew && !worldId) {\n      setWhatsNewDialog(true);\n      // exit possible pointerlock to interact with dialog\n      setTimeout(() => document.exitPointerLock(), 1);\n    }\n  }, [whatsNewDialog, whatsNew, setWhatsNewDialog, worldId]);\n\n  useEffect(() => {\n    // Show WebSG tutorial dialog when user enter webSG room\n    if (whatsNew && worldId === webSGRoomId && entered) {\n      setWebSGTutDialog(true);\n      // exit possible pointerlock to interact with dialog\n      setTimeout(() => document.exitPointerLock(), 1);\n    }\n  }, [worldId, webSGRoomId, entered, whatsNew, setWebSGTutDialog]);\n\n  const handleCreateSpecialWorld = async () => {\n    setWhatsNewDialog(false);\n    if (webSGRoom) {\n      setSelectedWorld(webSGRoom.id);\n      navigateEnterWorld(webSGRoom);\n      return;\n    }\n    try {\n      const roomBeingCreated = await createWorld(session, SCRIPTING_WORLD);\n      setSelectedWorld(roomBeingCreated.id);\n      const room = await waitToCreateRoom(session, roomBeingCreated);\n      if (room) {\n        storeWebSGRoomId(room.id);\n        setSelectedWorld(room.id);\n        navigateEnterWorld(room);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <>\n      <WhatsNewModal\n        open={!!whatsNewDialog}\n        requestClose={() => setWhatsNewDialog(false)}\n        createSpecialWorld={handleCreateSpecialWorld}\n      />\n      <WebSceneGraphDialog\n        open={webSGTutDialog}\n        requestClose={() => {\n          window.open(\"/docs/guides/websg/basketball/part-1.html\", \"__blank\");\n          setWebSGTutDialog(false);\n          finishWhatsNew();\n        }}\n      />\n    </>\n  );\n}\n","import { Button } from \"../../../atoms/button/Button\";\nimport { Text } from \"../../../atoms/text/Text\";\nimport { useLocalStorage } from \"../../../hooks/useLocalStorage\";\nimport { AlertDialog } from \"./AlertDialog\";\n\nconst FIREFOX_PERF_ALERT_KEY = \"firefox_perf_alert\";\n\nconst isGecko = typeof navigator !== \"undefined\" && navigator.userAgent.indexOf(\"Gecko/\") >= 0;\n\nexport function FirefoxPerfAlert() {\n  const [alertVisible, setAlertVisible] = useLocalStorage(FIREFOX_PERF_ALERT_KEY, isGecko);\n\n  const handleClose = () => setAlertVisible(false);\n\n  return (\n    <AlertDialog\n      open={alertVisible}\n      requestClose={handleClose}\n      title=\"Warning\"\n      content={\n        <Text variant=\"b2\">\n          Third Room is currently experiencing degraded performance in Firefox due to a bug in the browser’s garbage\n          collector when using multiple threads. We’re currently investigating this problem and possible workarounds.{\" \"}\n          <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1822411\" target=\"_blank\" referrerPolicy=\"no-referrer\">\n            Read More\n          </a>\n        </Text>\n      }\n      buttons={\n        <Button onClick={handleClose} variant=\"primary\" fill=\"outline\">\n          Ok\n        </Button>\n      }\n    />\n  );\n}\n","import { useEffect, useRef } from \"react\";\nimport { Outlet } from \"react-router-dom\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { useAtomValue, useSetAtom } from \"jotai\";\nimport { KBarProvider } from \"kbar\";\n\nimport \"./SessionView.css\";\nimport { useInitMainThreadContext, MainThreadContextProvider } from \"../../hooks/useMainThread\";\nimport { Overlay } from \"./overlay/Overlay\";\nimport { StatusBar } from \"./statusbar/StatusBar\";\nimport { LoadingScreen } from \"../components/loading-screen/LoadingScreen\";\nimport { useHomeWorld } from \"../../hooks/useHomeWorld\";\nimport { useUnknownWorldPath } from \"../../hooks/useWorld\";\nimport { useAutoJoinRoom } from \"../../hooks/useAutoJoinRoom\";\nimport { useHydrogen } from \"../../hooks/useHydrogen\";\nimport config from \"../../../../config.json\";\nimport { overlayWorldAtom } from \"../../state/overlayWorld\";\nimport { overlayVisibilityAtom } from \"../../state/overlayVisibility\";\nimport { CmdPanel, defaultActions } from \"./cmd-panel/CmdPanel\";\nimport { useAccountManagementAction, useLandingPageAction, useUserProfileAction } from \"./cmd-panel/actions\";\nimport { editorEnabledAtom } from \"../../state/editor\";\nimport { WhatsNew } from \"./whats-new/WhatsNew\";\nimport { FirefoxPerfAlert } from \"./dialogs/FirefoxPerfAlert\";\n\nfunction RegisterKBarActions() {\n  useUserProfileAction();\n  useAccountManagementAction();\n  useLandingPageAction();\n  return null;\n}\n\nexport default function SessionView() {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const mainThread = useInitMainThreadContext(canvasRef);\n  const { session } = useHydrogen(true);\n  const overlayVisible = useAtomValue(overlayVisibilityAtom);\n  const [worldId, worldAlias] = useUnknownWorldPath();\n  const homeWorldId = useHomeWorld();\n  const selectWorld = useSetAtom(overlayWorldAtom);\n  useAutoJoinRoom(session, config.repositoryRoomIdOrAlias);\n\n  const editorEnabled = useAtomValue(editorEnabledAtom);\n\n  useEffect(() => {\n    if (!worldId && !worldAlias && homeWorldId) {\n      selectWorld(homeWorldId);\n    }\n  }, [worldId, worldAlias, homeWorldId, selectWorld]);\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <KBarProvider\n        actions={defaultActions}\n        options={{\n          disableScrollbarManagement: true,\n        }}\n      >\n        <CmdPanel />\n        <RegisterKBarActions />\n        <div className=\"SessionView\">\n          <canvas className=\"SessionView__viewport\" ref={canvasRef} />\n          {mainThread ? (\n            <MainThreadContextProvider value={mainThread}>\n              <Outlet />\n              {overlayVisible && <Overlay />}\n              {!editorEnabled && <StatusBar />}\n              <FirefoxPerfAlert />\n              <WhatsNew />\n            </MainThreadContextProvider>\n          ) : (\n            <LoadingScreen message=\"Initializing engine...\" />\n          )}\n        </div>\n      </KBarProvider>\n    </DndProvider>\n  );\n}\n"],"names":["SidebarView","spaces","roomList","jsxs","classNames","jsx","SidebarTab","className","iconSrc","name","variant","isActive","onClick","avatarIconClass","iconColor","Icon","ExploreIC","NotificationIC","useObservableList","observableFactory","deps","useObservable","update","observable","roomListComparator","a","b","useInviteList","session","CopyIC","Textarea","forwardRef","size","state","outlined","disabled","before","after","props","ref","inputClass","getLogs","platform","exportReporter","r","RageshakeDialog","open","requestClose","useHydrogen","submitLogs","submitting","error","useAsyncCallback","text","bugReportEndpointUrl","logs","submitLogsToRageshakeServer","handleSubmit","evt","descInput","desc","downloadLogs","outputBlob","saveData","Dialog","Header","HeaderTitle","IconButton","CrossIC","Text","SettingTile","Label","Button","Dots","UserMenu","logout","accountManagementUrl","userId","displayName","avatarUrl","useAtomValue","userProfileAtom","setOverlayWindow","useSetAtom","overlayWindowAtom","copied","setCopied","useState","bugReport","setBugReport","navigate","useNavigate","Fragment","DropdownMenu","Tooltip","copyToClipboard","DropdownMenuItem","OverlayWindow","Avatar","getIdentifierColorNumber","getAvatarHttpUrl","RoomTypes","RoomTypes2","roomTypeFilter","room","type","useRoomsOfType","initialType","setType","baseSidebarTabAtom","atom","sidebarTabAtom","get","set","value","SpacesView","invites","rooms","directs","sidebarTab","setSidebarTab","useAtom","overlayWindow","roomsNotifCount","total","directsNotifCount","BadgeWrapper","NotificationBadge","SidebarTabEnum","PlanetIC","PeoplesIC","RoomListView","header","content","footer","Scroll","AddIC","DmDialog","starting","setStarting","setError","loading","searchResult","setSearchTerm","useSearchProfile","dmUser","isValidUserId","roomBeingCreated","RoomVisibility","waitToCreateRoom","handleInputChange","useDebounce","useCallback","InfoIC","Input","ProfileSuggestion","profile","JoinWithAliasDialog","joining","setJoining","aliasOrId","useDialog","isOpen","setOpen","openDialog","closeDialog","RoomListHeader","openJoin","setJoinOpen","openJoinDialog","closeJoinDialog","RoomListContent","children","ActiveChats","chat","tiles","CrossCircleIC","ActiveChatTile","roomId","avatar","title","onClose","activeChatClass","ChatView","ChatHeader","options","MinusIC","ChatViewHeader","onMinimize","roomName","ChatGap","TemplateView","vm","t","ChatBaseMessage","isEmote","_a","contentOnly","_b","avatarColorNumber","avatarLetter","avatarTitle","child","ChatMessage","body","linkifyText","ChatAnnouncement","ChatImage","height","ChatDate","viewClassForTile","ChatTimeline","timelineViewModel","chatTimelineRef","useRef","useEmbedTimeline","SendIC","ChatComposer","composerViewModel","ev","target","message","ChatViewContent","roomViewModel","useRoomViewModel","chatTileClassForEntry","useInvite","useObservableMap","useInviteControl","forceUpdate","useReducer","v","isMounted","useIsMounted","invite","ChatViewInvite","accept","reject","useObservableValue","useAsyncObservableValue","promiseFactory","useAsync","ObservableValue","useRoomStatus","Window","onRequestClose","useKeyDown","e","DiscoverGroup","label","DiscoverGroupGrid","itemMinWidth","gap","DiscoverMoreButton","useStateEvents","eventType","eventObservable","setEventObservable","ObservableMap","events","useEffect","stateObserver","useFeaturedWorlds","repoRoom","RepositoryEvents","eventId","stateEvent","FeaturedWorldsProvider","featuredWorlds","useFeaturedRooms","FeaturedRoomsProvider","featuredRooms","RoomPreviewCard","memberCount","getRoomSummary","roomIdOrAlias","signal","homeserver","useRoomSummary","summary","setSummary","controller","data","RoomSummaryProvider","fallback","JoinRoomProvider","callback","res","isJoined","FeaturedRoomCard","selectChat","activeChatsAtom","handleViewRoom","summaryData","join","FeaturedWorldCard","selectWorld","overlayWorldAtom","handleViewWorld","useFeaturedScenes","FeaturedScenesProvider","featuredScenes","Thumbnail","bgColor","wide","style","ScenePreviewCard","thumbnail","ScenePreviewCardContent","ModalAside","asideClass","ModalContent","aside","ScenePreview","src","alt","ThumbnailHover","AvatarPicker","url","onAvatarPick","onAvatarDrop","ThumbnailImg","useFilePicker","mimeType","fileData","setFileData","pickFile","dropFile","resetUses","CheckIC","FileUploadCard","sentBytes","totalBytes","onUploadDrop","Progress","getPercentage","bytesToSize","FileUploadErrorCard","useAttachmentUpload","hsApi","onProgress","mxc","setMxc","requestRef","upload","blob","uploadAttachment","request","err","cancel","useThrottle","interval","timeoutIdRef","lastCalled","throttledCallback","cbArgs","now","AutoFileUpload","renderButton","onUploadInfo","progress","setProgress","throttledSetProgress","UploadIC","UploadScene","onSave","renderTrigger","setIsOpen","openModal","closeModal","sceneInfo","setSceneInfo","previewInfo","setPreviewInfo","saveChanges","Modal","Content","Footer","AliasAvailabilityProvider","userHSDomain","getMxIdDomain","available","setAvailable","debouncedAliasChange","isAvail","isRoomAliasAvailable","handleAliasChange","createWorld","topic","visibility","alias","avatarInfo","getImageDimension","RoomType","CreateWorldForm","scene","onSceneChange","onCreate","avatarData","pickAvatar","dropAvatar","eventSceneUrl","eventPreviewUrl","controlledScene","uploadScene","setUploadScene","selectedScene","setSelectedScene","scriptInfo","setScriptInfo","creatingRoom","setCreatingRoom","handleCreateWorld","nameInput","topicInput","isPrivateInput","aliasInput","maxObjectCapInput","renderSceneSelector","sceneUrl","previewUrl","roomAvatarUrl","getHttpUrl","defaultWorlds","isAliasAvail","MAX_OBJECT_CAP","Switch","CreateWorldModal","scenePreviewUrl","setScenePreviewUrl","FeaturedSceneCard","create","setCreate","DiscoverHome","supportRoomSummary","onLoadEvent","eventByOrderKey","ArrowForwardIC","SegmentControl","SegmentControlItem","isSelected","onSelect","BinIC","sceneDataToScene","SceneSubmission","sceneNameInput","sceneDescriptionInput","authorNameInput","licenseInput","authorURLInput","sourceURLInput","sceneName","sceneDescription","sceneAuthorName","sceneLicense","sceneAuthorUrl","sceneSourceUrl","canSave","useOrderString","useMemo","LOWER_CHAR","UPPER_CHAR","getMidStr","validStr","str","charIndex","charCode","newStr","useOrderMove","orderedEvents","order","targetIndex","orderString","startIndex","selectIndex","selectOrder","prevEvent","targetEvent","selectEvent","FeaturedItem","FeatureRoom","allRooms","unFeaturedRoom","formRef","orderedRooms","handleMoveUp","featureRoom","isValidRoomId","firstEvent","firstOrder","prevOrder","removeFeatured","handleSelect","form","roomIdInput","ChevronBottomIC","index","ChevronTopIC","FeatureWorld","allWorlds","unFeaturedWorlds","orderedWorlds","featureWorld","FeatureScene","orderedScenes","handleSave","makeTxnId","DiscoverAdmin","permissions","DiscoverAll","ThumbnailBadgeWrapper","badge","getScenes","useScenes","sender","scenes","setScenes","endPointsRef","setLoading","loadScenes","reset","backward","deleteScene","sceneEvent","event","canLoadBack","DiscoverCreator","showAll","setShowAll","isFeatured","isValidScene","featureScene","unFeatureScene","previewScene","MoreHorizontalIC","DiscoverView","getPowerLevel","canDoAction","canSendStateEvent","usePowerLevels","discoverTab","setDiscoverTab","loadEvent","setLoadEvent","setSupportRoomSummary","userPowerLevel","canFeatureRooms","canFeatureWorlds","canFeatureScenes","isAdmin","mounted","ChevronRightIC","useUpdateScene","sceneStateKey","sceneRoomId","_c","sceneVersion","_d","sceneContent","updateVersion","InviteWorldPreview","WorldPreviewCard","JoinWorldCard","worldIdOrAlias","joinRoomCallback","handleJoinWorld","EnterWorldButton","micPermission","usePermissionState","requestStream","useStreamRequest","micException","setMicException","needsUpdate","setNeedsUpdate","navigateEnterWorld","useWorldNavigator","exitWorld","useWorldLoader","checkForUpdate","updateScene","handleLoadWorld","handleEnterWorld","checkUpdate","stream","exception","track","handleUpdateScene","AlertDialog","exceptionToString","WorldPreview","worldId","worldAtom","selectedWorldId","unknownWorldId","unknownWorldAlias","useUnknownWorldPath","previewWorldId","useRoom","isMemberDialog","setIsMemberDialog","roomStatusLoading","roomStatusError","roomStatus","MemberListDialog","unknownIdOrAlias","RoomStatus","WindowContent","contentClass","WindowAside","CreateWorld","LanguageIC","ScenePreviewOverlay","overlay","use3DAvatar","profileRoom","setAvatarUrl","avatarPreviewUrl","setAvatarPreviewUrl","useStateEventKeyCallback","UserProfileOverview","newDisplayName","setNewDisplayName","immersiveAR","setImmersiveAR","useLocalStorage","renderQuality","setRenderQuality","LOCAL_STORAGE_RENDER_QUALITY","RenderQualitySetting","sceneEditor","setSceneEditor","mainThread","useMainThreadContext","renderQualityOptions","currentQuality","RenderQualityOptions","option","RenderQualityToSetting","tDAvatarPreviewUrl","httpAvatarUrl","resetAvatarUses","isAvatarChanged","debounceDisplayNameChange","SelectInput","UserProfileInventory","UserProfile","selectedSegment","AvatarOutline","RoomTile","isFocused","roomTileClass","RoomTileTitle","AvatarPile","maxAvatars","WorldTileMembers","groupCall","members","filtered","member","getMxIdUsername","WorldSelector","setActiveChat","focused","setFocused","openMember","setMemberOpen","openMemberDialog","closeMemberDialog","openInvite","setInviteOpen","openInviteDialog","closeInviteDialog","InviteDialog","RoomSelector","eventEntry","useRecentMessage","EmptyState","heading","actions","RoomListHome","groupCalls","worlds","worldCat","setWorldCat","roomCat","setRoomCat","openedChatId","openedChatAtom","Category","CategoryHeader","RoomListFriends","WorldSettings","myPowerLevel","newName","setNewName","isPrivateRef","isPrivate","setIsPrivate","worldInfo","setWorldInfo","oldEvent","oldContent","fetchedMaxObjectCap","maxObjectCapRef","setMaxObjectCap","handleNameChange","maxObjectCap","handleMaxObjectCapChange","existingScriptUrl","useInvitesOfType","RoomListNotifications","worldInvites","roomInvites","dmInvites","renderAvatar","isWorld","NowPlaying","leftControls","rightControls","NetworkIC","NowPlayingStatus","status","color","NowPlayingTitle","NowPlayingWorld","world","activeCall","onExitWorld","inviteDialog","setInviteDialog","mute","handleMute","useMuteButton","MessageIC","MicExceptionDialog","MicOffIC","MicIC","manageMuteRequest","CallCrossIC","NowPlayingControls","microphone","setMicrophone","useMicrophoneState","Overlay","calls","useCalls","activeChats","isWorldEntered","repositoryRoom","config","useRoomCall","navigateExitWorld","selectedChat","selectedChatInvite","worldSettingRoom","useDisableInput","isChatOpen","rId","useRoomList","whatsNewAtom","whatsNewDialogAtom","webSGTutDialogAtom","WHATS_NEW_KEY","useWhatsNew","whatsNew","setWhatsNew","run","whatsNewData","whatsNewVersion","lastWhatsNewVersion","WhatsNewNotification","finishWhatsNew","whatsNewDialog","setWhatsNewDialog","webSGTutDialog","OverlayButton","useNotifications","prevDataRef","notifCount","prevCount","NotificationButton","StatusBar","overlayVisible","setOverlayVisibility","overlayVisibilityAtom","setWorldChatVisibility","worldChatVisibilityAtom","isHome","useMatch","knownWorldId","useWorldPath","openOverlay","openNotifications","createHomeWorld","updateHomeWorld","accountData","useHomeWorld","homeWorldId","setHomeWorldId","homeAccountData","homeWorld","useAutoJoinRoom","SearchResultCategory","SearchResultItem","active","subtitle","shortcuts","shortcut","Kbd","SearchResults","results","useMatches","KBarResults","item","defaultActions","CmdPanel","KBarPortal","KBarPositioner","KBarAnimator","KBarSearch","WhatsNewCard","description","WhatsNewModal","createSpecialWorld","WebSceneGraphDialog","WEBSG_ROOM_ID","SCRIPTING_WORLD","WhatsNew","setWebSGTutDialog","setSelectedWorld","entered","webSGRoomId","storeWebSGRoomId","webSGRoom","FIREFOX_PERF_ALERT_KEY","isGecko","FirefoxPerfAlert","alertVisible","setAlertVisible","handleClose","RegisterKBarActions","useUserProfileAction","useAccountManagementAction","useLandingPageAction","SessionView","canvasRef","useInitMainThreadContext","worldAlias","editorEnabled","editorEnabledAtom","DndProvider","HTML5Backend","KBarProvider","MainThreadContextProvider","Outlet","LoadingScreen"],"mappings":"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"}